//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.intangiblesoftware.menslacrossestats
// CFBundleVersion            : 8
// Prefix                     : INSOValidateReceipt
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 1
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __INSOValidateReceipt_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*INSOValidateReceipt_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^INSOValidateReceipt_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _INSOValidateReceipt_ReceiptAttributeType {
        
        // Bundle identifier
        INSOValidateReceipt_ReceiptAttributeTypeBundleId = 2,
        // Application version
        INSOValidateReceipt_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        INSOValidateReceipt_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        INSOValidateReceipt_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        INSOValidateReceipt_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        INSOValidateReceipt_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        INSOValidateReceipt_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        INSOValidateReceipt_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        INSOValidateReceipt_StoreNone = 2212,
        // Bundle identifier
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1) + 1,
        // Application version
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleVersion << 1),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersionData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1) + 1,
        // Opaque value
        INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue << 1),
        // Hash value
        INSOValidateReceipt_StoreReceiptAttributeTypeHash = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeHash << 1),
        // In-app purchase receipt
        INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase << 1),
        // Original Application Version
        INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion << 1),
        // Receipt Expiration Date
        INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeExpirationDate << 1),
        // Quantity
        INSOValidateReceipt_StoreInAppAttributeTypeQuantity = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeQuantity << 1),
        // Product identifier
        INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeProductIdentifer << 1),
        // Transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer << 1),
        // Purchase date
        INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypePurchaseDate << 1),
        // Original transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer << 1),
        // Original purchase date
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate << 1),
        // Subscription Expiration Date
        INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate << 1),
        // Web Order Line Item ID
        INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId << 1),
        // Cancellation Date
        INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeCancellationDate << 1)
        
    } INSOValidateReceipt_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleId]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeQuantity]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _INSOValidateReceipt_CheckingContext {
        CFTypeRef guid_data;
        CFTypeRef dummy0003;
        CFTypeRef receipt_data;
        CFTypeRef inapp_block;
        CFTypeRef dummy0004;
        CFTypeRef ca_data;
        CFTypeRef dummy0002;
        CFTypeRef dummy0007;
        CFTypeRef dummy0008;
        CFTypeRef dummy0005;
        CFTypeRef dummy0006;
        CFTypeRef dummy0000;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0001;
        CFTypeRef main_bundle;
        CFTypeRef inapp_identifiers;
    } INSOValidateReceipt_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _INSOValidateReceipt_ParsingContext {
        const unsigned char * ptr;
        CFTypeRef dictionary;
        CFTypeRef dummy0004;
        CFTypeRef dummy0003;
        const unsigned char * end;
        CFTypeRef dummy0001;
        CFTypeRef dummy0000;
        struct _INSOValidateReceipt_ParsingContext * parent;
        CFTypeRef dummy0002;
    } INSOValidateReceipt_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__INSOValidateReceipt_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__INSOValidateReceipt_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__INSOValidateReceipt_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__INSOValidateReceipt_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__INSOValidateReceipt_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__INSOValidateReceipt_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__INSOValidateReceipt_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__INSOValidateReceipt_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__INSOValidateReceipt_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__INSOValidateReceipt_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__INSOValidateReceipt_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__INSOValidateReceipt_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__INSOValidateReceipt_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__INSOValidateReceipt_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__INSOValidateReceipt_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__INSOValidateReceipt_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__INSOValidateReceipt_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__INSOValidateReceipt_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__INSOValidateReceipt_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__INSOValidateReceipt_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__INSOValidateReceipt_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__INSOValidateReceipt_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__INSOValidateReceipt_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__INSOValidateReceipt_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__INSOValidateReceipt_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__INSOValidateReceipt_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__INSOValidateReceipt_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__INSOValidateReceipt_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__INSOValidateReceipt_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__INSOValidateReceipt_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__INSOValidateReceipt_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__INSOValidateReceipt_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__INSOValidateReceipt_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__INSOValidateReceipt_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__INSOValidateReceipt_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__INSOValidateReceipt_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__INSOValidateReceipt_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__INSOValidateReceipt_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__INSOValidateReceipt_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__INSOValidateReceipt_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__INSOValidateReceipt_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__INSOValidateReceipt_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__INSOValidateReceipt_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__INSOValidateReceipt_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__INSOValidateReceipt_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__INSOValidateReceipt_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__INSOValidateReceipt_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__INSOValidateReceipt_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__INSOValidateReceipt_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__INSOValidateReceipt_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__INSOValidateReceipt_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__INSOValidateReceipt_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__INSOValidateReceipt_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__INSOValidateReceipt_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__INSOValidateReceipt_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__INSOValidateReceipt_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__INSOValidateReceipt_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__INSOValidateReceipt_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__INSOValidateReceipt_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__INSOValidateReceipt_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__INSOValidateReceipt_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__INSOValidateReceipt_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__INSOValidateReceipt_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__INSOValidateReceipt_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__INSOValidateReceipt_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__INSOValidateReceipt_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__INSOValidateReceipt_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__INSOValidateReceipt_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__INSOValidateReceipt_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__INSOValidateReceipt_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__INSOValidateReceipt_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__INSOValidateReceipt_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__INSOValidateReceipt_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__INSOValidateReceipt_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__INSOValidateReceipt_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__INSOValidateReceipt_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__INSOValidateReceipt_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__INSOValidateReceipt_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__INSOValidateReceipt_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__INSOValidateReceipt_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *INSOValidateReceipt_Strings[483] = {
        // "identifierForVendor" / M(Xor3) / S(245) / L(19)
        "\x60\x6d\x6c\x67\x7d\x60\x6f\x60\x6c\x7b\x4f\x66\x7b\x5f\x6c\x67\x6d\x66\x7b\x09",
        // "" / M(None) / S(0) / L(0)
        "\x4c\xd6\x7a\xc4\x94\x72\x7c\x5d\x24\xe6\xbd\xfb\x52\x64\x09\xa1\x19\xd3\xec\x36\x8d\x76\x86\x7b\x08\xf2\x36\xf2\xed\x7a\x58\x09",
        // "CFRelease" / M(Xor4) / S(82) / L(9)
        "\x63\x66\x72\x45\x4c\x45\x41\x53\x45\x20\xbe\x84\xe3\xfa\xaa\xb0",
        // "SHA1" / M(Xor4) / S(214) / L(4)
        "\x33\x28\x21\x51\x60\x5f\xf4\xad\x38\x45\x2f\xc9\x00\x66\x8c\x26",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(175) / L(40)
        "\x49\x4e\x4e\x1a\x4a\x1d\x49\x49\x4d\x1c\x4a\x46\x4c\x1e\x4f\x47\x19\x19\x4a\x47\x1b\x4e\x4b\x1e\x1a\x4d\x4d\x4b\x4a\x4d\x1b\x4e\x46\x47\x1b\x19\x49\x1c\x49\x4f\x7f\xfe\x46\xa5\x03\x61\xd8\xde\x1a",
        // "ASN1_INTEGER_free" / M(Rot) / S(180) / L(17)
        "\xf5\x07\x02\xe5\x13\xfd\x02\x08\xf9\xfb\xf9\x06\x13\x1a\x26\x19\x19\xb4",
        // "" / M(None) / S(0) / L(0)
        "\x93\x67\xe5\x71\x95\x03\xb8\x30\x81\xb5\xa1\xbe\x68\xea\x8c\xbf\x79\x6a\x74\x82\x88\xfe\x04\xe1\x83\x3b\x66\x3d\x89\xe4\xff\xcc",
        // "ASN1_INTEGER_get" / M(Xor3) / S(198) / L(16)
        "\x96\x84\x99\xe6\x88\x9e\x99\x83\x92\x90\x92\x85\x88\xb0\xb2\xa3\xd7",
        // "ASN1_get_object" / M(Rot) / S(208) / L(15)
        "\x11\x23\x1e\x01\x2f\x37\x35\x44\x2f\x3f\x32\x3a\x35\x33\x44\xd0",
        // "CFDataCreate" / M(Xor4) / S(244) / L(12)
        "\x03\x06\x04\x21\x34\x21\x03\x32\x25\x21\x34\x25\x40\x2c\x8d\xd6",
        // "sel_registerName" / M(Rot) / S(189) / L(16)
        "\x30\x22\x29\x1c\x2f\x22\x24\x26\x30\x31\x22\x2f\x0b\x1e\x2a\x22\xbd",
        // "ASN1_OBJECT_free" / M(Rot) / S(34) / L(16)
        "\x63\x75\x70\x53\x81\x71\x64\x6c\x67\x65\x76\x81\x88\x94\x87\x87\x22",
        // "" / M(None) / S(0) / L(0)
        "\x33\x7a\x82\x87\x8c\xee\xd5\x98\x9e\x2f\x3d\x04\xb0\x9f\x03\x32\x83\xe0\x86\x12\x80\x7a\xba\x25\xe0\x5d\x53\x65\x02\x4f\x1d\x64",
        // "kCFTypeArrayCallBacks" / M(Xor2) / S(107) / L(21)
        "\x16\x3e\x3b\x29\x04\x0d\x18\x3c\x0f\x0f\x1c\x04\x3e\x1c\x11\x11\x3f\x1c\x1e\x16\x0e\x7d",
        // "" / M(None) / S(0) / L(0)
        "\xad\x54\x01\xec\xae\x7f\xbb\x17\x50\xba\x77\xfb\x0b\xd2\x2a\x8b\x54\x84\xae\xf4\x21\x29\x6c\x8a\x14\x61\xf2\x5b\x85\xc1\x7d\x60",
        // "" / M(None) / S(0) / L(0)
        "\xf6\x19\x4c\x77\x90\xc2\xed\xe5\x85\x2c\x05\x9c\xfc\xdc\x4d\x24\x23\x41\xa7\x0a\xc1\x33\x16\xc8\xd7\x4c\x73\x25\xfb\xb6\xe4\x5e",
        // "" / M(None) / S(0) / L(0)
        "\xee\x26\x88\x81\xe8\xa0\x55\xe1\xd8\x78\x36\x7e\x1f\x97\xa6\x7d\x7e\x3f\x38\xd0\xc0\x13\x3a\x62\x81\x0b\xee\x04\xa9\xd2\x3f\x15",
        // "d2i_PKCS7_bio" / M(Rot) / S(254) / L(13)
        "\x62\x30\x67\x5d\x4e\x49\x41\x51\x35\x5d\x60\x67\x6d\xfe\xed\x91",
        // "BIO_new" / M(Rot) / S(62) / L(7)
        "\x80\x87\x8d\x9d\xac\xa3\xb5\x3e\xc0\x6e\x31\x77\x60\xb4\x16\x81",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x3f\x43\x4d\x83\xe9\xad\x1d\xae\x4f\x35\xf2\x4c\x7f\xee\xeb\x8e\xfe\x78\x6a\x85\x98\x02\xa8\xef\xb2\x31\x07\xcf\xc3\xa9\xa3",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(30) / L(14)
        "\x70\x72\x6a\x62\x7d\x6b\x5f\x67\x6c\x7d\x6d\x6c\x6a\x77\x1e\xfe",
        // "%02X:" / M(Xor3) / S(40) / L(5)
        "\x1d\x08\x0a\x60\x02\x38\x55\x8f\x92\x88\xaf\x5f\x4d\x73\x0f\x37",
        // "%02X:" / M(Xor1) / S(2) / L(5)
        "\x27\x32\x30\x5a\x38\x02\xaa\x65\xda\x67\x16\x13\xe0\xb5\x85\x55",
        // "CFStringCreateWithBytes" / M(Xor2) / S(53) / L(23)
        "\x56\x53\x46\x61\x67\x7c\x7b\x72\x56\x67\x70\x74\x61\x70\x42\x7c\x61\x7d\x57\x6c\x61\x70\x66\x15\xe6\xcb\x90\x89\x4f\x12\xe4\x3f",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x87\xba\x60\x8b\x1c\x2d\xdb\xb9\x58\x52\x43\x43\xd2\x96\x90\x0a\xd9\x73\xd4\x56\x7b\xbe\x9e\x50\x85\x22\x52\x01\xed\x22\x3e",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(189) / L(23)
        "\xce\xd6\xcf\xf8\xfe\xf8\xf4\xed\xe9\xcf\xf8\xfb\xef\xf8\xee\xf5\xcf\xf8\xec\xe8\xf8\xee\xe9\x9d\x05\xf2\xb0\x8d\x2a\x47\xb6\xc8",
        // "CFArrayAppendValue" / M(Xor4) / S(37) / L(18)
        "\xfc\xf9\xfe\xcd\xcd\xde\xc6\xfe\xcf\xcf\xda\xd1\xdb\xe9\xde\xd3\xca\xda\xbf",
        // "ASN1_OBJECT_free" / M(Xor3) / S(153) / L(16)
        "\xeb\xf9\xe4\x9b\xf5\xe5\xe8\xe0\xef\xe9\xfe\xf5\xcc\xd8\xcf\xcf\xaa",
        // "CFDateCreate" / M(Rot) / S(234) / L(12)
        "\x2d\x30\x2e\x4b\x5e\x4f\x2d\x5c\x4f\x4b\x5e\x4f\xea\xf3\x20\x44",
        // "longjmp" / M(Xor3) / S(205) / L(7)
        "\xb1\xb2\xb3\xba\xb7\xb0\xad\xdd\x5d\x1c\xde\xca\x35\xed\xbc\xb7",
        // "" / M(None) / S(0) / L(0)
        "\x69\x6c\x0d\x1d\xcb\x27\xed\x1b\xf6\xbd\x67\xcc\xa2\x87\xf9\xd7\xaf\xe1\x5c\xdc\x40\xf5\x33\x87\xba\xc2\x7d\x8c\x66\xbf\xcb\xf4",
        // "" / M(None) / S(0) / L(0)
        "\xcc\xa1\x3e\xd0\x3b\x2e\xd9\xe2\x8d\x2d\x93\x19\xbb\xa0\x8a\x8c\xdd\x58\x45\xea\xdb\x59\xe0\xb4\x8b\x79\x14\x0a\x07\xd1\x88\x5f",
        // "X509_free" / M(Xor2) / S(112) / L(9)
        "\x38\x55\x50\x59\x3f\x06\x12\x05\x05\x60\x38\x54\xba\x53\x59\x4f",
        // "PKCS7_free" / M(Rot) / S(38) / L(10)
        "\x76\x71\x69\x79\x5d\x85\x8c\x98\x8b\x8b\x26\x2e\x8c\x71\x48\xea",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(28) / L(25)
        "\x66\x0b\x0e\x07\x61\x70\x7f\x73\x7b\x61\x59\x5b\x4a\x61\x4a\x5b\x46\x4a\x61\x5c\x47\x61\x70\x77\x7a\x3e\x1b\xe4\x60\x96\x87\x5c\x90\xc4",
        // "SHA1_Final" / M(Rot) / S(5) / L(10)
        "\x58\x4d\x46\x36\x64\x4b\x6e\x73\x66\x71\x05\xf2\xd2\x39\x11\x61",
        // "%02x" / M(Xor4) / S(145) / L(4)
        "\x35\x20\x22\x68\x10\x54\xf1\x67\x53\xa1\xb7\xc3\x94\x2c\xa3\xc5",
        // "CFDateCompare" / M(Rot) / S(36) / L(13)
        "\x67\x6a\x68\x85\x98\x89\x67\x93\x91\x94\x85\x96\x89\x24\x1a\xa1",
        // "" / M(None) / S(0) / L(0)
        "\x9c\xc5\x3a\x87\xc9\x2c\x7b\xb7\x42\x57\x7b\x9e\xa1\xc5\x3d\x55\x2f\xce\x7e\xf4\xed\x7d\x1c\x59\x9d\x43\x60\xc5\x51\x16\xb5\xb8",
        // "ASN1_INTEGER_get" / M(Xor2) / S(46) / L(16)
        "\x7e\x6c\x71\x0e\x60\x76\x71\x6b\x7a\x78\x7a\x6d\x60\x58\x5a\x4b\x3f",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xd9\xb4\xae\x33\xf5\x3a\x2b\x02\x47\x01\x99\xcd\xec\x13\xfe\xd9\x98\xe0\x85\xcc\x66\x1a\x90\xf8\x99\x08\x7b\x8b\xb6\x85\x03",
        // "CC_SHA1_Update" / M(Xor1) / S(94) / L(14)
        "\x1d\x1d\x01\x0d\x16\x1f\x6f\x01\x0b\x2e\x3a\x3f\x2a\x3b\x5e\x69",
        // "currentDevice" / M(Xor2) / S(30) / L(13)
        "\x6d\x7b\x7c\x7c\x6b\x60\x7a\x4a\x6b\x78\x67\x6d\x6b\x0e\x44\xf1",
        // "CFBundleVersion" / M(Xor1) / S(66) / L(15)
        "\x01\x04\x00\x37\x2c\x26\x2e\x27\x14\x27\x30\x31\x2b\x2d\x2c\x42",
        // "" / M(None) / S(0) / L(0)
        "\xe4\x51\xaa\xc5\xdb\xfe\xa8\x2c\x8a\x3d\x2d\xb5\xa0\x4a\xb7\x94\x38\x25\x15\x78\x31\x38\xa7\x03\x5c\xdb\x8d\x22\x9a\x75\x8f\x2a",
        // "CC_SHA1_Init" / M(Xor2) / S(232) / L(12)
        "\xbb\xbb\xa7\xab\xb0\xb9\xc9\xa7\xb1\x96\x91\x8c\xf8\xa4\x70\x83",
        // "EVP_DigestInit" / M(Xor4) / S(217) / L(14)
        "\xd5\xc6\xc0\xcf\xd4\xf9\xf7\xf5\xe3\xe4\xd9\xfe\xf9\xe4\x90\x31",
        // "CFDataAppendBytes" / M(Xor1) / S(109) / L(17)
        "\x2e\x2b\x29\x0c\x19\x0c\x2c\x1d\x1d\x08\x03\x09\x2f\x14\x19\x08\x1e\x6d",
        // "" / M(None) / S(0) / L(0)
        "\x56\x42\x56\x7c\xb2\x6c\x65\x23\xc2\x66\xcb\x17\xa5\xcd\xb0\x67\xe9\x95\x48\xc5\xf3\x8c\xef\x1e\x6f\x63\x98\xbd\x86\x01\xbd\xb7",
        // "sha1" / M(Xor3) / S(118) / L(4)
        "\xf5\xee\xe7\xb7\x86\x74\x98\x71\x98\xa7\x1c\x91\x98\x60\x80\xaa",
        // "longjmp" / M(Xor1) / S(187) / L(7)
        "\xd7\xd4\xd5\xdc\xd1\xd6\xcb\xbb\xcb\x87\xe5\xf7\xba\xa8\x6f\xdb",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(103) / L(21)
        "\x0c\x24\x21\x33\x1e\x17\x02\x26\x15\x15\x06\x1e\x24\x06\x0b\x0b\x25\x06\x04\x0c\x14\x67",
        // "start" / M(Xor1) / S(90) / L(5)
        "\x29\x2e\x3b\x28\x2e\x5a\xd8\xe7\x2d\x03\x31\x5e\xd6\x83\xb5\xdc",
        // "sk_value" / M(Xor4) / S(115) / L(8)
        "\x43\x5b\x6f\x46\x51\x5c\x45\x55\x30\xfa\x78\x21\x7e\x67\x52\x4e",
        // "CFDictionaryGetValue" / M(Rot) / S(191) / L(20)
        "\x02\x05\x03\x28\x22\x33\x28\x2e\x2d\x20\x31\x38\x06\x24\x33\x15\x20\x2b\x34\x24\xbf",
        // "" / M(None) / S(0) / L(0)
        "\x2d\x4d\x8f\xda\xf7\xec\x19\x9b\xdf\xa8\xed\xb5\x25\x43\x05\x8f\x72\x03\xa0\x90\x80\x85\x55\x7b\xf0\xe1\xd8\x46\x46\x09\xd2\x49",
        // "BIO_s_mem" / M(Xor3) / S(108) / L(9)
        "\x3e\x35\x33\x23\x0f\x23\x11\x19\x11\x7c\x5f\x3a\xf3\xc2\xfa\xd0",
        // "CFDictionaryGetValue" / M(Xor1) / S(252) / L(20)
        "\xbf\xba\xb8\x95\x9f\x88\x95\x93\x92\x9d\x8e\x85\xbb\x99\x88\xaa\x9d\x90\x89\x99\xfc",
        // "CFDictionaryCreateMutable" / M(Rot) / S(212) / L(25)
        "\x17\x1a\x18\x3d\x37\x48\x3d\x43\x42\x35\x46\x4d\x17\x46\x39\x35\x48\x39\x21\x49\x48\x35\x36\x40\x39\xd4\xa1\x24\x08\xf6\x7a\x6e\x26\x7d",
        // "" / M(None) / S(0) / L(0)
        "\x9c\x37\xab\x5e\xe9\xfd\xe3\xf3\x8b\xe5\x7a\x54\x9a\x4b\x93\xf8\xbb\x76\xb9\xda\x64\x00\x45\x6f\x85\xc4\xca\xb2\x68\xba\xf6\xbb",
        // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(13) / L(29)
        "\x78\x50\x53\x61\x86\x7d\x72\x51\x76\x70\x81\x76\x7c\x7b\x6e\x7f\x86\x58\x72\x86\x50\x6e\x79\x79\x4f\x6e\x70\x78\x80\x0d\xf8\xd1\xea\xae\x03\x3d\x2e\xf1",
        // "SKReceiptRefreshRequest" / M(Xor3) / S(216) / L(23)
        "\xab\xb3\xaa\x9d\x9b\x9d\x91\x88\x8c\xaa\x9d\x9e\x8a\x9d\x8b\x90\xaa\x9d\x89\x8d\x9d\x8b\x8c\xf8\x68\x02\xbf\x2d\x92\x57\x8e\xb8",
        // "CFDateCreate" / M(Xor4) / S(75) / L(12)
        "\xf3\xf6\xf4\xd1\xc4\xd5\xf3\xc2\xd5\xd1\xc4\xd5\xb0\xc2\x64\xa2",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor3) / S(108) / L(31)
        "\xe7\xcf\xca\xd8\xf5\xfc\xe9\xc8\xe5\xef\xf8\xe5\xe3\xe2\xed\xfe\xf5\xda\xed\xe0\xf9\xe9\xcf\xed\xe0\xe0\xce\xed\xef\xe7\xff\x8c",
        // "" / M(None) / S(0) / L(0)
        "\x86\xab\x30\x62\xee\xf5\xa5\x73\x59\xdb\xba\xe9\x8c\x9d\xfd\x5b\x6f\x1e\xaf\x87\x9c\x96\x3c\x87\x2f\x1f\xc4\x97\x26\xbf\x94\xae",
        // "X509_free" / M(Xor2) / S(53) / L(9)
        "\x7d\x10\x15\x1c\x7a\x43\x57\x40\x40\x25\x03\x10\x82\x4d\xf4\x13",
        // "CC_SHA1_Update" / M(Rot) / S(188) / L(14)
        "\xff\xff\x1b\x0f\x04\xfd\xed\x1b\x11\x2c\x20\x1d\x30\x21\xbc\xf0",
        // "BIO_write" / M(Xor2) / S(203) / L(9)
        "\x99\x92\x94\x84\xac\xa9\xb2\xaf\xbe\xdb\x1b\x94\x91\x8d\xfc\x20",
        // "%02X" / M(Xor4) / S(21) / L(4)
        "\x75\x60\x62\x08\x50\x08\x56\xf7\xfd\x84\x58\xa8\x17\x50\xb6\x2d",
        // "NSBundle" / M(Xor1) / S(190) / L(8)
        "\xf0\xed\xfc\xcb\xd0\xda\xd2\xdb\xbe\x83\xbf\x4b\x9c\x11\x71\xe9",
        // "objc_lookUpClass" / M(Xor1) / S(42) / L(16)
        "\x45\x48\x40\x49\x75\x46\x45\x45\x41\x7f\x5a\x69\x46\x4b\x59\x59\x2a",
        // "EVP_DigestInit" / M(Xor3) / S(226) / L(14)
        "\xb7\xa4\xa2\xad\xb6\x9b\x95\x97\x81\x86\xbb\x9c\x9b\x86\xf2\xfa",
        // "dlsym" / M(Xor2) / S(40) / L(5)
        "\x5c\x54\x4b\x41\x55\x38\xa3\x4d\x85\xfc\xf6\xf1\x17\x83\xc1\x4b",
        // "" / M(None) / S(0) / L(0)
        "\xac\xbf\xca\xa7\x5d\xf7\xd1\x92\x22\xd5\x3b\x73\x75\x51\x87\x40\x45\x9a\x17\x6b\x01\x7c\x4f\x01\x77\xe8\x20\x2c\x92\x0c\x12\x16",
        // "" / M(None) / S(0) / L(0)
        "\xe1\x06\x07\x2a\xd4\xc4\x31\xcc\xfe\x43\x57\x2e\x6a\x08\xa4\x1c\xde\x4c\x29\x6e\x04\x87\xa7\x2e\x13\x42\x73\x32\xb3\x3c\x9a\xda",
        // "sk_free" / M(Xor3) / S(211) / L(7)
        "\x90\x88\xbc\x85\x91\x86\x86\xe3\x6f\xc8\xaf\x02\x33\x20\x9d\x37",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(94) / L(22)
        "\x1d\x18\x1f\x2c\x2c\x3f\x27\x19\x3b\x2a\x08\x3f\x32\x2b\x3b\x1f\x2a\x17\x30\x3a\x3b\x26\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x0b\xb7\x97\x4e\x6f\x4c\x7b\x1d\x27\x5f\xee\x51\x69\x8d\x04\x6c\x65\x6f\xc7\x4d\x1e\xdc\x00\x03\x60\xc8\xc7\xbb\xc7\x1f\xcc\x79",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(54) / L(59)
        "\x00\x07\x0c\x07\x73\x0c\x03\x74\x0c\x00\x00\x0c\x04\x75\x0c\x03\x0f\x0c\x05\x77\x0c\x06\x0e\x0c\x70\x70\x0c\x03\x0e\x0c\x72\x07\x0c\x02\x77\x0c\x73\x04\x0c\x04\x02\x0c\x03\x04\x0c\x72\x07\x0c\x0f\x0e\x0c\x72\x70\x0c\x00\x75\x0c\x00\x06\x36\x1d\x53\xea\x61\xce\xe1\x80\x48",
        // "CFDictionaryAddValue" / M(Xor2) / S(21) / L(20)
        "\x43\x46\x44\x69\x63\x74\x69\x6f\x6e\x61\x72\x79\x41\x64\x64\x56\x61\x6c\x75\x65\x00",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(133) / L(19)
        "\xc9\xa4\xa1\xa8\xce\xf6\xf4\xe5\xce\xf4\xe9\xe5\xce\xf3\xe8\xce\xde\xd3\xdb\x91",
        // "" / M(None) / S(0) / L(0)
        "\x05\x44\xfa\xf0\xc1\xfe\xb7\x6b\x77\x57\x18\xea\xae\x58\x11\xf5\x3b\xdc\x65\x8d\xb0\xe8\xc3\x84\x83\xfe\x2a\x99\xe4\x2a\x7a\x66",
        // "" / M(None) / S(0) / L(0)
        "\xee\x0e\x27\xcf\xd5\x8f\xcb\x85\x4e\x4d\x40\x94\xcc\x59\xd8\x84\x9e\x82\x5c\x0e\x09\xe8\x42\xa2\xa0\x39\x97\x85\x17\x33\xdd\x76",
        // "SHA1_Init" / M(Xor1) / S(207) / L(9)
        "\x9c\x87\x8e\xfe\x90\x86\xa1\xa6\xbb\xcf\xdd\xbf\xf5\xad\x49\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x09\xf4\xd2\xb0\xbd\xbe\x22\x2b\xc3\xa2\xdc\xfb\x2e\x19\xf4\x46\xc6\x42\xd3\xe0\x12\x4e\x12\x93\x61\x24\x34\xd9\x93\x1f\xa9\x58",
        // "" / M(None) / S(0) / L(0)
        "\x30\x1b\xa2\x73\x4d\xfb\xfb\x8f\xbb\x10\x9e\xb0\x3b\xc8\x24\x51\xb6\x0c\xe9\x51\xab\xd2\x9d\x7f\x0a\x8b\xb4\xf1\xbb\x9f\x9e\x82",
        // "identifierForVendor" / M(Xor2) / S(176) / L(19)
        "\xcd\xc0\xc1\xca\xd0\xcd\xc2\xcd\xc1\xd6\xe2\xcb\xd6\xf2\xc1\xca\xc0\xcb\xd6\xa4",
        // "CFBundleIdentifier" / M(Xor4) / S(143) / L(18)
        "\xde\xdb\xdf\xe8\xf3\xf9\xf1\xf8\xd4\xf9\xf8\xf3\xe9\xf4\xfb\xf4\xf8\xef\x9d",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(195) / L(66)
        "\x26\x5a\x70\x7a\x7d\x6c\x64\x26\x45\x60\x6b\x7b\x68\x7b\x70\x26\x4f\x7b\x68\x64\x6c\x7e\x66\x7b\x62\x7a\x26\x4a\x66\x7b\x6c\x4f\x66\x7c\x67\x6d\x68\x7d\x60\x66\x67\x27\x6f\x7b\x68\x64\x6c\x7e\x66\x7b\x62\x26\x4a\x66\x7b\x6c\x4f\x66\x7c\x67\x6d\x68\x7d\x60\x66\x67\x09",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(200) / L(24)
        "\x8b\x8e\x8c\xa9\xbc\xad\x8e\xa7\xba\xa5\xa9\xbc\xbc\xad\xba\x9b\xad\xbc\x8e\xa7\xba\xa5\xa9\xbc\xc8\x20\xb9\xdf\xf2\x36\x3d\xd6\xe6",
        // "strncmp" / M(Xor3) / S(251) / L(7)
        "\x78\x7f\x79\x65\x68\x66\x7b\x0b\xb6\xe0\xfc\x89\xd0\xc1\xad\xe5",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor2) / S(151) / L(40)
        "\xc5\xc9\xcb\x88\xcf\xc8\xd2\xc7\xc8\xc1\xcf\xc4\xca\xc3\xd5\xc9\xc0\xd2\xd1\xc7\xd4\xc3\x88\xcb\xc3\xc8\xd5\xca\xc7\xc5\xd4\xc9\xd5\xd5\xc3\xd5\xd2\xc7\xd2\xd5\xa6\x76\x99\x70\x5b\xe0\x30\xdc\xd8",
        // "OBJ_txt2obj" / M(Rot) / S(236) / L(11)
        "\x3b\x2e\x36\x4b\x60\x64\x60\x1e\x5b\x4e\x56\xec\xd8\xfd\x69\x8c",
        // "" / M(None) / S(0) / L(0)
        "\xe8\x2d\x10\x18\x0a\xcd\xb5\xbb\x9a\x2e\xdf\x26\xc3\x12\x82\xa1\xd2\xbb\x2c\xf6\xfd\x8f\x89\xef\xd7\x9e\x1b\x41\xce\xf1\x5e\x4b",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(30) / L(31)
        "\x55\x7d\x78\x6a\x47\x4e\x5b\x7a\x57\x5d\x4a\x57\x51\x50\x5f\x4c\x47\x68\x5f\x52\x4b\x5b\x7d\x5f\x52\x52\x7c\x5f\x5d\x55\x4d\x3e",
        // "CFStringCompare" / M(Rot) / S(92) / L(15)
        "\x9f\xa2\xaf\xd0\xce\xc5\xca\xc3\x9f\xcb\xc9\xcc\xbd\xce\xc1\x5c",
        // "CFNumberCreate" / M(Xor4) / S(194) / L(14)
        "\x63\x66\x6e\x55\x4d\x42\x45\x52\x63\x52\x45\x41\x54\x45\x20\x90",
        // "" / M(None) / S(0) / L(0)
        "\xfa\xdd\xcb\xed\x77\x94\x89\x80\xf0\xea\xbd\x00\x60\xda\x2e\x43\x28\xf8\x9e\xe9\xcb\xe0\x9d\x32\x0d\xd9\xce\xfb\xea\x07\x51\x75",
        // "BIO_free" / M(Xor3) / S(212) / L(8)
        "\xa6\xad\xab\xbb\x82\x96\x81\x81\xe4\x72\xb2\x3d\x11\x4d\x4c\x1a",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(127) / L(36)
        "\x19\x1c\x18\x2f\x34\x3e\x36\x3f\x1d\x3f\x2e\x0c\x3b\x36\x2f\x3f\x1c\x35\x28\x13\x34\x3c\x35\x1e\x33\x39\x2e\x33\x35\x34\x3b\x28\x23\x11\x3f\x23\x5a",
        // "d2i_PKCS7_bio" / M(Xor1) / S(41) / L(13)
        "\x4d\x1b\x40\x76\x79\x62\x6a\x7a\x1e\x76\x4b\x40\x46\x29\x54\xf2",
        // "" / M(None) / S(0) / L(0)
        "\xa8\x11\xde\x4d\x4c\xd0\x04\x86\x5c\x08\x50\x40\x5e\x92\xd0\xe8\x02\xc5\x4a\x92\xa3\x41\xa2\x4d\x28\xc1\xf6\x96\xb0\x74\x79\x75",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(57) / L(29)
        "\x1d\x35\x30\x22\x0f\x06\x13\x32\x1f\x15\x02\x1f\x19\x18\x17\x04\x0f\x3d\x13\x0f\x35\x17\x1a\x1a\x34\x17\x15\x1d\x05\x76\xb0\x14\x9b\x75\x81\x3c\xb3\x73",
        // "currentDevice" / M(Rot) / S(221) / L(13)
        "\x40\x52\x4f\x4f\x42\x4b\x51\x21\x42\x53\x46\x40\x42\xdd\xfd\x6e",
        // "objc_msgSend" / M(Xor4) / S(247) / L(12)
        "\x1f\x12\x1a\x13\x2f\x1d\x03\x17\x23\x15\x1e\x14\x70\xd1\x71\x6a",
        // "CC_SHA1_Init" / M(Rot) / S(107) / L(12)
        "\xae\xae\xca\xbe\xb3\xac\x9c\xca\xb4\xd9\xd4\xdf\x6b\x33\x21\x1e",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(153) / L(31)
        "\x04\xdc\xdf\xed\x12\x09\xfe\xdd\x02\xfc\x0d\x02\x08\x07\xfa\x0b\x12\xef\xfa\x05\x0e\xfe\xdc\xfa\x05\x05\xdb\xfa\xfc\x04\x0c\x99",
        // "appStoreReceiptURL" / M(Xor3) / S(243) / L(18)
        "\x67\x76\x76\x55\x72\x69\x74\x63\x54\x63\x65\x63\x6f\x76\x72\x53\x54\x4a\x06",
        // "CFArrayCreateMutable" / M(Xor3) / S(140) / L(20)
        "\xe2\xe7\xe0\xd3\xd3\xc0\xd8\xe2\xd3\xc4\xc0\xd5\xc4\xec\xd4\xd5\xc0\xc3\xcd\xc4\xa1",
        // "sk_num" / M(Rot) / S(174) / L(6)
        "\x21\x19\x0d\x1c\x23\x1b\xae\x98\x84\x77\x90\x3b\x40\x31\x56\x2e",
        // "" / M(None) / S(0) / L(0)
        "\xb4\xcb\x4c\x72\xef\x91\xef\xfa\x15\x23\xfd\x70\xef\x07\x62\x5d\xff\x9c\x5d\xbd\x71\xc8\xcb\x76\xe5\x15\x48\x7f\x62\x1d\xaf\xa5",
        // "" / M(None) / S(0) / L(0)
        "\x35\xbc\xc9\x46\x57\x30\x03\xeb\x6d\xcf\xd7\x50\xaf\xf6\xab\xc8\x31\x49\xf3\x3b\x6c\x1d\x88\xe7\xfb\x32\xd5\x53\xa3\x85\x0d\x45",
        // "sel_registerName" / M(Xor4) / S(60) / L(16)
        "\x8f\x99\x90\xa3\x8e\x99\x9b\x95\x8f\x88\x99\x8e\xb2\x9d\x91\x99\xfc",
        // "SHA1_Update" / M(Rot) / S(219) / L(11)
        "\x2e\x23\x1c\x0c\x3a\x30\x4b\x3f\x3c\x4f\x40\xdb\xe7\x82\x6d\x8f",
        // "%02x" / M(Xor2) / S(72) / L(4)
        "\x7d\x68\x6a\x20\x58\x3f\x55\xc7\x1b\x1f\xe4\x77\x11\xb0\x8f\xd1",
        // "." / M(Rot) / S(109) / L(1)
        "\x9b\x6d\x01\x57\x64\xb4\xfe\x48\x57\x3b\x2c\x05\xc4\x2a\xa7\x25",
        // "BIO_s_mem" / M(Xor1) / S(93) / L(9)
        "\x1f\x14\x12\x02\x2e\x02\x30\x38\x30\x5d\xd9\x5a\xa7\x89\xd0\xc1",
        // "strlen" / M(Xor4) / S(78) / L(6)
        "\x93\x94\x92\x8c\x85\x8e\xe0\xaf\x84\x9e\x11\x3b\x84\xd3\xa4\xaf",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(2) / L(59)
        "\x38\x33\x3c\x33\x67\x3c\x37\x64\x3c\x38\x38\x3c\x34\x65\x3c\x37\x3b\x3c\x35\x63\x3c\x32\x3a\x3c\x68\x68\x3c\x37\x3a\x3c\x66\x33\x3c\x36\x63\x3c\x67\x34\x3c\x34\x36\x3c\x37\x34\x3c\x66\x33\x3c\x3b\x3a\x3c\x66\x68\x3c\x38\x65\x3c\x38\x32\x02\xe2\xeb\x32\xc3\xe1\xa9\x1f\x35",
        // "" / M(None) / S(0) / L(0)
        "\xeb\xc4\x33\x26\x9f\x13\x05\xe9\xd3\xda\x0d\xe1\x34\x1f\x0a\xc3\x5e\x3b\x1f\x83\xe2\x73\x57\x16\xbb\xfa\x83\xa6\xfd\xca\xfd\x47",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(17) / L(24)
        "\x7c\x54\x57\x55\x72\x85\x76\x57\x80\x83\x7e\x72\x85\x85\x76\x83\x65\x7a\x7e\x76\x6b\x80\x7f\x76\x11\xcb\x1d\xb9\x92\x00\xbb\xe7\x0e",
        // "CFNumberCreate" / M(Xor4) / S(172) / L(14)
        "\x83\x86\x8e\xb5\xad\xa2\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\xc0\x6d",
        // "%02x" / M(Xor3) / S(14) / L(4)
        "\x3b\x2e\x2c\x66\x1e\x92\x35\xc2\xc2\x2f\xfc\xe9\x91\x37\x3c\xf8",
        // "UIDevice" / M(Rot) / S(59) / L(8)
        "\x90\x84\x7f\xa0\xb1\xa4\x9e\xa0\x3b\x9b\xa2\x47\x9f\xe9\xd0\x81",
        // "dlopen" / M(Xor1) / S(50) / L(6)
        "\x56\x5e\x5d\x42\x57\x5c\x32\x9f\x54\xe4\xf3\x56\xef\x7b\xc0\xb0",
        // "BIO_new" / M(Xor2) / S(237) / L(7)
        "\xbf\xb4\xb2\xa2\x93\x98\x8a\xfd\x24\x7d\x3a\xfd\x47\x33\x53\x69",
        // "CFReadStreamOpen" / M(Xor3) / S(172) / L(16)
        "\xfe\xfb\xef\xd8\xdc\xd9\xee\xc9\xcf\xd8\xdc\xd0\xf2\xcd\xd8\xd3\xbd",
        // "dlsym" / M(Xor2) / S(246) / L(5)
        "\x82\x8a\x95\x9f\x8b\xe6\x61\x0a\x12\x38\x79\x6f\x6b\x9a\x78\xa7",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(190) / L(24)
        "\x9c\x99\x9d\xaa\xb1\xbb\xb3\xba\x8a\xb1\xb3\xb0\xbe\xbb\x9a\xa7\xba\xbc\xaa\xab\xbe\xbd\xb3\xba\xdf\xb8\x51\xa5\x45\x13\xc0\xf3\xba",
        // "EVP_get_digestbyname" / M(Xor1) / S(49) / L(20)
        "\x74\x67\x61\x6e\x56\x54\x45\x6e\x55\x58\x56\x54\x42\x45\x53\x48\x5f\x50\x5c\x54\x31",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(80) / L(26)
        "\x30\x35\x21\x16\x12\x17\x20\x07\x01\x16\x12\x1e\x30\x01\x16\x12\x07\x16\x24\x1a\x07\x1b\x35\x1a\x1f\x16\x73\x77\x68\xa1\x80\x1d\x73\x02\x37",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x55\xae\xc0\xc0\xe5\xcf\xad\x49\xae\x15\x36\x98\x2b\x46\x17\x1f\xf6\xb7\x06\xfa\x43\xaa\xcd\x2e\xaf\x6d\xf1\x3c\xab\x8f\x56",
        // "" / M(None) / S(0) / L(0)
        "\xe7\x28\x13\xe1\x56\x3a\x2e\xc0\xac\x24\xa4\x2e\x6e\xed\xb8\x6f\xf2\x3e\x34\x5c\xff\xc7\xc6\x23\x4a\xc3\x33\xe4\x7d\x3a\xc0\x7a",
        // "CFArrayCreateMutable" / M(Xor4) / S(220) / L(20)
        "\x4f\x4a\x4d\x7e\x7e\x6d\x75\x4f\x7e\x69\x6d\x78\x69\x41\x79\x78\x6d\x6e\x60\x69\x0c",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(69) / L(24)
        "\x27\x22\x26\x11\x0a\x00\x08\x01\x31\x0a\x08\x0b\x05\x00\x21\x1c\x01\x07\x11\x10\x05\x06\x08\x01\x64\x8a\x9e\x98\x81\xc3\x47\x9a\x3b",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(198) / L(19)
        "\x9e\xf3\xf6\xff\x99\xa1\xa3\xb2\x99\xa3\xbe\xb2\x99\xa4\xbf\x99\x89\x84\x8c\xc6",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(219) / L(66)
        "\x7e\x02\x28\x22\x25\x34\x3c\x7e\x1d\x38\x33\x23\x30\x23\x28\x7e\x17\x23\x30\x3c\x34\x26\x3e\x23\x3a\x22\x7e\x12\x3e\x23\x34\x17\x3e\x24\x3f\x35\x30\x25\x38\x3e\x3f\x7f\x37\x23\x30\x3c\x34\x26\x3e\x23\x3a\x7e\x12\x3e\x23\x34\x17\x3e\x24\x3f\x35\x30\x25\x38\x3e\x3f\x51",
        // "UIDevice" / M(Rot) / S(170) / L(8)
        "\xff\xf3\xee\x0f\x20\x13\x0d\x0f\xaa\xdf\xe3\x5a\x56\xda\xb9\xe2",
        // "X509_STORE_add_cert" / M(Xor1) / S(96) / L(19)
        "\x38\x55\x50\x59\x3f\x33\x34\x2f\x32\x25\x3f\x01\x04\x04\x3f\x03\x05\x12\x14\x60",
        // "CFDateCompare" / M(Rot) / S(45) / L(13)
        "\x70\x73\x71\x8e\xa1\x92\x70\x9c\x9a\x9d\x8e\x9f\x92\x2d\xd6\xba",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(38) / L(24)
        "\x2c\x04\x01\x03\x26\x33\x22\x01\x28\x35\x2a\x26\x33\x33\x22\x35\x13\x2e\x2a\x22\x1d\x28\x29\x22\x47\x64\x80\x4d\x1c\xb1\x96\x10\x2c",
        // "CFDataCreate" / M(Xor4) / S(81) / L(12)
        "\x53\x56\x54\x71\x64\x71\x53\x62\x75\x71\x64\x75\x10\x9d\x41\x05",
        // "" / M(None) / S(0) / L(0)
        "\x77\x9e\xc5\xd2\x72\x1a\x2b\xab\x7c\x4a\x1e\xf6\x83\xaa\xd1\xea\x1e\xdd\x5b\x2b\x17\xf4\xb9\x4b\xdf\x34\xb6\x1e\x5c\x9a\x61\xd5",
        // "" / M(None) / S(0) / L(0)
        "\x97\xd6\x48\xfa\xc4\x1e\x07\xfd\x64\x2f\xb9\x0d\xfd\x1a\xc6\xe9\x77\x5e\x54\xbf\x51\x67\xe5\x69\xaf\x0a\xce\xc0\xc7\x1a\x2e\x73",
        // "CFReadStreamRead" / M(Xor4) / S(192) / L(16)
        "\x83\x86\x92\xa5\xa1\xa4\x93\xb4\xb2\xa5\xa1\xad\x92\xa5\xa1\xa4\xc0",
        // "NSBundle" / M(Xor2) / S(52) / L(8)
        "\x6a\x77\x66\x51\x4a\x40\x48\x41\x24\x8d\xd8\x27\x6c\x4a\x27\xba",
        // "%02X" / M(Xor4) / S(207) / L(4)
        "\xd5\xc0\xc2\xa8\xf0\x36\x18\x75\xf8\xe0\x2a\xf8\x52\x37\xee\xa7",
        // "EVP_get_digestbyname" / M(Xor2) / S(75) / L(20)
        "\x1b\x08\x0e\x01\x39\x3b\x2a\x01\x3a\x37\x39\x3b\x2d\x2a\x3c\x27\x30\x3f\x33\x3b\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x63\x39\x65\xf1\xc8\xdf\x08\xb1\xfe\xbe\x42\x22\x7d\x21\xf1\x14\x52\xa8\x6b\xd4\xbb\x05\x37\x98\x9c\xb6\xdd\xbe\x86\xcc\xe2\x54",
        // "d2i_X509_bio" / M(Xor2) / S(211) / L(12)
        "\xa7\xf1\xaa\x9c\x9b\xf6\xf3\xfa\x9c\xa1\xaa\xac\xc3\xb7\x7c\xe4",
        // "" / M(None) / S(0) / L(0)
        "\x19\xfd\xda\xdf\x92\x00\x86\x5d\x33\xed\xe8\xd9\x87\x10\xb9\xab\xf1\x79\x3f\x5f\x00\x9d\xd7\x86\x9d\xd5\x0f\xb1\x0d\xd0\x6c\x84",
        // "objc_msgSend" / M(Xor4) / S(110) / L(12)
        "\x8f\x82\x8a\x83\xbf\x8d\x93\x87\xb3\x85\x8e\x84\xe0\x1c\x5b\x26",
        // "" / M(None) / S(0) / L(0)
        "\xb1\xab\xd9\x35\x4c\xcf\xf6\x24\x96\xc8\xfc\x0b\x4f\xc0\x5e\x9b\xe4\x7b\xe2\xcc\xd6\xa2\xb6\x45\x6c\x12\x94\xcb\x14\x40\x40\xa2",
        // "" / M(None) / S(0) / L(0)
        "\x1d\x23\xc3\xb1\x72\x5d\xbd\x65\x96\x94\x76\x1c\x05\x3b\x5f\xdd\xce\x5f\xb0\xa5\x61\xe8\x37\xd3\xf9\x76\x01\x32\x83\xe9\xa9\x01",
        // "" / M(None) / S(0) / L(0)
        "\xca\x42\xb9\x81\x19\xf1\xf8\xa7\xed\x92\xbb\xe1\x2b\x27\x49\x19\xcb\x02\x9f\x54\x53\x84\x06\x06\xcf\x82\x35\x38\x71\xd0\xae\xb0",
        // "CFBundleGetMainBundle" / M(Xor3) / S(212) / L(21)
        "\xa9\xac\xa8\x9f\x84\x8e\x86\x8f\xad\x8f\x9e\xa7\x8b\x83\x84\xa8\x9f\x84\x8e\x86\x8f\xea",
        // "" / M(None) / S(0) / L(0)
        "\x78\xba\x4c\x7e\x2c\x11\xc1\x22\x6f\x8b\x8c\x07\xf7\xd0\xeb\xeb\x30\x6e\x6c\x93\x67\x63\xc5\x26\x54\xb7\x37\x77\x55\x82\x71\xae",
        // "" / M(None) / S(0) / L(0)
        "\x29\xa7\x02\x9a\xfe\xce\x5c\x97\x30\xbc\xa5\x8f\x6e\x5f\x4a\x40\x29\x54\x1b\xa6\xfe\x71\x14\xd1\x83\x70\xcd\xae\xf4\xcb\x77\xf9",
        // "CFDictionarySetValue" / M(Xor4) / S(85) / L(20)
        "\xba\xbf\xbd\x90\x9a\x8d\x90\x96\x97\x98\x8b\x80\xaa\x9c\x8d\xaf\x98\x95\x8c\x9c\xf9",
        // "sha1" / M(Rot) / S(240) / L(4)
        "\x63\x58\x51\x21\xf0\xb0\x39\x30\x2e\x36\xe5\xd9\x8c\xc1\x1e\xbe",
        // "PKCS7_free" / M(Xor3) / S(43) / L(10)
        "\x6b\x70\x78\x68\x0c\x64\x5d\x49\x5e\x5e\x3b\x00\x55\x3b\x63\x19",
        // "CC_SHA1_Update" / M(Xor4) / S(204) / L(14)
        "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x95\xb0\xa4\xa1\xb4\xa5\xc0\x52",
        // "Apple Root CA" / M(Xor2) / S(115) / L(13)
        "\x22\x13\x13\x0f\x06\x43\x31\x0c\x0c\x17\x43\x20\x22\x63\x13\xc3",
        // "X509_STORE_free" / M(Xor3) / S(94) / L(15)
        "\x36\x5b\x5e\x57\x31\x3d\x3a\x21\x3c\x2b\x31\x08\x1c\x0b\x0b\x6e",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x2d\x69\x78\x7d\xb6\xad\x14\xeb\x8c\x96\x1a\x5a\xec\x5d\x9a\x79\xa1\x1a\x3c\xee\x1c\x1f\x76\x7f\x83\x51\x33\x70\xbc\xdd\xc2",
        // "" / M(None) / S(0) / L(0)
        "\xf7\x2a\x1e\x11\xb0\x73\xd1\x18\x3c\x21\x1f\x29\x59\x10\xc7\x72\x7d\x21\x08\x21\xfa\x9c\x23\xf1\xd8\x33\xfd\xc4\xba\x29\xc4\x31",
        // "X509_STORE_free" / M(Xor3) / S(2) / L(15)
        "\x4a\x27\x22\x2b\x4d\x41\x46\x5d\x40\x57\x4d\x74\x60\x77\x77\x12",
        // "CFBundleGetMainBundle" / M(Rot) / S(172) / L(21)
        "\xef\xf2\xee\x21\x1a\x10\x18\x11\xf3\x11\x20\xf9\x0d\x15\x1a\xee\x21\x1a\x10\x18\x11\xac",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(155) / L(24)
        "\x95\xcf\xc9\xc8\x95\xd6\xd3\xd8\x95\xd6\xd3\xd8\xe9\xc3\xc9\xce\xdf\xd7\x94\xde\xc3\xd6\xd3\xd8\xba\xf7\x3d\x04\xd1\x3f\xa9\xbd\x0a",
        // "CFBundleGetIdentifier" / M(Xor4) / S(23) / L(21)
        "\xb9\xbc\xb8\x8f\x94\x9e\x96\x9f\xbd\x9f\x8e\xb3\x9e\x9f\x94\x8e\x93\x9c\x93\x9f\x88\xfa",
        // "" / M(None) / S(0) / L(0)
        "\xbf\x9f\x47\xa7\xdd\xb7\x65\xea\xcc\xbb\xca\x77\xa7\x81\xc1\xfe\x20\x2e\x92\x11\x65\xe5\x5e\xab\x00\xe1\xbd\x8b\xf6\x87\xeb\x95",
        // "alloc" / M(Xor4) / S(208) / L(5)
        "\x61\x6c\x6c\x6f\x63\x00\xe8\xb2\x9d\x73\x72\x37\x7f\x1e\x8f\x28",
        // "SKReceiptRefreshRequest" / M(Xor1) / S(150) / L(23)
        "\xc5\xdd\xc4\xf3\xf5\xf3\xff\xe6\xe2\xc4\xf3\xf0\xe4\xf3\xe5\xfe\xc4\xf3\xe7\xe3\xf3\xe5\xe2\x96\xc9\x27\x6b\x3e\xe5\xb6\xbe\xb5",
        // "CFDataCreate" / M(Rot) / S(176) / L(12)
        "\xf3\xf6\xf4\x11\x24\x11\xf3\x22\x15\x11\x24\x15\xb0\x25\x9d\x64",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(202) / L(25)
        "\x97\x92\x90\xbd\xb7\xa0\xbd\xbb\xba\xb5\xa6\xad\x97\xa6\xb1\xb5\xa0\xb1\x99\xa1\xa0\xb5\xb6\xb8\xb1\xd4\xf2\x6d\x2e\xf0\x75\xb3\x77\xdd",
        // "CFStringCreateWithCString" / M(Xor4) / S(200) / L(25)
        "\xd3\xd6\xc3\xe4\xe2\xf9\xfe\xf7\xd3\xe2\xf5\xf1\xe4\xf5\xc7\xf9\xe4\xf8\xd3\xc3\xe4\xe2\xf9\xfe\xf7\x90\x7d\x51\x20\x29\x19\x48\xab\x51",
        // "CFDataGetBytePtr" / M(Xor3) / S(198) / L(16)
        "\x94\x91\x93\xb6\xa3\xb6\x90\xb2\xa3\x95\xae\xa3\xb2\x87\xa3\xa5\xd7",
        // "8" / M(Xor3) / S(87) / L(1)
        "\x5f\x67\x34\xe6\x07\x10\x93\x32\x24\x22\x2e\x0b\x25\x3a\xc6\x2d",
        // "CC_SHA1_Final" / M(Xor2) / S(250) / L(13)
        "\xa9\xa9\xb5\xb9\xa2\xab\xdb\xb5\xac\x83\x84\x8b\x86\xea\x7d\x41",
        // "" / M(None) / S(0) / L(0)
        "\xf0\x60\x95\xb9\xac\x45\xda\x39\x71\x2e\xe2\xd6\xc9\xdb\xba\x54\xee\xa7\xc7\xec\x51\x90\x0c\x4a\x61\x7d\xb0\x13\x88\x1c\xf1\xca",
        // "CFStringCreateWithCString" / M(Xor2) / S(198) / L(25)
        "\xa7\xa2\xb7\x90\x96\x8d\x8a\x83\xa7\x96\x81\x85\x90\x81\xb3\x8d\x90\x8c\xa7\xb7\x90\x96\x8d\x8a\x83\xe4\x3c\xf1\x9d\x21\xb2\x14\x22\x4c",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(25) / L(40)
        "\x1e\x19\x19\x6d\x1d\x6a\x1e\x1e\x1a\x6b\x1d\x11\x1b\x69\x18\x10\x6e\x6e\x1d\x10\x6c\x19\x1c\x69\x6d\x1a\x1a\x1c\x1d\x1a\x6c\x19\x11\x10\x6c\x6e\x1e\x6b\x1e\x18\x28\x05\x27\xb6\xb4\x25\x93\x1a\xab",
        // "CFStringCompare" / M(Xor2) / S(32) / L(15)
        "\x73\x76\x63\x44\x42\x59\x5e\x57\x73\x5f\x5d\x40\x51\x42\x55\x30",
        // "SHA1" / M(Xor4) / S(49) / L(4)
        "\x43\x58\x51\x21\x10\xb4\x9a\x2c\xfd\x98\xf0\xc3\x32\x5a\xb1\xd5",
        // "ASN1_INTEGER_free" / M(Xor4) / S(135) / L(17)
        "\x3f\x2d\x30\x4f\x21\x37\x30\x2a\x3b\x39\x3b\x2c\x21\x18\x0c\x1b\x1b\x7e",
        // "SHA1_Init" / M(Xor4) / S(188) / L(9)
        "\x93\x88\x81\xf1\x9f\x89\xae\xa9\xb4\xc0\xa8\x68\x48\xc8\x2e\xf9",
        // "" / M(None) / S(0) / L(0)
        "\xac\x71\x94\x83\xb1\x28\x5d\x6b\x2a\x88\x68\x34\xaf\xdd\x63\xe1\x63\x30\x71\x8d\x48\x05\x11\x25\xe8\xbc\xa4\x20\xb8\xab\x57\x5e",
        // "" / M(None) / S(0) / L(0)
        "\x24\xf8\xb7\xfb\x95\x15\xab\x8c\x39\x2a\xc2\x7b\x46\x49\xcc\x4d\x63\x08\x31\x0d\x10\x67\xe9\xfc\xf6\x5c\xaa\x4b\xda\x3d\xc2\xe8",
        // "sk_value" / M(Xor2) / S(243) / L(8)
        "\x90\x88\xbc\x95\x82\x8f\x96\x86\xe3\x40\xe1\x83\xcc\x15\x62\x94",
        // "" / M(None) / S(0) / L(0)
        "\xc3\xa7\x95\x75\x6e\xd4\x33\xc2\xc0\xa8\xf7\x73\x97\x4f\x6b\x66\x43\xd3\x97\x21\x26\x24\x5e\xab\xae\xdd\xc9\xe5\x95\x7f\xaa\x35",
        // "PKCS7_verify" / M(Xor2) / S(165) / L(12)
        "\xe5\xfe\xf6\xe6\x82\xea\xc3\xd0\xc7\xdc\xd3\xcc\xb5\xf2\xad\x9f",
        // "CFEqual" / M(Xor2) / S(56) / L(7)
        "\x6b\x6e\x6d\x59\x5d\x49\x44\x28\xd5\xfe\x0d\x40\x0e\x9c\xd1\x34",
        // "" / M(None) / S(0) / L(0)
        "\x7f\x87\x13\x37\x4c\x18\x39\xdb\xb6\x8e\x87\xa3\x6b\xaf\xd6\x5c\x06\xd4\xf3\x4f\xca\x5d\xf8\xcb\xd8\xfe\x8e\xbd\x1a\x89\x28\xdb",
        // "" / M(None) / S(0) / L(0)
        "\xae\x0c\x68\x82\x13\xdd\xe0\x1f\x44\xcb\x91\x94\x51\x22\x03\xf6\x70\x4f\xf7\xa7\xd6\xda\xb6\x39\x7f\x14\xb5\xa9\xbf\x13\x65\x01",
        // "" / M(None) / S(0) / L(0)
        "\x3c\xc8\xef\x04\x1e\xc3\x41\xb9\x3e\xce\x08\xc1\xbe\x10\x3c\x93\xa9\x51\xeb\x5d\xf9\x99\x96\x5e\x69\xda\x98\x98\xad\xc9\xb9\x64",
        // "" / M(None) / S(0) / L(0)
        "\xa3\x92\xfb\xc1\xab\xb6\x3d\x81\x20\x63\x0e\xed\x47\x03\x0f\xec\xe2\x19\xc3\xae\x84\xae\x74\x56\x32\xc7\x8e\x75\x15\xc2\xd6\x7d",
        // "" / M(None) / S(0) / L(0)
        "\x60\xbb\xdb\x35\xce\x67\xea\x0a\x17\x54\x33\x7c\xff\x53\xae\x8d\x6a\x80\x6c\x0a\xa5\x44\x31\xb8\xcd\xe7\xa1\x54\x4d\xe6\xa4\x77",
        // "" / M(None) / S(0) / L(0)
        "\xdd\x5d\x03\xda\x35\x96\x32\xf1\x4c\xc0\x2b\x5c\x90\x7f\xdb\x5e\xb1\xe6\x9b\x09\x65\x18\x55\x00\x21\x56\x7c\x2e\x3c\xdd\x5d\xa0",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x37\x32\xcb\xad\x8d\x30\x7c\x05\xe4\xb7\x50\x8f\x50\xc4\xea\x98\x0a\xef\xb4\xcd\xf5\x3a\x13\x28\x05\xa8\xf3\x09\xef\x5a\x47",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(52) / L(23)
        "\xcf\xf0\xe5\xee\xd3\xd3\xcc\xdf\xe1\xe4\xe4\xdf\xe1\xec\xec\xdf\xe4\xe9\xe7\xe5\xf3\xf4\xf3\x80\xcc\xca\xeb\x1f\x3a\x42\x5d\x87",
        // "CFArrayGetCount" / M(Xor2) / S(65) / L(15)
        "\x12\x17\x10\x23\x23\x30\x28\x16\x34\x25\x12\x3e\x24\x3f\x25\x51",
        // "" / M(None) / S(0) / L(0)
        "\xf0\xfe\x1f\x79\xb1\x42\xba\xc1\xb7\xdc\xa2\x40\x99\x71\x68\x92\x47\x24\x8d\x18\x9a\x58\x3d\xa7\xea\xaa\xaf\xbd\x63\x42\xd9\x5d",
        // "EVP_DigestInit" / M(Rot) / S(57) / L(14)
        "\x7e\x8f\x89\x98\x7d\xa2\xa0\x9e\xac\xad\x82\xa7\xa2\xad\x39\x22",
        // "X509_STORE_free" / M(Xor4) / S(201) / L(15)
        "\xc8\xa5\xa0\xa9\xcf\xc3\xc4\xdf\xc2\xd5\xcf\xf6\xe2\xf5\xf5\x90",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor4) / S(147) / L(40)
        "\x40\x4c\x4e\x0d\x4a\x4d\x57\x42\x4d\x44\x4a\x41\x4f\x46\x50\x4c\x45\x57\x54\x42\x51\x46\x0d\x4e\x46\x4d\x50\x4f\x42\x40\x51\x4c\x50\x50\x46\x50\x57\x42\x57\x50\x23\x9a\x15\x25\x18\xe4\x58\x6f\xd2",
        // "CFBundleGetIdentifier" / M(Xor4) / S(11) / L(21)
        "\xb1\xb4\xb0\x87\x9c\x96\x9e\x97\xb5\x97\x86\xbb\x96\x97\x9c\x86\x9b\x94\x9b\x97\x80\xf2",
        // "" / M(None) / S(0) / L(0)
        "\xc7\x21\xd8\x64\x50\xbb\x82\xf7\x34\xd2\x63\xe1\xd2\x35\xf8\x82\xe0\x24\x66\xd6\x0b\x58\xf8\x59\x15\x24\x9b\xec\x54\x30\x2a\xb7",
        // "X509_digest" / M(Xor1) / S(196) / L(11)
        "\x9c\xf1\xf4\xfd\x9b\xa0\xad\xa3\xa1\xb7\xb0\xc4\xe6\xe7\x85\x8b",
        // "CFDataAppendBytes" / M(Xor1) / S(44) / L(17)
        "\x6f\x6a\x68\x4d\x58\x4d\x6d\x5c\x5c\x49\x42\x48\x6e\x55\x58\x49\x5f\x2c",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(227) / L(66)
        "\x09\x75\x5f\x55\x52\x43\x4b\x09\x6a\x4f\x44\x54\x47\x54\x5f\x09\x60\x54\x47\x4b\x43\x51\x49\x54\x4d\x55\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x08\x40\x54\x47\x4b\x43\x51\x49\x54\x4d\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x26",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x5f\xce\x4f\x93\x65\xee\x3a\x47\xd4\xbf\xc3\x47\x2d\x84\xf4\x91\x00\x55\x1e\xa1\x77\xd4\x65\xd5\x83\x08\x9e\x25\x27\x73\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x85\x4b\x2a\x59\xcb\xa8\x6d\x31\x22\x11\xe6\x8c\x09\x02\x0d\x0a\x3d\xca\xa2\x1f\xd6\xcc\xe1\xb6\x3f\x51\x64\xb6\x34\x0f\x1d\xd1",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(156) / L(32)
        "\xc4\xc4\xc4\xc4\x9a\x90\x9a\xf0\xf0\x9a\x90\x9a\xd9\xd9\x9a\xe9\x9a\xf5\xf5\x9a\x87\x9a\xd0\xd0\x9a\x87\x9a\xce\xce\x9a\xe7\x9a\xbd",
        // "Apple Root CA" / M(Xor2) / S(215) / L(13)
        "\x86\xb7\xb7\xab\xa2\xe7\x95\xa8\xa8\xb3\xe7\x84\x86\xc7\x10\xa6",
        // "UIDevice" / M(Rot) / S(201) / L(8)
        "\x1e\x12\x0d\x2e\x3f\x32\x2c\x2e\xc9\xb7\x31\x2d\x33\x2d\xb2\x00",
        // "CFReadStreamRead" / M(Xor3) / S(216) / L(16)
        "\xaa\xaf\xbb\x8c\x88\x8d\xba\x9d\x9b\x8c\x88\x84\xbb\x8c\x88\x8d\xe9",
        // "CFBundleGetIdentifier" / M(Xor2) / S(59) / L(21)
        "\x6e\x6b\x6f\x58\x43\x49\x41\x48\x6a\x48\x59\x64\x49\x48\x43\x59\x44\x4b\x44\x48\x5f\x2d",
        // "PKCS7_get0_signers" / M(Xor2) / S(114) / L(18)
        "\x31\x2a\x22\x32\x56\x3e\x06\x04\x15\x51\x3e\x12\x08\x06\x0f\x04\x13\x12\x61",
        // "appStoreReceiptURL" / M(Xor4) / S(189) / L(18)
        "\x66\x77\x77\x54\x73\x68\x75\x62\x55\x62\x64\x62\x6e\x77\x73\x52\x55\x4b\x07",
        // "identifierForVendor" / M(Xor1) / S(196) / L(19)
        "\xad\xa0\xa1\xaa\xb0\xad\xa2\xad\xa1\xb6\x82\xab\xb6\x92\xa1\xaa\xa0\xab\xb6\xc4",
        // "" / M(None) / S(0) / L(0)
        "\xbe\xb6\x2e\x0a\x21\x91\xf9\xf9\xfa\x96\x94\x3f\x3e\xb3\x85\xeb\x8a\x72\x58\x15\x8d\x52\x31\xf6\x26\x7d\x1a\xcf\xc5\x76\x51\x76",
        // "init" / M(Xor4) / S(13) / L(4)
        "\xb9\xbe\xb9\xa4\xd0\x04\xa6\x35\x74\x49\xf2\x3b\x81\x12\xb7\x03",
        // "BIO_free" / M(Xor1) / S(77) / L(8)
        "\x0f\x04\x02\x12\x2b\x3f\x28\x28\x4d\x02\x16\x36\x6e\x9f\xb4\x6b",
        // "CFDateFormatterCreate" / M(Xor3) / S(82) / L(21)
        "\x2b\x2e\x2c\x09\x1c\x0d\x2e\x07\x1a\x05\x09\x1c\x1c\x0d\x1a\x2b\x1a\x0d\x09\x1c\x0d\x68",
        // "CFReadStreamRead" / M(Xor2) / S(250) / L(16)
        "\xa8\xad\xb9\x8e\x8a\x8f\xb8\x9f\x99\x8e\x8a\x86\xb9\x8e\x8a\x8f\xeb",
        // "" / M(None) / S(0) / L(0)
        "\x77\xa6\x71\x34\x09\x75\x1a\xa7\xdd\xee\x6c\x75\x20\xad\xb1\xe2\x49\x2e\x57\xcc\x37\xc6\x9e\xc8\x0c\x64\xe7\x0c\x68\xa8\xa6\x17",
        // "PKCS7_get0_signers" / M(Xor3) / S(20) / L(18)
        "\x77\x6c\x64\x74\x10\x78\x40\x42\x53\x17\x78\x54\x4e\x40\x49\x42\x55\x54\x27",
        // "sk_free" / M(Xor3) / S(170) / L(7)
        "\xc9\xd1\xe5\xdc\xc8\xdf\xdf\xba\x6c\x34\x19\x89\x3f\xa5\x33\x5e",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(198) / L(39)
        "\x85\x80\x92\xaf\xab\xa3\x9c\xa9\xa8\xa3\x85\xb4\xa3\xa7\xb2\xa3\x91\xaf\xb2\xae\x92\xaf\xab\xa3\x8f\xa8\xb2\xa3\xb4\xb0\xa7\xaa\x80\xb4\xa9\xab\x81\x8b\x92\xc6\xdf\x63\x40\x2e\xe4\x4b\xba\x53",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x9f\xa3\x52\x78\x92\x36\xd4\x3e\xb4\xba\xc1\xea\x45\xa5\xb2\xd8\x0b\x10\x20\x72\xa2\x0b\x18\x2d\x3f\x9b\x1b\xb9\xbb\xc0\x5e",
        // "" / M(None) / S(0) / L(0)
        "\xf9\x1c\x6f\xed\x71\xac\x25\x2e\xb1\xe1\xc0\x07\x59\xa6\x30\xad\xb7\x5e\xc8\xff\xf6\x42\xd6\xf7\x0e\xe3\x14\x6b\x72\x1b\x12\x61",
        // "" / M(None) / S(0) / L(0)
        "\x18\x4d\x12\xea\x1a\xf4\x32\x42\x35\x50\x65\x5b\xd8\xba\xb6\x48\xbf\x48\x47\xb5\x2d\xaf\x2a\x4c\x79\x77\xfc\x11\x42\x72\x4d\x94",
        // "" / M(None) / S(0) / L(0)
        "\xaf\x6d\x53\xe2\xb9\x2a\x18\x81\xde\xf2\x5a\x7e\x9a\x8f\x01\x13\x05\xc4\x59\x7e\x15\x68\x94\x89\x48\x7d\xfa\xab\x55\x15\x3a\x30",
        // "CFReadStreamClose" / M(Xor1) / S(143) / L(17)
        "\xcc\xc9\xdd\xea\xee\xeb\xdc\xfb\xfd\xea\xee\xe2\xcc\xe3\xe0\xfc\xea\x8f",
        // "" / M(None) / S(0) / L(0)
        "\x04\x59\xbd\x04\xf7\x1a\xf4\x57\x83\xe9\xe5\xe7\xd9\x24\x3d\xe6\x55\x54\x20\xcc\xd3\xe3\xda\xe1\x19\xc2\xc4\xb8\xa8\x88\xef\x13",
        // "init" / M(Xor4) / S(182) / L(4)
        "\x09\x0e\x09\x14\x60\x2f\xdf\x83\x6e\x68\x73\x69\xe8\xd4\x22\x64",
        // "" / M(None) / S(0) / L(0)
        "\xfb\xb4\x35\x84\x80\x3c\xc4\x71\x83\xb2\xa3\x8e\x6f\x44\x97\xd3\x05\x99\xa5\xcd\x83\x31\xa3\xc7\xec\xb2\x6d\x90\x5b\xc6\x4a\xe9",
        // "CFDateCreate" / M(Xor1) / S(78) / L(12)
        "\x0d\x08\x0a\x2f\x3a\x2b\x0d\x3c\x2b\x2f\x3a\x2b\x4e\xc8\xb3\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x42\x09\xa6\x24\xfc\x73\xf0\x77\x34\x2b\xee\x84\xe5\x3d\x6a\x3c\xf8\x31\x6a\x2c\x88\xdc\x28\x1d\x1a\xfa\x14\xba\x0a\x33\x2f\x85",
        // "setDelegate:" / M(Xor1) / S(165) / L(12)
        "\xd6\xc0\xd1\xe1\xc0\xc9\xc0\xc2\xc4\xd1\xc0\x9f\xa5\x96\xc6\x06",
        // "" / M(None) / S(0) / L(0)
        "\x7d\xad\xc3\x7c\x53\x8e\x97\x81\x05\xd2\x3d\xb3\xcf\x80\xda\xe0\xb9\xe1\xa9\x15\x4f\xd4\x50\x55\x7d\x3a\x51\xff\xa7\xe5\xa1\x46",
        // "CFReadStreamClose" / M(Xor1) / S(104) / L(17)
        "\x2b\x2e\x3a\x0d\x09\x0c\x3b\x1c\x1a\x0d\x09\x05\x2b\x04\x07\x1b\x0d\x68",
        // "OBJ_txt2obj" / M(Xor1) / S(30) / L(11)
        "\x51\x5c\x54\x41\x6a\x66\x6a\x2c\x71\x7c\x74\x1e\xb3\x84\x76\xe6",
        // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(237) / L(24)
        "\xce\xcb\xcc\xef\xfe\xe2\xe1\xf8\xf9\xe8\xd9\xe4\xe0\xe8\xca\xe8\xf9\xce\xf8\xff\xff\xe8\xe3\xf9\x8d\x50\x2b\x97\x96\xf1\x70\xe3\x27",
        // "BIO_write" / M(Xor3) / S(110) / L(9)
        "\x3c\x37\x31\x21\x09\x0c\x17\x0a\x1b\x7e\x82\x6d\xd0\xf5\x26\x1f",
        // "CFEqual" / M(Xor3) / S(160) / L(7)
        "\xf3\xf6\xf5\xc1\xc5\xd1\xdc\xb0\x52\x36\xeb\xfa\x4c\x6d\x9a\x2f",
        // "ASN1_get_object" / M(Xor2) / S(50) / L(15)
        "\x63\x71\x6c\x13\x7d\x45\x47\x56\x7d\x4d\x40\x48\x47\x41\x56\x22",
        // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(177) / L(25)
        "\x80\x9f\x83\x9f\x89\x85\x81\x9f\x80\x80\x82\x87\x82\x84\x9f\x80\x81\x81\x9f\x87\x9f\x80\x80\x9f\x80\xb1\x75\xd0\xc0\xd1\x1f\x22\x63\x1c",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(61) / L(22)
        "\x69\x6c\x6b\x58\x58\x4b\x53\x6d\x4f\x5e\x7c\x4b\x46\x5f\x4f\x6b\x5e\x63\x44\x4e\x4f\x52\x2a",
        // "EVP_DigestUpdate" / M(Xor1) / S(214) / L(16)
        "\x93\x80\x86\x89\x92\xbf\xb1\xb3\xa5\xa2\x83\xa6\xb2\xb7\xa2\xb3\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x82\xd1\x51\xda\xdb\x6a\xfe\x78\x79\xce\x33\xdc\xb0\xaf\x76\x60\x85\x91\x67\x12\x2e\xa5\xfc\x3c\x54\x1c\xff\x0b\x84\x66\x45\xfe",
        // "" / M(None) / S(0) / L(0)
        "\x81\x70\xd2\x37\xef\xa2\xa0\x3b\x22\x4c\xff\x92\x3b\x88\x14\xd6\x40\x61\x92\xc1\x15\x69\xa1\x45\xdc\x8f\x3b\x55\x70\x0f\xee\xc5",
        // "CFArrayAppendValue" / M(Rot) / S(190) / L(18)
        "\x01\x04\xff\x30\x30\x1f\x37\xff\x2e\x2e\x23\x2c\x22\x14\x1f\x2a\x33\x23\xbe",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor4) / S(154) / L(40)
        "\x19\x15\x17\x54\x13\x14\x0e\x1b\x14\x1d\x13\x18\x16\x1f\x09\x15\x1c\x0e\x0d\x1b\x08\x1f\x54\x17\x1f\x14\x09\x16\x1b\x19\x08\x15\x09\x09\x1f\x09\x0e\x1b\x0e\x09\x7a\xa8\xdb\x11\x02\x6d\x9a\x48\xb4",
        // "" / M(None) / S(0) / L(0)
        "\x84\x84\x88\x1f\xa7\x1c\x1d\xb3\xfd\x2f\x27\xaf\xdc\xcc\xc2\x11\x64\xe5\x2f\x03\x7c\x3f\xa6\xf8\xf7\x20\xc3\x89\xe2\xee\x53\x60",
        // "CFDateFormatterSetProperty" / M(Xor4) / S(42) / L(26)
        "\xfd\xf8\xfa\xdf\xca\xdb\xf8\xd1\xcc\xd3\xdf\xca\xca\xdb\xcc\xed\xdb\xca\xee\xcc\xd1\xce\xdb\xcc\xca\xc7\xbe\xc6\x83\xf9\x3b\x19\xa1\x36\x73",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(255) / L(39)
        "\x6c\x69\x7b\x46\x42\x4a\x75\x40\x41\x4a\x6c\x5d\x4a\x4e\x5b\x4a\x78\x46\x5b\x47\x7b\x46\x42\x4a\x66\x41\x5b\x4a\x5d\x59\x4e\x43\x69\x5d\x40\x42\x68\x62\x7b\x2f\x5d\x84\x8d\x5a\x79\x49\x0c\xfd",
        // "PKCS7_verify" / M(Xor2) / S(54) / L(12)
        "\x76\x6d\x65\x75\x11\x79\x50\x43\x54\x4f\x40\x5f\x26\x87\xdd\x24",
        // "CFReadStreamClose" / M(Xor4) / S(63) / L(17)
        "\x2d\x28\x3c\x0b\x0f\x0a\x3d\x1a\x1c\x0b\x0f\x03\x2d\x02\x01\x1d\x0b\x6e",
        // "CFArrayCreateMutable" / M(Rot) / S(98) / L(20)
        "\xa5\xa8\xa3\xd4\xd4\xc3\xdb\xa5\xd4\xc7\xc3\xd6\xc7\xaf\xd7\xd6\xc3\xc4\xce\xc7\x62",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(210) / L(25)
        "\xbc\xd1\xd4\xdd\xbb\xaa\xa5\xa9\xa1\xbb\x83\x81\x90\xbb\x90\x81\x9c\x90\xbb\x86\x9d\xbb\xaa\xad\xa0\xe4\xd8\xcd\xf5\xfa\x0a\xac\x2d\xa7",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(136) / L(23)
        "\x4f\x70\x65\x6e\x53\x53\x4c\x5f\x61\x64\x64\x5f\x61\x6c\x6c\x5f\x64\x69\x67\x65\x73\x74\x73\x00\xb0\x03\x4b\xce\xa0\x7c\x82\x55",
        // "X509_STORE_add_cert" / M(Xor3) / S(179) / L(19)
        "\x9f\xf2\xf7\xfe\x98\x94\x93\x88\x95\x82\x98\xa6\xa3\xa3\x98\xa4\xa2\xb5\xb3\xc7",
        // "start" / M(Xor1) / S(87) / L(5)
        "\x24\x23\x36\x25\x23\x57\x95\x92\x84\x06\x0a\x4f\x32\x3b\x14\xcb",
        // "CFDataGetLength" / M(Xor1) / S(176) / L(15)
        "\xf3\xf6\xf4\xd1\xc4\xd1\xf7\xd5\xc4\xfc\xd5\xde\xd7\xc4\xd8\xb0",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(186) / L(26)
        "\x2d\x28\x3c\x0b\x0f\x0a\x3d\x1a\x1c\x0b\x0f\x03\x2d\x1c\x0b\x0f\x1a\x0b\x39\x07\x1a\x06\x28\x07\x02\x0b\x6e\xb8\x95\x77\x58\x6d\x37\x97\x4a",
        // "start" / M(Rot) / S(2) / L(5)
        "\x75\x76\x63\x74\x76\x02\x0a\xa9\x17\x39\x52\x1f\x3c\xa1\xdc\xe6",
        // "X509_digest" / M(Rot) / S(215) / L(11)
        "\x2f\x0c\x07\x10\x36\x3b\x40\x3e\x3c\x4a\x4b\xd7\x30\xed\x3c\x78",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(2) / L(24)
        "\x01\x04\x06\x23\x36\x27\x04\x2d\x30\x2f\x23\x36\x36\x27\x30\x11\x27\x36\x04\x2d\x30\x2f\x23\x36\x42\x8d\x42\xd9\x06\x2d\xa1\xee\x5f",
        // "SHA1_Final" / M(Xor2) / S(19) / L(10)
        "\x50\x4b\x42\x32\x5c\x45\x6a\x6d\x62\x6f\x03\xa3\xaa\x4c\x0d\xb5",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(211) / L(59)
        "\x3a\x3d\x36\x3d\x49\x36\x39\x4e\x36\x3a\x3a\x36\x3e\x4f\x36\x39\x35\x36\x3f\x4d\x36\x3c\x34\x36\x4a\x4a\x36\x39\x34\x36\x48\x3d\x36\x38\x4d\x36\x49\x3e\x36\x3e\x38\x36\x39\x3e\x36\x48\x3d\x36\x35\x34\x36\x48\x4a\x36\x3a\x4f\x36\x3a\x3c\x0c\x99\x33\x4a\x4f\x12\x11\x3b\xab",
        // "CFEqual" / M(Xor3) / S(196) / L(7)
        "\x97\x92\x91\xa5\xa1\xb5\xb8\xd4\x8c\x1f\xd2\xad\xab\xf9\x42\xd9",
        // "CFBundleVersion" / M(Rot) / S(211) / L(15)
        "\x16\x19\x15\x48\x41\x37\x3f\x38\x29\x38\x45\x46\x3c\x42\x41\xd3",
        // "currentDevice" / M(Rot) / S(136) / L(13)
        "\xeb\xfd\xfa\xfa\xed\xf6\xfc\xcc\xed\xfe\xf1\xeb\xed\x88\x20\x6d",
        // "objc_lookUpClass" / M(Xor1) / S(176) / L(16)
        "\xdf\xd2\xda\xd3\xef\xdc\xdf\xdf\xdb\xe5\xc0\xf3\xdc\xd1\xc3\xc3\xb0",
        // "" / M(None) / S(0) / L(0)
        "\x61\xc1\xc2\x01\x96\xec\x98\xc0\xcf\x3f\xbb\xc9\x65\xdc\x3f\x38\x5b\x54\xd1\xeb\x0b\x5e\xf5\xd6\x77\x05\x09\x5b\x3f\x11\x3c\x8c",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(137) / L(36)
        "\xca\xcf\xcb\xfc\xe7\xed\xe5\xec\xce\xec\xfd\xdf\xe8\xe5\xfc\xec\xcf\xe6\xfb\xc0\xe7\xef\xe6\xcd\xe0\xea\xfd\xe0\xe6\xe7\xe8\xfb\xf0\xc2\xec\xf0\x89",
        // "strncmp" / M(Xor2) / S(191) / L(7)
        "\xdc\xdb\xdd\xc1\xcc\xc2\xdf\xaf\xbc\x16\x7c\x34\xe6\x31\xe4\xef",
        // "strncmp" / M(Xor4) / S(228) / L(7)
        "\x33\x34\x32\x2e\x23\x2d\x30\x40\x09\x95\x94\xc4\x45\x39\x1d\x5f",
        // "d2i_X509_bio" / M(Xor1) / S(81) / L(12)
        "\x35\x63\x38\x0e\x09\x64\x61\x68\x0e\x33\x38\x3e\x51\x79\x28\xdc",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(139) / L(22)
        "\xba\x00\xfe\xfd\xba\xf7\xf4\xed\xba\xf7\xf4\xed\xfa\xed\xf5\xee\xb9\xef\x04\xf7\xf4\xed\x8b",
        // "%02X" / M(Xor4) / S(8) / L(4)
        "\xa5\xb0\xb2\xd8\x80\x00\xe7\xaf\x47\xa1\x0a\x4f\x04\x40\x52\xa1",
        // "EVP_MD_CTX_init" / M(Xor3) / S(253) / L(15)
        "\x48\x5b\x5d\x52\x40\x49\x52\x4e\x59\x55\x52\x64\x63\x64\x79\x0d",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(108) / L(16)
        "\x4f\x1e\x45\x73\x6d\x7f\x62\x1d\x73\x65\x62\x78\x69\x6b\x69\x7e\x2c",
        // "OpenSSL_add_all_digests" / M(Xor2) / S(36) / L(23)
        "\x4b\x74\x61\x6a\x57\x57\x48\x5b\x65\x60\x60\x5b\x65\x68\x68\x5b\x60\x6d\x63\x61\x77\x70\x77\x04\x65\x07\x6b\xaf\xa0\xd1\x17\x9f",
        // "BIO_free" / M(Xor1) / S(138) / L(8)
        "\xc8\xc3\xc5\xd5\xec\xf8\xef\xef\x8a\x2c\x38\x7f\x27\xcd\x50\xde",
        // "exit" / M(Xor2) / S(144) / L(4)
        "\xe5\xf8\xe9\xf4\x80\xf7\xd5\xa4\x4f\x97\xae\x72\x1f\x07\xc6\x4a",
        // "exit" / M(Xor1) / S(109) / L(4)
        "\x08\x15\x04\x19\x6d\x2d\xd2\xd9\x1c\xa8\xc4\xcf\xa5\xef\x0f\x5c",
        // "PKCS7_verify" / M(Xor1) / S(212) / L(12)
        "\x84\x9f\x97\x87\xe3\x8b\xa2\xb1\xa6\xbd\xb2\xad\xd4\xff\xff\xcc",
        // "BIO_new" / M(Rot) / S(185) / L(7)
        "\xfb\x02\x08\x18\x27\x1e\x30\xb9\x92\x09\x5b\x1e\xd2\x23\x3d\xeb",
        // "%02X:" / M(Xor3) / S(100) / L(5)
        "\x51\x44\x46\x2c\x4e\x74\xd7\xa7\x12\x0c\x5a\xb3\x0c\xbd\x55\xea",
        // "CFArrayAppendValue" / M(Xor1) / S(165) / L(18)
        "\xe6\xe3\xe4\xd7\xd7\xc4\xdc\xe4\xd5\xd5\xc0\xcb\xc1\xf3\xc4\xc9\xd0\xc0\xa5",
        // "EVP_MD_CTX_init" / M(Xor3) / S(238) / L(15)
        "\xbb\xa8\xae\xa1\xb3\xba\xa1\xbd\xaa\xa6\xa1\x97\x90\x97\x8a\xfe",
        // "CFDateFormatterSetProperty" / M(Xor1) / S(204) / L(26)
        "\x8f\x8a\x88\xad\xb8\xa9\x8a\xa3\xbe\xa1\xad\xb8\xb8\xa9\xbe\x9f\xa9\xb8\x9c\xbe\xa3\xbc\xa9\xbe\xb8\xb5\xcc\xc9\x0e\x2e\x37\x0e\x22\x07\x84",
        // "CFDataGetLength" / M(Xor4) / S(26) / L(15)
        "\xe3\xe6\xe4\xc1\xd4\xc1\xe7\xc5\xd4\xec\xc5\xce\xc7\xd4\xc8\xa0",
        // "CFReadStreamOpen" / M(Xor4) / S(76) / L(16)
        "\x4f\x4a\x5e\x69\x6d\x68\x5f\x78\x7e\x69\x6d\x61\x43\x7c\x69\x62\x0c",
        // "ASN1_INTEGER_get" / M(Rot) / S(13) / L(16)
        "\x4e\x60\x5b\x3e\x6c\x56\x5b\x61\x52\x54\x52\x5f\x6c\x74\x72\x81\x0d",
        // "8" / M(Xor3) / S(7) / L(1)
        "\x2f\x17\x0a\x5a\x94\x5e\xc9\x4d\x5d\xc3\xc7\xd3\x38\xf8\xbe\x36",
        // "" / M(None) / S(0) / L(0)
        "\xe7\x3d\x43\xf5\x6f\x63\xae\xc0\xc7\xa5\x07\x94\x95\x75\xbc\x10\x9e\xe5\x7b\x20\x6f\x1b\x62\x08\xd4\x9e\xfc\x4a\xb3\x1f\xc5\x80",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(92) / L(35)
        "\x1f\x1a\x18\x3d\x28\x39\x1a\x33\x2e\x31\x3d\x28\x28\x39\x2e\x1f\x2e\x39\x3d\x28\x39\x18\x3d\x28\x39\x1a\x2e\x33\x31\x0f\x28\x2e\x35\x32\x3b\x5c",
        // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(5) / L(25)
        "\x16\x09\x15\x09\x1f\x13\x17\x09\x16\x16\x14\x11\x14\x12\x09\x16\x17\x17\x09\x11\x09\x16\x16\x09\x16\x27\x2e\x68\xb3\x44\x3c\x6a\x48\x15",
        // "longjmp" / M(Xor2) / S(50) / L(7)
        "\x4e\x4d\x4c\x45\x48\x4f\x52\x22\x12\xdf\x9d\xeb\xc3\x20\xbb\x11",
        // "setjmp" / M(Xor1) / S(124) / L(6)
        "\x0f\x19\x08\x16\x11\x0c\x7c\x5a\xfa\x50\xc1\xb1\xe7\xf7\x87\xff",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(98) / L(22)
        "\x91\xd7\xd5\xd4\x91\xce\xcb\xc4\x91\xce\xcb\xc4\xd1\xc4\xcc\xc5\x90\xc6\xdb\xce\xcb\xc4\x62",
        // "CFDateFormatterCreate" / M(Xor1) / S(157) / L(21)
        "\xde\xdb\xd9\xfc\xe9\xf8\xdb\xf2\xef\xf0\xfc\xe9\xe9\xf8\xef\xde\xef\xf8\xfc\xe9\xf8\x9d",
        // "X509_NAME_get_text_by_NID" / M(Rot) / S(230) / L(25)
        "\x3e\x1b\x16\x1f\x45\x34\x27\x33\x2b\x45\x4d\x4b\x5a\x45\x5a\x4b\x5e\x5a\x45\x48\x5f\x45\x34\x2f\x2a\xe6\xe2\xbc\xea\x8b\x62\x22\x53\x71",
        // "sk_num" / M(Xor1) / S(168) / L(6)
        "\xdb\xc3\xf7\xc6\xdd\xc5\xa8\x5b\x01\xbd\x09\xdd\xbd\xee\xd1\x6c",
        // "ASN1_OBJECT_free" / M(Rot) / S(14) / L(16)
        "\x4f\x61\x5c\x3f\x6d\x5d\x50\x58\x53\x51\x62\x6d\x74\x80\x73\x73\x0e",
        // "strlen" / M(Xor4) / S(46) / L(6)
        "\x93\x94\x92\x8c\x85\x8e\xe0\xf0\x65\x97\x9c\xe5\xd2\x35\xd1\x5a",
        // "strlen" / M(Xor3) / S(6) / L(6)
        "\x65\x62\x64\x7a\x73\x78\x16\x1e\xac\x5a\xbb\x1e\xce\x75\xff\x6c",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(16) / L(36)
        "\x76\x73\x77\x40\x5b\x51\x59\x50\x72\x50\x41\x63\x54\x59\x40\x50\x73\x5a\x47\x7c\x5b\x53\x5a\x71\x5c\x56\x41\x5c\x5a\x5b\x54\x47\x4c\x7e\x50\x4c\x35",
        // "SHA1_Init" / M(Xor3) / S(107) / L(9)
        "\x28\x33\x3a\x4a\x24\x32\x15\x12\x0f\x7b\x6d\x79\xb3\x01\xe4\x8c",
        // "CFDictionarySetValue" / M(Xor2) / S(122) / L(20)
        "\x2c\x29\x2b\x06\x0c\x1b\x06\x00\x01\x0e\x1d\x16\x3c\x0a\x1b\x39\x0e\x03\x1a\x0a\x6f",
        // "" / M(None) / S(0) / L(0)
        "\xc0\x1e\x78\x1f\x77\xbd\x0c\xf3\xa8\xf8\xde\x02\xc0\x83\x74\x34\xc4\xcd\x39\x93\x38\xa0\x7f\xe6\x31\x16\x3d\x42\x71\x6c\x2b\xd2",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(36) / L(59)
        "\x12\x15\x1e\x15\x41\x1e\x11\x46\x1e\x12\x12\x1e\x16\x47\x1e\x11\x1d\x1e\x17\x45\x1e\x14\x1c\x1e\x42\x42\x1e\x11\x1c\x1e\x40\x15\x1e\x10\x45\x1e\x41\x16\x1e\x16\x10\x1e\x11\x16\x1e\x40\x15\x1e\x1d\x1c\x1e\x40\x42\x1e\x12\x47\x1e\x12\x14\x24\x78\xfb\x4d\x7c\x09\xc1\x0f\xae",
        // "objc_lookUpClass" / M(Rot) / S(12) / L(16)
        "\x7b\x6e\x76\x6f\x6b\x78\x7b\x7b\x77\x61\x7c\x4f\x78\x6d\x7f\x7f\x0c",
        // "sha1" / M(Xor2) / S(247) / L(4)
        "\x94\x8f\x86\xd6\xe7\x81\xb9\x21\xab\x47\xbc\x43\x41\xcb\xac\xba",
        // "EVP_DigestFinal" / M(Xor1) / S(176) / L(15)
        "\xf5\xe6\xe0\xef\xf4\xd9\xd7\xd5\xc3\xc4\xf6\xd9\xde\xd1\xdc\xb0",
        // "NSBundle" / M(Xor4) / S(196) / L(8)
        "\x0e\x13\x02\x35\x2e\x24\x2c\x25\x40\x0e\x3d\x85\x86\x3d\x61\x2b",
        // "objc_getClass" / M(Xor4) / S(31) / L(13)
        "\x9f\x92\x9a\x93\xaf\x97\x95\x84\xb3\x9c\x91\x83\x83\xf0\x16\x41",
        // "setjmp" / M(Rot) / S(223) / L(6)
        "\x52\x44\x53\x49\x4c\x4f\xdf\x8d\xc1\x6b\x1a\xa8\x34\x9c\x87\xa9",
        // "CFStringCreateWithBytes" / M(Xor3) / S(54) / L(23)
        "\x15\x10\x05\x22\x24\x3f\x38\x31\x15\x24\x33\x37\x22\x33\x01\x3f\x22\x3e\x14\x2f\x22\x33\x25\x56\xac\x58\x24\xb1\x52\x77\x70\xc4",
        // "CFDataCreateMutable" / M(Xor4) / S(142) / L(19)
        "\x5b\x5e\x5c\x79\x6c\x79\x5b\x6a\x7d\x79\x6c\x7d\x55\x6d\x6c\x79\x7a\x74\x7d\x18",
        // "" / M(None) / S(0) / L(0)
        "\x9b\xf6\x67\xb5\x4f\x55\x06\x84\x64\xd4\x6c\x9c\x87\xf9\x9a\x78\x1d\x9d\xbe\x4e\x2d\x83\xbd\xb4\x86\xc6\x62\x5c\x1b\x3a\x78\xf9",
        // "CFDataGetBytePtr" / M(Xor3) / S(122) / L(16)
        "\xc8\xcd\xcf\xea\xff\xea\xcc\xee\xff\xc9\xf2\xff\xee\xdb\xff\xf9\x8b",
        // "CFDataCreateMutable" / M(Xor3) / S(130) / L(19)
        "\xd5\xd0\xd2\xf7\xe2\xf7\xd5\xe4\xf3\xf7\xe2\xf3\xdb\xe3\xe2\xf7\xf4\xfa\xf3\x96",
        // "" / M(None) / S(0) / L(0)
        "\x51\xc6\xcd\xba\x87\xa9\xc6\x7a\x6b\x09\x96\x1a\x54\xc2\x60\x8f\xed\x21\x08\x87\xf0\x6b\x74\xb9\x58\x8b\x03\x2c\xae\xb2\x2a\xa4",
        // "" / M(None) / S(0) / L(0)
        "\x71\x7e\x2e\x97\xae\xc0\xcd\xd6\xed\x6e\x7d\xec\xfa\xf7\x72\xe2\x8f\x57\x6c\x5e\xef\x2e\x46\x6f\xd9\xd8\xbf\xa1\x47\x9d\xd9\x61",
        // "CFBundleShortVersionString" / M(Xor3) / S(36) / L(26)
        "\x04\x01\x05\x32\x29\x23\x2b\x22\x14\x2f\x28\x35\x33\x11\x22\x35\x34\x2e\x28\x29\x14\x33\x35\x2e\x29\x20\x47\x6a\x71\x10\x40\x8b\xbb\x69\x63",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(25) / L(59)
        "\x2f\x28\x23\x28\x5c\x23\x2c\x5b\x23\x2f\x2f\x23\x2b\x5a\x23\x2c\x20\x23\x2a\x58\x23\x29\x21\x23\x5f\x5f\x23\x2c\x21\x23\x5d\x28\x23\x2d\x58\x23\x5c\x2b\x23\x2b\x2d\x23\x2c\x2b\x23\x5d\x28\x23\x20\x21\x23\x5d\x5f\x23\x2f\x5a\x23\x2f\x29\x19\xb1\x31\xd6\x16\x9e\x9b\x67\x80",
        // "" / M(None) / S(0) / L(0)
        "\xac\xf0\x0c\xef\x5a\x98\x49\x7c\x7b\x49\x36\x90\x54\x44\x06\xda\x9b\x72\xeb\x3a\x24\x51\xfe\xfc\x25\x81\xfd\x35\x20\xc0\x60\x9e",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(15) / L(40)
        "\x39\x3e\x3e\x6a\x3a\x6d\x39\x39\x3d\x6c\x3a\x36\x3c\x6e\x3f\x37\x69\x69\x3a\x37\x6b\x3e\x3b\x6e\x6a\x3d\x3d\x3b\x3a\x3d\x6b\x3e\x36\x37\x6b\x69\x39\x6c\x39\x3f\x0f\x9c\x2a\x1a\xf4\x2c\x84\x9a\x5f",
        // "CC_SHA1" / M(Xor3) / S(66) / L(7)
        "\x11\x11\x0d\x01\x1a\x13\x63\x52\xe5\x6c\x31\x9b\x53\xed\x37\x61",
        // "" / M(None) / S(0) / L(0)
        "\xe2\x72\xef\xfa\xd1\x2a\x0d\xda\xf4\x0e\x35\x8a\x2f\x2e\x25\xce\x4a\xe6\xd1\xdb\x97\x3c\x02\x3a\xe7\x72\xbf\x75\x8e\xea\xba\x75",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(57) / L(26)
        "\x59\x5c\x48\x7f\x7b\x7e\x49\x6e\x68\x7f\x7b\x77\x59\x68\x7f\x7b\x6e\x7f\x4d\x73\x6e\x72\x5c\x73\x76\x7f\x1a\x02\xc3\xca\x9d\x62\xef\x48\x44",
        // "" / M(None) / S(0) / L(0)
        "\x8d\x1b\x00\xe0\x5e\xdc\x35\xe0\xf9\x19\x1b\x3d\x5d\x77\xb1\xa3\x4c\x83\x55\xaa\xfd\x34\x05\xae\xc1\xcb\x54\x07\xf5\xd2\x23\xe4",
        // "" / M(None) / S(0) / L(0)
        "\x19\x54\x45\x6f\x7e\xb8\x33\x4b\xb2\xe4\xc3\x38\x8d\x0c\x70\x5b\x71\x23\xde\xc3\x4c\x5d\x2c\x0d\xf8\xdb\x22\x4e\x81\xd2\x29\x59",
        // "EVP_DigestUpdate" / M(Xor1) / S(37) / L(16)
        "\x60\x73\x75\x7a\x61\x4c\x42\x40\x56\x51\x70\x55\x41\x44\x51\x40\x25",
        // "CFDateFormatterCreateDateFromString" / M(Xor2) / S(92) / L(35)
        "\x3b\x3e\x3c\x19\x0c\x1d\x3e\x17\x0a\x15\x19\x0c\x0c\x1d\x0a\x3b\x0a\x1d\x19\x0c\x1d\x3c\x19\x0c\x1d\x3e\x0a\x17\x15\x2b\x0c\x0a\x11\x16\x1f\x78",
        // "ASN1_INTEGER_free" / M(Rot) / S(242) / L(17)
        "\x33\x45\x40\x23\x51\x3b\x40\x46\x37\x39\x37\x44\x51\x58\x64\x57\x57\xf2",
        // "" / M(None) / S(0) / L(0)
        "\x2a\xde\x19\xa7\x56\xe7\x9f\x4a\x74\x3c\x20\x04\xf4\x35\x25\x0c\x2b\x57\x56\x7d\xbc\x06\x79\x35\x9c\xe9\xdc\x97\xc4\x47\xa1\x6b",
        // "alloc" / M(Xor1) / S(147) / L(5)
        "\xf2\xff\xff\xfc\xf0\x93\x3b\xad\x14\x8a\x16\xeb\xde\xdd\x10\x3c",
        // "EVP_DigestUpdate" / M(Xor3) / S(64) / L(16)
        "\x14\x07\x01\x0e\x15\x38\x36\x34\x22\x25\x04\x21\x35\x30\x25\x34\x51",
        // "" / M(None) / S(0) / L(0)
        "\xda\xeb\x70\x31\x34\x95\xf1\x07\x90\xf9\x51\xfe\xc2\xeb\x5f\xd6\x1e\x68\xf9\xaa\x37\x25\xc6\xc7\xe5\xd6\xe6\x7f\x1f\x15\x11\xeb",
        // "kCFBundleIdentifierKey" / M(Rot) / S(172) / L(22)
        "\x17\xef\xf2\xee\x21\x1a\x10\x18\x11\xf5\x10\x11\x1a\x20\x15\x12\x15\x11\x1e\xf7\x11\x25\xac",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(160) / L(25)
        "\xd1\xce\xd2\xce\xd8\xd4\xd0\xce\xd1\xd1\xd3\xd6\xd3\xd5\xce\xd1\xd0\xd0\xce\xd6\xce\xd1\xd1\xce\xd1\xa0\x8e\x84\x7b\x84\x7e\x8e\x22\x55",
        // "CFDateFormatterSetProperty" / M(Rot) / S(233) / L(26)
        "\x2c\x2f\x2d\x4a\x5d\x4e\x2f\x58\x5b\x56\x4a\x5d\x5d\x4e\x5b\x3c\x4e\x5d\x39\x5b\x58\x59\x4e\x5b\x5d\x62\xe9\x72\x9d\xdb\xd4\x98\x71\x2f\xc6",
        // "CC_SHA1_Final" / M(Xor4) / S(90) / L(13)
        "\xe3\xe3\xff\xf3\xe8\xe1\x91\xff\xe6\xc9\xce\xc1\xcc\xa0\x0c\xa1",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(68) / L(16)
        "\xa7\x76\xad\xa3\x85\x97\x92\x75\xa3\x8d\x92\x98\x89\x8b\x89\x96\x44",
        // "SHA1_Final" / M(Xor2) / S(99) / L(10)
        "\x20\x3b\x32\x42\x2c\x35\x1a\x1d\x12\x1f\x73\xf4\x22\x57\x7f\x6a",
        // "CFBundleIdentifier" / M(Xor2) / S(241) / L(18)
        "\xa1\xa4\xa0\x97\x8c\x86\x8e\x87\xab\x86\x87\x8c\x96\x8b\x84\x8b\x87\x90\xe2",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(159) / L(14)
        "\xf1\xf3\xeb\xe3\xfe\xec\xe0\xe8\xed\xfe\xee\xed\xeb\xf8\x9f\x86",
        // "BIO_s_mem" / M(Rot) / S(206) / L(9)
        "\x10\x17\x1d\x2d\x41\x2d\x3b\x33\x3b\xce\x35\xea\x04\xd2\xdb\x0c",
        // "" / M(None) / S(0) / L(0)
        "\xa2\xfc\x96\xec\xab\x65\x8b\x42\x66\x16\x5e\x77\x7c\xc7\x2e\x2c\xa8\xb1\x36\x9f\xe3\x2e\x03\xcd\x40\x83\x63\x84\xbf\x46\x50\x5e",
        // "BIO_write" / M(Rot) / S(143) / L(9)
        "\xd1\xd8\xde\xee\x06\x01\xf8\x03\xf4\x8f\x59\x4b\x9b\x1f\x7c\xa3",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(34) / L(40)
        "\x14\x13\x13\x67\x17\x60\x14\x14\x10\x61\x17\x1b\x11\x63\x12\x1a\x64\x64\x17\x1a\x66\x13\x16\x63\x67\x10\x10\x16\x17\x10\x66\x13\x1b\x1a\x66\x64\x14\x61\x14\x12\x22\xa6\x8f\xea\xc8\x9e\x0f\x06\x88",
        // "EVP_get_digestbyname" / M(Xor1) / S(199) / L(20)
        "\x82\x91\x97\x98\xa0\xa2\xb3\x98\xa3\xae\xa0\xa2\xb4\xb3\xa5\xbe\xa9\xa6\xaa\xa2\xc7",
        // "EVP_MD_CTX_init" / M(Xor3) / S(78) / L(15)
        "\x1b\x08\x0e\x01\x13\x1a\x01\x1d\x0a\x06\x01\x37\x30\x37\x2a\x5e",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(119) / L(22)
        "\xcd\xc8\xcf\xfc\xfc\xef\xf7\xc9\xeb\xfa\xd8\xef\xe2\xfb\xeb\xcf\xfa\xc7\xe0\xea\xeb\xf6\x8e",
        // "." / M(Xor2) / S(147) / L(1)
        "\xad\x83\xa5\x56\x29\xfd\x94\xb2\x36\xb2\x29\x40\x88\x85\x79\x7a",
        // "" / M(None) / S(0) / L(0)
        "\x61\x60\xf1\xa2\x00\xde\x07\x3a\x63\x60\x1a\x84\x84\x79\xe2\x2b\xb0\x00\x88\xc3\xb9\x7e\x26\xd1\x6a\x6a\xba\xde\x04\x6b\x4c\x3e",
        // "/usr/lib/libSystem.dylib" / M(Rot) / S(143) / L(24)
        "\xbe\x04\x02\x01\xbe\xfb\xf8\xf1\xbe\xfb\xf8\xf1\xe2\x08\x02\x03\xf4\xfc\xbd\xf3\x08\xfb\xf8\xf1\x8f\x36\x17\x6d\xd7\x12\x40\x6d\x10",
        // "mainBundle" / M(Xor2) / S(174) / L(10)
        "\xd3\xdf\xd7\xd0\xfc\xcb\xd0\xda\xd2\xdb\xbe\xdf\xbd\x3c\x45\x9b",
        // "SHA1_Update" / M(Xor4) / S(152) / L(11)
        "\xd3\xc8\xc1\xb1\xdf\xd5\xf0\xe4\xe1\xf4\xe5\x80\x91\xe7\x69\x5d",
        // "CFDataGetLength" / M(Xor2) / S(132) / L(15)
        "\xd7\xd2\xd0\xf5\xe0\xf5\xd3\xf1\xe0\xd8\xf1\xfa\xf3\xe0\xfc\x94",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(75) / L(32)
        "\x32\x32\x32\x32\x6c\x66\x6c\x06\x06\x6c\x66\x6c\x2f\x2f\x6c\x1f\x6c\x03\x03\x6c\x71\x6c\x26\x26\x6c\x71\x6c\x38\x38\x6c\x11\x6c\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x44\x6d\x7d\xb8\x6d\xf9\x52\x55\x5a\xed\xf2\xcb\xec\x29\x90\x57\xa0\x61\xb3\x44\x10\xa3\x74\x8f\x08\x4b\x8c\xdf\x42\x25\x32\x82",
        // "" / M(None) / S(0) / L(0)
        "\xea\x0e\x09\x95\x9d\x04\x04\x5c\xd9\xc6\x92\x70\x03\x67\x2a\x69\x73\x8a\xab\xa0\xdf\x17\xa3\x8e\x0f\xbe\x8e\xa6\x96\x38\x0d\xad",
        // "OBJ_txt2obj" / M(Xor1) / S(94) / L(11)
        "\x11\x1c\x14\x01\x2a\x26\x2a\x6c\x31\x3c\x34\x5e\xe5\xe3\xba\x83",
        // "" / M(None) / S(0) / L(0)
        "\x1f\xd5\x9b\xfb\xe3\x81\x84\x4e\xe8\xd3\x20\x79\x4d\xe8\x7a\xf9\x58\x7a\x8d\x9e\xb3\x88\xe4\xef\x24\x07\xea\xff\x99\xf5\x2e\xe8",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x1c\x24\x42\x7a\x5f\xab\xb3\x30\xd3\x5e\xab\xac\x7c\x17\x42\xe0\x62\x30\x09\xfa\xd0\x24\xcf\x05\xe5\x37\x3d\x1c\xb1\x70\xd2",
        // "" / M(None) / S(0) / L(0)
        "\xb3\x75\xa3\xba\x43\xe5\xa7\xaf\x44\x13\x12\x77\x50\xb3\xe2\xaf\x70\xfe\x97\xd6\xaf\xa3\xdd\x68\x76\x7b\x38\xfa\x58\x0c\x3d\xcc",
        // "setDelegate:" / M(Xor1) / S(165) / L(12)
        "\xd6\xc0\xd1\xe1\xc0\xc9\xc0\xc2\xc4\xd1\xc0\x9f\xa5\x84\xb5\x3e",
        // "8" / M(Xor4) / S(125) / L(1)
        "\xe8\xd0\x6b\xb6\x45\x3f\xb1\x56\x64\x90\x45\xbc\x09\xa4\xeb\xb7",
        // "CFDataGetBytePtr" / M(Xor4) / S(201) / L(16)
        "\x1a\x1f\x1d\x38\x2d\x38\x1e\x3c\x2d\x1b\x20\x2d\x3c\x09\x2d\x2b\x59",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(159) / L(24)
        "\xdc\xd9\xde\xfd\xec\xf0\xf3\xea\xeb\xfa\xcb\xf6\xf2\xfa\xd8\xfa\xeb\xdc\xea\xed\xed\xfa\xf1\xeb\x9f\x95\x1a\xd5\x10\x93\x21\x18\x26",
        // "CFStringCreateWithBytes" / M(Xor3) / S(66) / L(23)
        "\x21\x24\x31\x16\x10\x0b\x0c\x05\x21\x10\x07\x03\x16\x07\x35\x0b\x16\x0a\x20\x1b\x16\x07\x11\x62\x9c\x4c\x67\x3a\x67\x8e\x37\xc9",
        // "X509_digest" / M(Xor3) / S(164) / L(11)
        "\xec\x81\x84\x8d\xeb\xd0\xdd\xd3\xd1\xc7\xc0\xb4\x86\xf9\x5b\xb9",
        // "alloc" / M(Xor1) / S(243) / L(5)
        "\x92\x9f\x9f\x9c\x90\xf3\x8e\xe6\xd0\x0e\x04\xd0\x6d\xf2\x48\x8f",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(204) / L(24)
        "\xae\xab\xac\x8f\x9e\x82\x81\x98\x99\x88\xb9\x84\x80\x88\xaa\x88\x99\xae\x98\x9f\x9f\x88\x83\x99\xed\x71\x04\xa7\x51\xba\x3e\xe8\x1c",
        // "" / M(None) / S(0) / L(0)
        "\x18\xb7\x8a\xbe\x4d\xf3\xbe\xe5\x90\x18\x4c\x24\xb2\xd9\x4f\x84\x2e\xe3\x73\xe6\x7c\x4d\x6f\x6d\xcd\x98\x35\xc2\xad\x5a\xf3\xb9",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(59) / L(40)
        "\x3c\x3b\x3b\x4f\x3f\x48\x3c\x3c\x38\x49\x3f\x33\x39\x4b\x3a\x32\x4c\x4c\x3f\x32\x4e\x3b\x3e\x4b\x4f\x38\x38\x3e\x3f\x38\x4e\x3b\x33\x32\x4e\x4c\x3c\x49\x3c\x3a\x0a\x6f\xff\x36\xa8\xdb\x3b\x01\xb6",
        // "" / M(None) / S(0) / L(0)
        "\x92\x9b\x8c\xc2\x65\x0a\xdc\x11\x84\x82\x81\x24\xba\xc1\x4a\xbf\xe2\x83\xc5\x22\x0b\x24\xa8\xd4\x3b\x15\x1c\x9f\xdc\x43\xf4\x4c",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(173) / L(32)
        "\x34\x34\x34\x34\x6a\x60\x6a\x00\x00\x6a\x60\x6a\x29\x29\x6a\x19\x6a\x05\x05\x6a\x77\x6a\x20\x20\x6a\x77\x6a\x3e\x3e\x6a\x17\x6a\x4d",
        // "/usr/lib/libobjc.dylib" / M(Xor2) / S(22) / L(22)
        "\x2e\x74\x72\x73\x2e\x6d\x68\x63\x2e\x6d\x68\x63\x6e\x63\x6b\x62\x2f\x65\x78\x6d\x68\x63\x01",
        // "" / M(None) / S(0) / L(0)
        "\xc7\xcc\x03\xa8\x40\x11\x23\x21\x07\xd1\xf0\x13\x2c\x5b\xa8\x62\xdd\xf4\xdf\x00\x50\x33\xb3\x03\x1a\x8a\x43\x7f\x83\x41\xb0\xf5",
        // "" / M(None) / S(0) / L(0)
        "\xfe\xba\x61\x53\x1a\x7e\x60\x65\xd7\x29\xd1\xab\x48\x7d\x0a\xa9\x73\xd5\x11\x0a\xaf\x81\x97\xa1\x19\xfb\x13\x4c\x36\x8f\xff\xda",
        // "X509_STORE_new" / M(Rot) / S(230) / L(14)
        "\x3e\x1b\x16\x1f\x45\x39\x3a\x35\x38\x2b\x45\x54\x4b\x5d\xe6\xb2",
        // "objc_msgSend" / M(Xor3) / S(120) / L(12)
        "\xe7\xea\xe2\xeb\xd7\xe5\xfb\xef\xdb\xed\xe6\xec\x88\xe4\x2a\xf1",
        // "CFDateFormatterCreate" / M(Xor2) / S(150) / L(21)
        "\xc3\xc6\xc4\xe1\xf4\xe5\xc6\xef\xf2\xed\xe1\xf4\xf4\xe5\xf2\xc3\xf2\xe5\xe1\xf4\xe5\x80",
        // "ASN1_get_object" / M(Xor3) / S(156) / L(15)
        "\xed\xff\xe2\x9d\xf3\xcb\xc9\xd8\xf3\xc3\xce\xc6\xc9\xcf\xd8\xac",
        // "CFBundleGetMainBundle" / M(Rot) / S(193) / L(21)
        "\x04\x07\x03\x36\x2f\x25\x2d\x26\x08\x26\x35\x0e\x22\x2a\x2f\x03\x36\x2f\x25\x2d\x26\xc1",
        // "CFDictionaryGetValue" / M(Xor2) / S(210) / L(20)
        "\x84\x81\x83\xae\xa4\xb3\xae\xa8\xa9\xa6\xb5\xbe\x80\xa2\xb3\x91\xa6\xab\xb2\xa2\xc7",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(253) / L(21)
        "\xd5\xfd\xf8\xea\xc7\xce\xdb\xff\xcc\xcc\xdf\xc7\xfd\xdf\xd2\xd2\xfc\xdf\xdd\xd5\xcd\xbe",
        // "getUUIDBytes:" / M(Rot) / S(127) / L(13)
        "\xe6\xe4\xf3\xd4\xd4\xc8\xc3\xc1\xf8\xf3\xe4\xf2\xb9\x7f\xe3\xe1",
        // "setjmp" / M(Xor3) / S(125) / L(6)
        "\xfe\xe8\xf9\xe7\xe0\xfd\x8d\x06\x73\xfd\x2b\xc7\xeb\x34\x56\xb8",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(163) / L(39)
        "\xe6\xe9\xf7\x0c\x10\x08\xfd\x12\x11\x08\xe6\x15\x08\x04\x17\x08\xfa\x0c\x17\x0b\xf7\x0c\x10\x08\xec\x11\x17\x08\x15\x19\x04\x0f\xe9\x15\x12\x10\xea\xf0\xf7\xa3\xf2\xc7\x76\x4f\x4d\x64\x22\xa1",
        // "" / M(None) / S(0) / L(0)
        "\x57\xe1\x5b\x0c\xa4\x4b\x48\x9f\x85\xbc\xa3\xae\xb8\xa2\x33\x73\xfb\x45\x78\x57\x7e\xc6\x89\x6b\xac\x1d\xfb\x92\x6a\xe7\x96\x7b",
        // "d2i_PKCS7_bio" / M(Xor1) / S(146) / L(13)
        "\xf6\xa0\xfb\xcd\xc2\xd9\xd1\xc1\xa5\xcd\xf0\xfb\xfd\x92\xef\x26",
        // "" / M(None) / S(0) / L(0)
        "\x2b\x6e\xba\xe9\x04\x6e\x53\x40\x08\x5f\x99\x9b\x75\x18\x8c\xbd\x66\x38\x65\x51\x5d\x40\x23\xb9\x0d\x9e\xcc\x6a\xde\xba\xb0\xf1",
        // "objc_getClass" / M(Xor4) / S(230) / L(13)
        "\x0f\x02\x0a\x03\x3f\x07\x05\x14\x23\x0c\x01\x13\x13\x60\x8e\x4c",
        // "kCFBundleIdentifierKey" / M(Xor1) / S(148) / L(22)
        "\xff\xd7\xd2\xd6\xe1\xfa\xf0\xf8\xf1\xdd\xf0\xf1\xfa\xe0\xfd\xf2\xfd\xf1\xe6\xdf\xf1\xed\x94",
        // "." / M(Xor4) / S(230) / L(1)
        "\x4e\x60\x33\x7d\xa1\xc9\x1d\xfd\x30\x83\x57\x21\x05\xc0\x3d\x48",
        // "CFBundleUnloadExecutable" / M(Rot) / S(55) / L(24)
        "\x7a\x7d\x79\xac\xa5\x9b\xa3\x9c\x8c\xa5\xa3\xa6\x98\x9b\x7c\xaf\x9c\x9a\xac\xab\x98\x99\xa3\x9c\x37\x92\x6b\x80\xce\x56\x91\xd9\xc6",
        // "CFArrayGetCount" / M(Xor1) / S(148) / L(15)
        "\xd7\xd2\xd5\xe6\xe6\xf5\xed\xd3\xf1\xe0\xd7\xfb\xe1\xfa\xe0\x94",
        // "X509_STORE_new" / M(Xor4) / S(40) / L(14)
        "\xd8\xb5\xb0\xb9\xdf\xd3\xd4\xcf\xd2\xc5\xdf\xee\xe5\xf7\x80\x17",
        // "" / M(None) / S(0) / L(0)
        "\xee\x8e\xf4\x11\x33\xb0\x64\x34\xe3\x85\xa1\xd9\xf0\xe0\x4c\x94\x76\x4b\x05\x67\x11\x8f\xa5\x42\x91\xa6\xa8\x1e\xf4\x1e\x28\x46",
        // "CC_SHA1" / M(Xor1) / S(86) / L(7)
        "\x15\x15\x09\x05\x1e\x17\x67\x56\x34\x4f\x42\x42\x66\xdc\x83\x72",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x69\x52\xb8\x5a\x7a\xb0\xce\x60\xb0\x0f\xaf\x11\x74\x7e\x96\xfb\x1c\xa0\x55\x47\xaf\x55\xae\xc7\x0e\xd9\x4a\x44\x04\x02\x8a",
        // "" / M(None) / S(0) / L(0)
        "\x92\x4b\xe3\x05\x9f\x8e\xfc\xad\x86\x0a\xd6\xe9\xe3\x12\x3a\x74\xc0\xec\x1b\xba\x81\xcf\xde\x23\x76\x8b\x8e\xe9\x47\x2a\xb7\xb8",
        // "sk_free" / M(Xor1) / S(80) / L(7)
        "\x23\x3b\x0f\x36\x22\x35\x35\x50\x02\x42\xeb\xe6\x8c\x8a\x04\x35",
        // "%02x:" / M(Xor1) / S(30) / L(5)
        "\x3b\x2e\x2c\x66\x24\x1e\x89\x25\x90\xcf\x7c\xee\x31\x46\x92\xea",
        // "exit" / M(Xor3) / S(106) / L(4)
        "\x1f\x02\x13\x0e\x7a\xf6\x21\x84\x9c\x3e\x7e\xf0\xda\x40\x48\xb7",
        // "CFDictionaryAddValue" / M(Xor2) / S(40) / L(20)
        "\x7e\x7b\x79\x54\x5e\x49\x54\x52\x53\x5c\x4f\x44\x7c\x59\x59\x6b\x5c\x51\x48\x58\x3d",
        // "mainBundle" / M(Xor2) / S(19) / L(10)
        "\x6e\x62\x6a\x6d\x41\x76\x6d\x67\x6f\x66\x03\xda\xbe\xc5\x5e\x32",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(169) / L(35)
        "\xea\xef\xed\xc8\xdd\xcc\xef\xc6\xdb\xc4\xc8\xdd\xdd\xcc\xdb\xea\xdb\xcc\xc8\xdd\xcc\xed\xc8\xdd\xcc\xef\xdb\xc6\xc4\xfa\xdd\xdb\xc0\xc7\xce\xa9",
        // "objc_getClass" / M(Xor2) / S(241) / L(13)
        "\x8e\x83\x8b\x82\xbe\x86\x84\x95\xa2\x8d\x80\x92\x92\xe1\xf6\xf2",
        // "dlopen" / M(Xor2) / S(110) / L(6)
        "\x1a\x12\x11\x0e\x1b\x10\x7e\x8a\xf2\x68\x9d\x3b\x90\xdb\x63\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x0f\xac\x1d\xab\x18\x9b\x4c\xc4\xe1\xbb\xa6\xfb\xdc\x33\x56\x20\x2b\xde\xef\xd7\x5a\xdf\xa7\x79\xb4\xe2\x2a\x3a\x35\xff\x4b\x4c",
        // "CFDateCompare" / M(Xor1) / S(164) / L(13)
        "\xe7\xe2\xe0\xc5\xd0\xc1\xe7\xcb\xc9\xd4\xc5\xd6\xc1\xa4\x07\xb9",
        // "X509_free" / M(Xor4) / S(107) / L(9)
        "\xe8\x85\x80\x89\xef\xd6\xc2\xd5\xd5\xb0\x5e\x55\xa8\xb3\x52\x2d",
        // "CFBundleShortVersionString" / M(Xor4) / S(159) / L(26)
        "\xfe\xfb\xff\xc8\xd3\xd9\xd1\xd8\xee\xd5\xd2\xcf\xc9\xeb\xd8\xcf\xce\xd4\xd2\xd3\xee\xc9\xcf\xd4\xd3\xda\xbd\xfa\x82\xba\xab\x77\x15\xa6\x27",
        // "CFArrayGetCount" / M(Xor4) / S(212) / L(15)
        "\x03\x06\x01\x32\x32\x21\x39\x07\x25\x34\x03\x2f\x35\x2e\x34\x40",
        // "mainBundle" / M(Xor1) / S(121) / L(10)
        "\x14\x18\x10\x17\x3b\x0c\x17\x1d\x15\x1c\x79\x35\x60\xb3\xa2\x38",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x26\xbc\xf8\xc3\x14\x38\x1c\xe1\xbc\xbe\x55\xac\x16\xca\x6c\xef\x38\x85\x22\x6d\x44\xc7\x4a\x7a\x5c\x8d\xe6\xfe\x77\xce\xae",
        // "CFRelease" / M(Xor3) / S(252) / L(9)
        "\x4f\x4a\x5e\x69\x60\x69\x6d\x7f\x69\x0c\x39\x1f\x6b\x95\x6e\x89",
        // "EVP_DigestFinal" / M(Xor2) / S(159) / L(15)
        "\xca\xd9\xdf\xd0\xcb\xe6\xe8\xea\xfc\xfb\xc9\xe6\xe1\xee\xe3\x8f",
        // "CFBundleShortVersionString" / M(Xor4) / S(79) / L(26)
        "\x8e\x8b\x8f\xb8\xa3\xa9\xa1\xa8\x9e\xa5\xa2\xbf\xb9\x9b\xa8\xbf\xbe\xa4\xa2\xa3\x9e\xb9\xbf\xa4\xa3\xaa\xcd\x32\xcd\xae\x6e\x0a\xeb\xf9\xeb",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(80) / L(14)
        "\x32\x34\x2c\x24\x3f\x2d\x21\x29\x2e\x3f\x2f\x2e\x2c\x39\x60\xf2",
        // "" / M(None) / S(0) / L(0)
        "\x71\x01\x4f\x8b\xfc\xf2\x09\x07\x70\xef\xef\x7c\x3d\xcf\x72\xf6\x96\x71\xc7\x3d\xd1\x31\x51\x5f\x58\x9f\x38\x06\x90\x6c\xf0\xb4",
        // "dlsym" / M(Xor3) / S(173) / L(5)
        "\xd9\xd1\xce\xc4\xd0\xbd\x15\x6c\x2b\xe2\x95\x30\x8e\x72\xbf\x13",
        // "CFBundleVersion" / M(Xor3) / S(37) / L(15)
        "\x76\x73\x77\x40\x5b\x51\x59\x50\x63\x50\x47\x46\x5c\x5a\x5b\x35",
        // "" / M(None) / S(0) / L(0)
        "\xb9\x79\x89\x02\x3b\x6a\xc1\x8d\x8e\x5b\xba\xd8\x30\x7d\xc3\xaa\x84\x5b\xb8\x85\x6f\x6d\x7b\x5b\xeb\x98\x09\x4e\x3d\x92\xcd\xe8",
        // "CFDataCreateMutable" / M(Xor4) / S(150) / L(19)
        "\xfb\xfe\xfc\xd9\xcc\xd9\xfb\xca\xdd\xd9\xcc\xdd\xf5\xcd\xcc\xd9\xda\xd4\xdd\xb8",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(51) / L(59)
        "\x41\x46\x4d\x46\x12\x4d\x42\x15\x4d\x41\x41\x4d\x45\x14\x4d\x42\x4e\x4d\x44\x16\x4d\x47\x4f\x4d\x11\x11\x4d\x42\x4f\x4d\x13\x46\x4d\x43\x16\x4d\x12\x45\x4d\x45\x43\x4d\x42\x45\x4d\x13\x46\x4d\x4e\x4f\x4d\x13\x11\x4d\x41\x14\x4d\x41\x47\x77\x7f\x30\x5b\x87\xe3\x8c\xad\xc8",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(111) / L(24)
        "\x04\x2c\x29\x2b\x0e\x1b\x0a\x29\x00\x1d\x02\x0e\x1b\x1b\x0a\x1d\x3b\x06\x02\x0a\x35\x00\x01\x0a\x6f\xf1\x6c\x93\xef\x5b\xe4\x85\x8c",
        // "" / M(None) / S(0) / L(0)
        "\xb0\xe9\xf0\x63\xad\x12\x80\xbb\xad\x7b\x9f\xef\x1f\xee\xce\xd9\x3d\x38\x49\x74\xa9\x39\xea\xc0\x76\x67\x97\xe8\xd4\xbd\x61\x98",
        // "d2i_X509_bio" / M(Xor1) / S(238) / L(12)
        "\x8a\xdc\x87\xb1\xb6\xdb\xde\xd7\xb1\x8c\x87\x81\xee\xa1\xb8\xf1",
        // "CFReadStreamOpen" / M(Xor1) / S(153) / L(16)
        "\xda\xdf\xcb\xfc\xf8\xfd\xca\xed\xeb\xfc\xf8\xf4\xd6\xe9\xfc\xf7\x99",
        // "PKCS7_free" / M(Xor1) / S(20) / L(10)
        "\x44\x5f\x57\x47\x23\x4b\x72\x66\x71\x71\x14\x5b\xc7\x92\x85\xac",
        // "" / M(None) / S(0) / L(0)
        "\x14\xc8\x53\xb8\x54\x9b\x87\x4a\x22\x20\xe3\x51\x06\x6e\xc1\x20\x2b\xee\xe1\x66\x4a\x5f\x9b\xab\x86\x47\xfd\xf3\x73\xfc\xbc\xd1",
        // "SHA1_Update" / M(Xor2) / S(64) / L(11)
        "\x03\x18\x11\x61\x0f\x05\x20\x34\x31\x24\x35\x50\x16\x70\x5d\xdf",
        // "getUUIDBytes:" / M(Xor1) / S(152) / L(13)
        "\xff\xfd\xec\xcd\xcd\xd1\xdc\xda\xe1\xec\xfd\xeb\xa2\x98\x8a\x79",
        // "" / M(None) / S(0) / L(0)
        "\x18\x14\x1c\x6c\x72\x03\x49\x08\x5d\xd7\xaa\x4d\x4d\x39\xf5\x88\x84\x1e\xda\xf0\xca\x49\x82\x4a\xed\x27\x52\x8f\xb0\xed\x77\x4b",
        // "EVP_DigestFinal" / M(Xor1) / S(194) / L(15)
        "\x87\x94\x92\x9d\x86\xab\xa5\xa7\xb1\xb6\x84\xab\xac\xa3\xae\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x6e\x97\xf4\xa1\xcc\x35\x4b\x65\xfa\xab\x8c\x30\xd2\xb3\x3b\x7f\x33\xc3\x66\xb2\x21\xfa\xb8\xc6\xc4\x8c\xa8\xe8\xd9\x31\x10\xa3",
        // "CFNumberCreate" / M(Xor4) / S(83) / L(14)
        "\x73\x76\x7e\x45\x5d\x52\x55\x42\x73\x42\x55\x51\x44\x55\x30\x04",
        // "CC_SHA1" / M(Xor1) / S(111) / L(7)
        "\x2c\x2c\x30\x3c\x27\x2e\x5e\x6f\xce\x74\x9c\xee\x23\x43\x57\x47",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(106) / L(16)
        "\x18\x49\x12\x24\x3a\x28\x35\x4a\x24\x32\x35\x2f\x3e\x3c\x3e\x29\x7b",
        // "" / M(None) / S(0) / L(0)
        "\x41\x03\x29\x3a\xd9\x70\x33\xe2\x2b\xd0\xd5\x43\x97\xd3\x90\x4e\xad\xc2\x21\x57\x29\xea\x63\x34\x72\xe4\x12\x72\xd4\x9d\x05\x39",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(243) / L(22)
        "\x8f\xa7\xa2\xa6\x91\x8a\x80\x88\x81\xad\x80\x81\x8a\x90\x8d\x82\x8d\x81\x96\xaf\x81\x9d\xe4",
        // "CFBundleIdentifier" / M(Rot) / S(138) / L(18)
        "\xcd\xd0\xcc\xff\xf8\xee\xf6\xef\xd3\xee\xef\xf8\xfe\xf3\xf0\xf3\xef\xfc\x8a",
        // "init" / M(Xor3) / S(39) / L(4)
        "\x5e\x59\x5e\x43\x37\xf2\x22\x3a\x27\xd1\x0c\x58\x26\xd3\xcc\x61",
        // "X509_get_ext_by_OBJ" / M(Xor3) / S(166) / L(19)
        "\xe2\x8f\x8a\x83\xe5\xdd\xdf\xce\xe5\xdf\xc2\xce\xe5\xd8\xc3\xe5\xf5\xf8\xf0\xba",
        // "setDelegate:" / M(Xor4) / S(155) / L(12)
        "\xc3\xd5\xc4\xf4\xd5\xdc\xd5\xd7\xd1\xc4\xd5\x8a\xb0\x73\x5c\xa8",
        // "X509_STORE_add_cert" / M(Xor3) / S(86) / L(19)
        "\x32\x5f\x5a\x53\x35\x39\x3e\x25\x38\x2f\x35\x0b\x0e\x0e\x35\x09\x0f\x18\x1e\x6a",
        // "PKCS7_get0_signers" / M(Xor2) / S(49) / L(18)
        "\x72\x69\x61\x71\x15\x7d\x45\x47\x56\x12\x7d\x51\x4b\x45\x4c\x47\x50\x51\x22",
        // "CFStringCompare" / M(Xor2) / S(150) / L(15)
        "\xc5\xc0\xd5\xf2\xf4\xef\xe8\xe1\xc5\xe9\xeb\xf6\xe7\xf4\xe3\x86",
        // "getUUIDBytes:" / M(Xor3) / S(144) / L(13)
        "\xc7\xc5\xd4\xf5\xf5\xe9\xe4\xe2\xd9\xd4\xc5\xd3\x9a\xa0\xbc\x42",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(56) / L(40)
        "\x0e\x09\x09\x5d\x0d\x5a\x0e\x0e\x0a\x5b\x0d\x01\x0b\x59\x08\x00\x5e\x5e\x0d\x00\x5c\x09\x0c\x59\x5d\x0a\x0a\x0c\x0d\x0a\x5c\x09\x01\x00\x5c\x5e\x0e\x5b\x0e\x08\x38\x98\x8a\xac\xe0\xb3\xf8\x38\x4f",
        // "CFStringCreateWithCString" / M(Xor2) / S(205) / L(25)
        "\xac\xa9\xbc\x9b\x9d\x86\x81\x88\xac\x9d\x8a\x8e\x9b\x8a\xb8\x86\x9b\x87\xac\xbc\x9b\x9d\x86\x81\x88\xef\x23\x80\x1b\x41\x81\x3a\xb1\x72",
        // "sk_num" / M(Xor1) / S(199) / L(6)
        "\xb4\xac\x98\xa9\xb2\xaa\xc7\xd9\x75\xc0\x28\x72\xe1\xc1\xf3\x70",
        // "Apple Root CA" / M(Xor4) / S(218) / L(13)
        "\xe1\xd0\xd0\xcc\xc5\x80\xf2\xcf\xcf\xd4\x80\xe3\xe1\xa0\x68\x39",
        // "CFDictionaryAddValue" / M(Xor1) / S(137) / L(20)
        "\xca\xcf\xcd\xe0\xea\xfd\xe0\xe6\xe7\xe8\xfb\xf0\xc8\xed\xed\xdf\xe8\xe5\xfc\xec\x89",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x04\x7e\x0c\x1b\x89\xe7\xdb\x66\x91\x3f\x1b\x97\x54\xe5\x5a\xaf\x18\x4d\xce\x15\x44\x23\x6a\x58\xfc\xa2\x91\xd1\x4a\x38\x93",
        // "sel_registerName" / M(Xor2) / S(79) / L(16)
        "\x2d\x3b\x32\x01\x2c\x3b\x39\x37\x2d\x2a\x3b\x2c\x10\x3f\x33\x3b\x5e",
        // "%02x:" / M(Xor4) / S(196) / L(5)
        "\x65\x70\x72\x38\x7a\x40\x9c\x6d\x51\x64\xae\x23\xf0\x8f\x16\x28",
        // "CFDictionarySetValue" / M(Xor2) / S(169) / L(20)
        "\xff\xfa\xf8\xd5\xdf\xc8\xd5\xd3\xd2\xdd\xce\xc5\xef\xd9\xc8\xea\xdd\xd0\xc9\xd9\xbc",
        // "dlopen" / M(Rot) / S(175) / L(6)
        "\x13\x1b\x1e\x1f\x14\x1d\xaf\xcd\x3a\x59\xae\x2e\x98\x6a\xd2\x73",
        // "SHA1" / M(Xor3) / S(131) / L(4)
        "\xc0\xdb\xd2\xa2\x93\xb2\xed\x4f\xcc\x5e\x26\x94\x50\xfa\x09\x49",
        // "CFDictionaryCreateMutable" / M(Rot) / S(46) / L(25)
        "\x71\x74\x72\x97\x91\xa2\x97\x9d\x9c\x8f\xa0\xa7\x71\xa0\x93\x8f\xa2\x93\x7b\xa3\xa2\x8f\x90\x9a\x93\x2e\x56\x7d\x54\x6f\x65\xe6\x6e\xc2",
        // "%02x:" / M(Xor4) / S(194) / L(5)
        "\x05\x10\x12\x58\x1a\x20\x3b\x3c\x60\x74\x08\x0e\x60\x3f\xba\x7b",
        // "appStoreReceiptURL" / M(Xor2) / S(199) / L(18)
        "\xb5\xa4\xa4\x87\xa0\xbb\xa6\xb1\x86\xb1\xb7\xb1\xbd\xa4\xa0\x81\x86\x98\xd4",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(193) / L(24)
        "\x82\x87\x85\xa0\xb5\xa4\x87\xae\xb3\xac\xa0\xb5\xb5\xa4\xb3\x92\xa4\xb5\x87\xae\xb3\xac\xa0\xb5\xc1\x8c\x68\x88\x3e\x48\x4d\xa3\x55",
        // "CC_SHA1_Final" / M(Xor1) / S(163) / L(13)
        "\xe0\xe0\xfc\xf0\xeb\xe2\x92\xfc\xe5\xca\xcd\xc2\xcf\xa3\xd3\xbf",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(21) / L(24)
        "\x3a\x60\x66\x67\x3a\x79\x7c\x77\x3a\x79\x7c\x77\x46\x6c\x66\x61\x70\x78\x3b\x71\x6c\x79\x7c\x77\x15\x3b\x2b\xcb\x81\x3d\xb1\xad\xeb",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(232) / L(29)
        "\x65\x4d\x48\x5a\x77\x7e\x6b\x4a\x67\x6d\x7a\x67\x61\x60\x6f\x7c\x77\x45\x6b\x77\x4d\x6f\x62\x62\x4c\x6f\x6d\x65\x7d\x0e\xe7\xb7\x0f\xb4\x4f\x89\x0f\x01",
        // "CFDataAppendBytes" / M(Xor3) / S(28) / L(17)
        "\x6d\x68\x6a\x4f\x5a\x4f\x6f\x5e\x5e\x4b\x40\x4a\x6c\x57\x5a\x4b\x5d\x2e",
        // "X509_STORE_new" / M(Xor2) / S(37) / L(14)
        "\x6d\x00\x05\x0c\x6a\x66\x61\x7a\x67\x70\x6a\x5b\x50\x42\x35\x4b",
        // "CC_SHA1_Init" / M(Xor2) / S(156) / L(12)
        "\xcf\xcf\xd3\xdf\xc4\xcd\xbd\xd3\xc5\xe2\xe5\xf8\x8c\x79\x12\xcc",
        // "sk_value" / M(Rot) / S(42) / L(8)
        "\x9d\x95\x89\xa0\x8b\x96\x9f\x8f\x2a\x7d\xc3\x38\x86\x29\x14\xb7",
        // "CFRelease" / M(Xor1) / S(84) / L(9)
        "\x17\x12\x06\x31\x38\x31\x35\x27\x31\x54\xcf\xfe\x03\x50\xe9\x21",
        // "" / M(None) / S(0) / L(0)
        "\xaf\xef\xee\x1b\x04\x1c\x62\x3c\x06\x07\x7a\xae\x5e\x50\x5d\xa6\xa6\xa5\x45\xd9\xd2\x27\x5d\xd1\xfe\x28\xf4\x4b\xf7\x9d\xa9\xc5",
    };
    
    // Table for storing pointers
    static void *INSOValidateReceipt_Pointers[483] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) PKCS7_free),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) ASN1_INTEGER_free),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) OpenSSL_add_all_digests),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) strncmp),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) OpenSSL_add_all_digests),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) sk_num),
        ((void *) ASN1_OBJECT_free),
        ((void *) strlen),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int INSOValidateReceipt_UOBIPUYWCZKU __unused;
    static int INSOValidateReceipt_BLXYZLCFZNUH __unused;
    static int INSOValidateReceipt_ZQEPWRCIUUVO __unused;
    static int INSOValidateReceipt_VDUBAEFEDTTP __unused;
    static int INSOValidateReceipt_CRAGCYEBLEXO __unused;
    static int INSOValidateReceipt_WKUDXLMMLHTM __unused;
    static int INSOValidateReceipt_LULESSEUVORP __unused;
    static int INSOValidateReceipt_TANWYFQSKGBR __unused;
    
    
    // The long jump buffer
    static jmp_buf INSOValidateReceipt_JumpBuf __unused;
    
#define INSOValidateReceipt_ASN1_get_object_00140186 ((__INSOValidateReceipt_ASN1_get_object) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction009, 390, 156, 16))
#define INSOValidateReceipt_ASN1_INTEGER_free_015F0005 ((__INSOValidateReceipt_ASN1_INTEGER_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction004, 5, 180, 18))
#define INSOValidateReceipt_ASN1_INTEGER_get_00140007 ((__INSOValidateReceipt_ASN1_INTEGER_get) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction009, 7, 198, 17))
#define INSOValidateReceipt_ASN1_OBJECT_free_015F001B ((__INSOValidateReceipt_ASN1_OBJECT_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction00A, 27, 153, 17))
#define INSOValidateReceipt_BIO_free_00140062 ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00A, 98, 212, 16))
#define INSOValidateReceipt_BIO_free_01AC011D ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction005, 285, 138, 16))
#define INSOValidateReceipt_BIO_new_00140012 ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction003, 18, 62, 16))
#define INSOValidateReceipt_BIO_new_01AC007D ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction008, 125, 237, 16))
#define INSOValidateReceipt_BIO_s_mem_00140074 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction005, 116, 93, 16))
#define INSOValidateReceipt_BIO_s_mem_01AC0074 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction005, 116, 93, 16))
#define INSOValidateReceipt_BIO_write_00140043 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction007, 67, 203, 16))
#define INSOValidateReceipt_BIO_write_00140162 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction004, 354, 143, 16))
#define INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B ((__INSOValidateReceipt_c2i_ASN1_INTEGER) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00C, 283, 108, 17))
#define INSOValidateReceipt_CC_SHA1_01DB0197 ((__INSOValidateReceipt_CC_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction005, 407, 86, 16))
#define INSOValidateReceipt_CFArrayCreateMutable_0088006C ((__INSOValidateReceipt_CFArrayCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction009, 108, 140, 21))
#define INSOValidateReceipt_CFBundleGetMainBundle_00D10187 ((__INSOValidateReceipt_CFBundleGetMainBundle) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction004, 391, 193, 22))
#define INSOValidateReceipt_CFBundleUnloadExecutable_00D10193 ((__INSOValidateReceipt_CFBundleUnloadExecutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction003, 403, 55, 33))
#define INSOValidateReceipt_CFDataAppendBytes_00D100D0 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, 208, 44, 18))
#define INSOValidateReceipt_CFDataCreate_00580009 ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, 9, 244, 16))
#define INSOValidateReceipt_CFDataCreateMutable_00D10142 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00C, 322, 142, 20))
#define INSOValidateReceipt_CFDataGetLength_0058016C ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction008, 364, 132, 16))
#define INSOValidateReceipt_CFDataGetLength_0088016C ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction008, 364, 132, 16))
#define INSOValidateReceipt_CFDateFormatterCreate_00D100DF ((__INSOValidateReceipt_CFDateFormatterCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00A, 223, 82, 22))
#define INSOValidateReceipt_CFDictionaryAddValue_005801CF ((__INSOValidateReceipt_CFDictionaryAddValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction006, 463, 137, 21))
#define INSOValidateReceipt_CFDictionaryCreateMutable_008800AE ((__INSOValidateReceipt_CFDictionaryCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00B, 174, 202, 34))
#define INSOValidateReceipt_CFNumberCreate_00880079 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00C, 121, 172, 16))
#define INSOValidateReceipt_CFNumberCreate_00D10060 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00B, 96, 194, 16))
#define INSOValidateReceipt_CFRelease_00580002 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, 2, 82, 16))
#define INSOValidateReceipt_CFRelease_005801A9 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00A, 425, 252, 16))
#define INSOValidateReceipt_CFRelease_008801A9 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00A, 425, 252, 16))
#define INSOValidateReceipt_CFRelease_008801E1 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction005, 481, 84, 16))
#define INSOValidateReceipt_CFRelease_00D10002 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00B, 2, 82, 16))
#define INSOValidateReceipt_CFRelease_00D101A9 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00A, 425, 252, 16))
#define INSOValidateReceipt_CFRelease_00D101E1 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction005, 481, 84, 16))
#define INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00D100E4 ((__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, 228, 198, 48))
#define INSOValidateReceipt_d2i_PKCS7_bio_00140064 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction006, 100, 41, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_015F0011 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction004, 17, 254, 16))
#define INSOValidateReceipt_d2i_X509_bio_001401B5 ((__INSOValidateReceipt_d2i_X509_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction005, 437, 238, 16))
#define INSOValidateReceipt_EVP_DigestFinal_015F013D ((__INSOValidateReceipt_EVP_DigestFinal) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction006, 317, 176, 16))
#define INSOValidateReceipt_EVP_DigestInit_01AC0047 ((__INSOValidateReceipt_EVP_DigestInit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction009, 71, 226, 16))
#define INSOValidateReceipt_EVP_DigestUpdate_015F0151 ((__INSOValidateReceipt_EVP_DigestUpdate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction005, 337, 37, 17))
#define INSOValidateReceipt_EVP_get_digestbyname_015F0093 ((__INSOValidateReceipt_EVP_get_digestbyname) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction007, 147, 75, 21))
#define INSOValidateReceipt_EVP_MD_CTX_init_00140165 ((__INSOValidateReceipt_EVP_MD_CTX_init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00A, 357, 78, 16))
#define INSOValidateReceipt_exit_00A8011E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction008, 286, 144, 16))
#define INSOValidateReceipt_exit_00A8011F ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction005, 287, 109, 16))
#define INSOValidateReceipt_exit_0169011E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 361, 143, 33, INSOValidateReceipt_ObfuscationFunction008, 286, 144, 16))
#define INSOValidateReceipt_exit_0169011F ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 361, 143, 33, INSOValidateReceipt_ObfuscationFunction005, 287, 109, 16))
#define INSOValidateReceipt_exit_01DB011E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction008, 286, 144, 16))
#define INSOValidateReceipt_exit_01DB019C ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction00A, 412, 106, 16))
#define INSOValidateReceipt_UOBIPUYWCZKU_00580039 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_UOBIPUYWCZKU, 252, 21))
#define INSOValidateReceipt_UOBIPUYWCZKU_0058008B ((__INSOValidateReceipt_CFDateCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_UOBIPUYWCZKU, 45, 16))
#define INSOValidateReceipt_UOBIPUYWCZKU_0058009E ((__INSOValidateReceipt_CFDictionarySetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_UOBIPUYWCZKU, 85, 21))
#define INSOValidateReceipt_UOBIPUYWCZKU_00580127 ((__INSOValidateReceipt_CFReadStreamOpen) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_UOBIPUYWCZKU, 76, 17))
#define INSOValidateReceipt_UOBIPUYWCZKU_00D10114 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_UOBIPUYWCZKU, 137, 37))
#define INSOValidateReceipt_BLXYZLCFZNUH_005800D7 ((__INSOValidateReceipt_CFReadStreamRead) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_BLXYZLCFZNUH, 216, 17))
#define INSOValidateReceipt_BLXYZLCFZNUH_00D10039 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_BLXYZLCFZNUH, 252, 21))
#define INSOValidateReceipt_BLXYZLCFZNUH_00D10060 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_BLXYZLCFZNUH, 194, 16))
#define INSOValidateReceipt_BLXYZLCFZNUH_01DB0042 ((__INSOValidateReceipt_CC_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_BLXYZLCFZNUH, 188, 16))
#define INSOValidateReceipt_ZQEPWRCIUUVO_0058005F ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_ZQEPWRCIUUVO, 92, 16))
#define INSOValidateReceipt_ZQEPWRCIUUVO_005800B6 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_ZQEPWRCIUUVO, 32, 16))
#define INSOValidateReceipt_ZQEPWRCIUUVO_0058017B ((__INSOValidateReceipt_CFAbsoluteTimeGetCurrent) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_ZQEPWRCIUUVO, 204, 33))
#define INSOValidateReceipt_ZQEPWRCIUUVO_00880009 ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_ZQEPWRCIUUVO, 244, 16))
#define INSOValidateReceipt_ZQEPWRCIUUVO_008801C9 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_ZQEPWRCIUUVO, 150, 16))
#define INSOValidateReceipt_ZQEPWRCIUUVO_00A801DA ((__INSOValidateReceipt_CC_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_ZQEPWRCIUUVO, 163, 16))
#define INSOValidateReceipt_VDUBAEFEDTTP_00580109 ((__INSOValidateReceipt_CFReadStreamCreateWithFile) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_VDUBAEFEDTTP, 186, 35))
#define INSOValidateReceipt_VDUBAEFEDTTP_00880145 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_VDUBAEFEDTTP, 130, 20))
#define INSOValidateReceipt_VDUBAEFEDTTP_00D1001C ((__INSOValidateReceipt_CFDateCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_VDUBAEFEDTTP, 234, 16))
#define INSOValidateReceipt_VDUBAEFEDTTP_00D100B6 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_VDUBAEFEDTTP, 32, 16))
#define INSOValidateReceipt_VDUBAEFEDTTP_00D10144 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_VDUBAEFEDTTP, 122, 17))
#define INSOValidateReceipt_VDUBAEFEDTTP_00D10176 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_VDUBAEFEDTTP, 201, 17))
#define INSOValidateReceipt_CRAGCYEBLEXO_00580039 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_CRAGCYEBLEXO, 252, 21))
#define INSOValidateReceipt_CRAGCYEBLEXO_005800FF ((__INSOValidateReceipt_CFDateFormatterSetProperty) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_CRAGCYEBLEXO, 42, 35))
#define INSOValidateReceipt_CRAGCYEBLEXO_0088004C ((__INSOValidateReceipt_CFArrayGetValueAtIndex) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_CRAGCYEBLEXO, 94, 23))
#define INSOValidateReceipt_CRAGCYEBLEXO_008800D0 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_CRAGCYEBLEXO, 44, 18))
#define INSOValidateReceipt_CRAGCYEBLEXO_00880114 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_CRAGCYEBLEXO, 137, 37))
#define INSOValidateReceipt_CRAGCYEBLEXO_00880145 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_CRAGCYEBLEXO, 130, 20))
#define INSOValidateReceipt_WKUDXLMMLHTM_005801BE ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_WKUDXLMMLHTM, 83, 16))
#define INSOValidateReceipt_WKUDXLMMLHTM_00880039 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_WKUDXLMMLHTM, 252, 21))
#define INSOValidateReceipt_WKUDXLMMLHTM_008800D0 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_WKUDXLMMLHTM, 44, 18))
#define INSOValidateReceipt_WKUDXLMMLHTM_00D1010C ((__INSOValidateReceipt_CFDateFormatterSetFormat) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_WKUDXLMMLHTM, 2, 33))
#define INSOValidateReceipt_WKUDXLMMLHTM_00D1010F ((__INSOValidateReceipt_CFEqual) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_WKUDXLMMLHTM, 196, 16))
#define INSOValidateReceipt_LULESSEUVORP_00580060 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_LULESSEUVORP, 194, 16))
#define INSOValidateReceipt_LULESSEUVORP_00880039 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_LULESSEUVORP, 252, 21))
#define INSOValidateReceipt_LULESSEUVORP_00880152 ((__INSOValidateReceipt_CFDateFormatterCreateDateFromString) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_LULESSEUVORP, 92, 36))
#define INSOValidateReceipt_LULESSEUVORP_00A80069 ((__INSOValidateReceipt_CC_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_LULESSEUVORP, 107, 16))
#define INSOValidateReceipt_LULESSEUVORP_00D1005F ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_LULESSEUVORP, 92, 16))
#define INSOValidateReceipt_LULESSEUVORP_00D100E9 ((__INSOValidateReceipt_CFReadStreamClose) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_LULESSEUVORP, 143, 18))
#define INSOValidateReceipt_LULESSEUVORP_00D1016C ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_LULESSEUVORP, 132, 16))
#define INSOValidateReceipt_TANWYFQSKGBR_005800AD ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_TANWYFQSKGBR, 176, 16))
#define INSOValidateReceipt_TANWYFQSKGBR_005800B0 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_TANWYFQSKGBR, 198, 17))
#define INSOValidateReceipt_TANWYFQSKGBR_00580188 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_TANWYFQSKGBR, 210, 21))
#define INSOValidateReceipt_TANWYFQSKGBR_008800CD ((__INSOValidateReceipt_CFBundleGetIdentifier) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_TANWYFQSKGBR, 11, 22))
#define INSOValidateReceipt_TANWYFQSKGBR_00880194 ((__INSOValidateReceipt_CFArrayGetCount) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_TANWYFQSKGBR, 148, 16))
#define INSOValidateReceipt_TANWYFQSKGBR_00D10060 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_TANWYFQSKGBR, 194, 16))
#define INSOValidateReceipt_TANWYFQSKGBR_00D10123 ((__INSOValidateReceipt_CFArrayAppendValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_TANWYFQSKGBR, 165, 19))
#define INSOValidateReceipt_kCFBundleIdentifierKey_00580158 ((__INSOValidateReceipt_kCFBundleIdentifierKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 88, 195, 67, INSOValidateReceipt_ObfuscationFunction004, 344, 172, 23))
#define INSOValidateReceipt_kCFDateFormatterTimeZone_00880078 ((__INSOValidateReceipt_kCFDateFormatterTimeZone) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 136, 219, 67, INSOValidateReceipt_ObfuscationFunction003, 120, 17, 33))
#define INSOValidateReceipt_kCFTypeArrayCallBacks_00D10033 ((__INSOValidateReceipt_kCFTypeArrayCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction006, 51, 103, 22))
#define INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00D10066 ((__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction00C, 102, 57, 38))
#define INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00D1006A ((__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 209, 227, 67, INSOValidateReceipt_ObfuscationFunction004, 106, 153, 32))
#define INSOValidateReceipt_longjmp_00A8001D ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction009, 29, 205, 16))
#define INSOValidateReceipt_longjmp_00A80032 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction006, 50, 187, 16))
#define INSOValidateReceipt_longjmp_00A8012D ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction008, 301, 50, 16))
#define INSOValidateReceipt_longjmp_0169001D ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 361, 143, 33, INSOValidateReceipt_ObfuscationFunction009, 29, 205, 16))
#define INSOValidateReceipt_longjmp_0169012D ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 361, 143, 33, INSOValidateReceipt_ObfuscationFunction008, 301, 50, 16))
#define INSOValidateReceipt_longjmp_01DB001D ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction009, 29, 205, 16))
#define INSOValidateReceipt_longjmp_01DB0032 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 475, 21, 33, INSOValidateReceipt_ObfuscationFunction006, 50, 187, 16))
#define INSOValidateReceipt_OBJ_txt2obj_001400F2 ((__INSOValidateReceipt_OBJ_txt2obj) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction006, 242, 30, 16))
#define INSOValidateReceipt_objc_getClass_0118013F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction00B, 319, 31, 16))
#define INSOValidateReceipt_objc_getClass_01180190 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction00C, 400, 230, 16))
#define INSOValidateReceipt_objc_getClass_012F013F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction00B, 319, 31, 16))
#define INSOValidateReceipt_objc_getClass_012F0190 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction00C, 400, 230, 16))
#define INSOValidateReceipt_objc_getClass_012F01A0 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction007, 416, 241, 16))
#define INSOValidateReceipt_objc_getClass_01800190 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction00C, 400, 230, 16))
#define INSOValidateReceipt_objc_lookUpClass_01180046 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction006, 70, 42, 17))
#define INSOValidateReceipt_objc_lookUpClass_01800046 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction006, 70, 42, 17))
#define INSOValidateReceipt_objc_msgSend_01180068 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction00C, 104, 247, 16))
#define INSOValidateReceipt_objc_msgSend_01180097 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction00C, 151, 110, 16))
#define INSOValidateReceipt_objc_msgSend_012F0068 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction00C, 104, 247, 16))
#define INSOValidateReceipt_objc_msgSend_012F0097 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction00C, 151, 110, 16))
#define INSOValidateReceipt_objc_msgSend_01800068 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction00C, 104, 247, 16))
#define INSOValidateReceipt_objc_msgSend_01800097 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction00C, 151, 110, 16))
#define INSOValidateReceipt_objc_msgSend_01800184 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction009, 388, 120, 16))
#define INSOValidateReceipt_OpenSSL_add_all_digests_001400C7 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00B, 199, 52, 32))
#define INSOValidateReceipt_OpenSSL_add_all_digests_01AC00C7 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction00B, 199, 52, 32))
#define INSOValidateReceipt_PKCS7_free_001401B7 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction005, 439, 20, 16))
#define INSOValidateReceipt_PKCS7_free_01AC00A0 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction009, 160, 43, 16))
#define INSOValidateReceipt_PKCS7_get0_signers_001400E2 ((__INSOValidateReceipt_PKCS7_get0_signers) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00A, 226, 20, 19))
#define INSOValidateReceipt_PKCS7_verify_01AC00BE ((__INSOValidateReceipt_PKCS7_verify) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction008, 190, 165, 16))
#define INSOValidateReceipt_sel_registerName_011801D1 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 280, 139, 23, INSOValidateReceipt_ObfuscationFunction008, 465, 79, 17))
#define INSOValidateReceipt_sel_registerName_012F000A ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction004, 10, 189, 17))
#define INSOValidateReceipt_sel_registerName_012F0070 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 303, 98, 23, INSOValidateReceipt_ObfuscationFunction00B, 112, 60, 17))
#define INSOValidateReceipt_sel_registerName_0180000A ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction004, 10, 189, 17))
#define INSOValidateReceipt_sel_registerName_01800070 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction00B, 112, 60, 17))
#define INSOValidateReceipt_sel_registerName_018001D1 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 384, 22, 23, INSOValidateReceipt_ObfuscationFunction008, 465, 79, 17))
#define INSOValidateReceipt_setjmp_00A80140 ((__INSOValidateReceipt_setjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 168, 155, 33, INSOValidateReceipt_ObfuscationFunction004, 320, 223, 16))
#define INSOValidateReceipt_SHA1_001401D5 ((__INSOValidateReceipt_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00A, 469, 131, 16))
#define INSOValidateReceipt_SHA1_Final_015F010D ((__INSOValidateReceipt_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction008, 269, 19, 16))
#define INSOValidateReceipt_SHA1_Init_001400B9 ((__INSOValidateReceipt_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00B, 185, 188, 16))
#define INSOValidateReceipt_SHA1_Update_01AC0071 ((__INSOValidateReceipt_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction004, 113, 219, 16))
#define INSOValidateReceipt_sk_free_0014019A ((__INSOValidateReceipt_sk_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction005, 410, 80, 16))
#define INSOValidateReceipt_sk_num_01AC0132 ((__INSOValidateReceipt_sk_num) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction006, 306, 168, 16))
#define INSOValidateReceipt_sk_value_00140035 ((__INSOValidateReceipt_sk_value) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00B, 53, 115, 16))
#define INSOValidateReceipt_X509_digest_01AC00CF ((__INSOValidateReceipt_X509_digest) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction006, 207, 196, 16))
#define INSOValidateReceipt_X509_free_01AC0020 ((__INSOValidateReceipt_X509_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction007, 32, 112, 16))
#define INSOValidateReceipt_X509_get_ext_by_OBJ_015F0050 ((__INSOValidateReceipt_X509_get_ext_by_OBJ) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 351, 159, 16, INSOValidateReceipt_ObfuscationFunction008, 80, 133, 20))
#define INSOValidateReceipt_X509_NAME_get_text_by_NID_00140104 ((__INSOValidateReceipt_X509_NAME_get_text_by_NID) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00C, 260, 210, 34))
#define INSOValidateReceipt_X509_STORE_add_cert_01AC01C7 ((__INSOValidateReceipt_X509_STORE_add_cert) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction00A, 455, 86, 20))
#define INSOValidateReceipt_X509_STORE_free_01AC00A3 ((__INSOValidateReceipt_X509_STORE_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 428, 80, 16, INSOValidateReceipt_ObfuscationFunction00A, 163, 94, 16))
#define INSOValidateReceipt_X509_STORE_new_00140195 ((__INSOValidateReceipt_X509_STORE_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 20, 30, 16, INSOValidateReceipt_ObfuscationFunction00C, 405, 40, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction003(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction003CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction003(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[321])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction004(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction004CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction004(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[180])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction005(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction005CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction005(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[321])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction006(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction006CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction006(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[460])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction007(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction007CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction007(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[23])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction008(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction008CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction008(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[175])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction009(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction009CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction009(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[321])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction00A(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00ACF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00A(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[180])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00B(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00BCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction00B(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[376])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00C(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00CCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00C(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[180])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_decrypt INSOValidateReceipt_func1, int INSOValidateReceipt_index1, int INSOValidateReceipt_val1, int INSOValidateReceipt_len1, INSOValidateReceipt_decrypt INSOValidateReceipt_func2, int INSOValidateReceipt_index2, int INSOValidateReceipt_val2, int INSOValidateReceipt_len2) {
        char INSOValidateReceipt_tmp1[483], INSOValidateReceipt_tmp2[483];
        // Load the library if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] == NULL) {
            INSOValidateReceipt_func1(INSOValidateReceipt_Strings[INSOValidateReceipt_index1], INSOValidateReceipt_tmp1, INSOValidateReceipt_val1, INSOValidateReceipt_len1);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] = ((__INSOValidateReceipt_dlopen) INSOValidateReceipt_Pointers[468])(INSOValidateReceipt_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] == NULL) {
            INSOValidateReceipt_func2(INSOValidateReceipt_Strings[INSOValidateReceipt_index2], INSOValidateReceipt_tmp2, INSOValidateReceipt_val2, INSOValidateReceipt_len2);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] = ((__INSOValidateReceipt_dlsym) INSOValidateReceipt_Pointers[72])(INSOValidateReceipt_Pointers[INSOValidateReceipt_index1], INSOValidateReceipt_tmp2);
        }
        return INSOValidateReceipt_Pointers[INSOValidateReceipt_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle");
        // Retrieve the main bundle
        CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_00D10187();
        if (!INSOValidateReceipt_bundle) {
            // Dead code
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_bundle);
            INSOValidateReceipt_CFBundleUnloadExecutable_00D10193((CFBundleRef) INSOValidateReceipt_bundle);
        }
        INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle;
        // Global variables computation
        // Set to 295
        INSOValidateReceipt_UOBIPUYWCZKU = 295;
        // Set to 215
        INSOValidateReceipt_BLXYZLCFZNUH = 215;
        // Set to 265
        INSOValidateReceipt_VDUBAEFEDTTP = 265;
        // Set to 325
        INSOValidateReceipt_CRAGCYEBLEXO = 325;
        // Set to 208
        INSOValidateReceipt_WKUDXLMMLHTM = 208;
        // Set to 233
        INSOValidateReceipt_LULESSEUVORP = 233;
    }
#else
#define INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle"); \
CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_00D10187(); \
if (!INSOValidateReceipt_bundle) { \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_bundle); \
INSOValidateReceipt_CFBundleUnloadExecutable_00D10193((CFBundleRef) INSOValidateReceipt_bundle); \
} \
INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle; \
INSOValidateReceipt_UOBIPUYWCZKU = 295; \
INSOValidateReceipt_BLXYZLCFZNUH = 215; \
INSOValidateReceipt_VDUBAEFEDTTP = 265; \
INSOValidateReceipt_CRAGCYEBLEXO = 325; \
INSOValidateReceipt_WKUDXLMMLHTM = 208; \
INSOValidateReceipt_LULESSEUVORP = 233; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void INSOValidateReceipt_LoadReceipt040(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle;
        CFURLRef INSOValidateReceipt_url1;
        CFReadStreamRef INSOValidateReceipt_stream;
        CFMutableDataRef INSOValidateReceipt_data;
        CFIndex INSOValidateReceipt_count;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3;
        uint8_t INSOValidateReceipt_buffer[483];
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt");
        // Get NSBundle class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[69]), INSOValidateReceipt_str1_, 190, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_lookUpClass_01180046(INSOValidateReceipt_str1);
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[423]), INSOValidateReceipt_str2_, 121, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_0180000A(INSOValidateReceipt_str2);
        INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2);
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[107]), INSOValidateReceipt_str3_, 243, 19);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_0180000A(INSOValidateReceipt_str3);
        INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3));
        // Create a stream from the receipt file
        INSOValidateReceipt_stream = INSOValidateReceipt_VDUBAEFEDTTP_00580109(kCFAllocatorDefault, INSOValidateReceipt_url1);
        if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_UOBIPUYWCZKU_00580127(INSOValidateReceipt_stream)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_0169001D(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_url1);
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1);
            goto INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail;
        }
        // Create the data object that will contains receipt data
        INSOValidateReceipt_data = INSOValidateReceipt_CRAGCYEBLEXO_00880145(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            INSOValidateReceipt_count = INSOValidateReceipt_BLXYZLCFZNUH_005800D7(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483);
            if (INSOValidateReceipt_count > 0) {
                INSOValidateReceipt_WKUDXLMMLHTM_008800D0(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count);
            }
        } while (INSOValidateReceipt_count > 0);
        // Close the stream
        INSOValidateReceipt_LULESSEUVORP_00D100E9(INSOValidateReceipt_stream);
        if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_ctx->receipt_data);
        INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data;
        // Global variables computation
        // Set to 173
        INSOValidateReceipt_TANWYFQSKGBR = 173;
    INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_stream);
    }
#else
#define INSOValidateReceipt_LoadReceipt040(INSOValidateReceipt_ctx) { \
id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle; \
CFURLRef INSOValidateReceipt_url1; \
CFReadStreamRef INSOValidateReceipt_stream; \
CFMutableDataRef INSOValidateReceipt_data; \
CFIndex INSOValidateReceipt_count; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3; \
uint8_t INSOValidateReceipt_buffer[483]; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[69]), INSOValidateReceipt_str1_, 190, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_lookUpClass_01180046(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[423]), INSOValidateReceipt_str2_, 121, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_0180000A(INSOValidateReceipt_str2); \
INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[107]), INSOValidateReceipt_str3_, 243, 19); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_0180000A(INSOValidateReceipt_str3); \
INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3)); \
INSOValidateReceipt_stream = INSOValidateReceipt_VDUBAEFEDTTP_00580109(kCFAllocatorDefault, INSOValidateReceipt_url1); \
if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_UOBIPUYWCZKU_00580127(INSOValidateReceipt_stream)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0169001D(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_url1); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1); \
goto INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_data = INSOValidateReceipt_CRAGCYEBLEXO_00880145(kCFAllocatorDefault, 0); \
do { \
INSOValidateReceipt_count = INSOValidateReceipt_BLXYZLCFZNUH_005800D7(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483); \
if (INSOValidateReceipt_count > 0) { \
INSOValidateReceipt_WKUDXLMMLHTM_008800D0(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count); \
} \
} while (INSOValidateReceipt_count > 0); \
INSOValidateReceipt_LULESSEUVORP_00D100E9(INSOValidateReceipt_stream); \
if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data; \
INSOValidateReceipt_TANWYFQSKGBR = 173; \
INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetGUID04E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        Class INSOValidateReceipt_deviceClass;
        id INSOValidateReceipt_device, INSOValidateReceipt_identifier;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4;
        uuid_t INSOValidateReceipt_uuid;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier");
        // Get the UIDevice class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[123]), INSOValidateReceipt_str1_, 59, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_getClass_012F013F(INSOValidateReceipt_str1);
        // Call [UIDevice currentDevice]
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[42]), INSOValidateReceipt_str2_, 30, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str2);
        INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2);
        // Call [device identifierForVendor]
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[86]), INSOValidateReceipt_str3_, 176, 20);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str3);
        INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3);
        // Call [identifier getUUIDBytes:INSOValidateReceipt_uuid]
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[394]), INSOValidateReceipt_str4_, 127, 16);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid);
        if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_ctx->guid_data);
        volatile int INSOValidateReceipt_size = 13; INSOValidateReceipt_size -= 8; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;
        INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_TANWYFQSKGBR_005800AD(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size);
        // Global variables computation
        // Set to 182
        INSOValidateReceipt_ZQEPWRCIUUVO = 182;
        // From 325 to 276
        INSOValidateReceipt_CRAGCYEBLEXO += 227; INSOValidateReceipt_CRAGCYEBLEXO /= 2;
        // From 173 to 205
        INSOValidateReceipt_TANWYFQSKGBR -= 105; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 1;
    }
#else
#define INSOValidateReceipt_GetGUID04E(INSOValidateReceipt_ctx) { \
Class INSOValidateReceipt_deviceClass; \
id INSOValidateReceipt_device, INSOValidateReceipt_identifier; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4; \
uuid_t INSOValidateReceipt_uuid; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[123]), INSOValidateReceipt_str1_, 59, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_getClass_012F013F(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[42]), INSOValidateReceipt_str2_, 30, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str2); \
INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[86]), INSOValidateReceipt_str3_, 176, 20); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str3); \
INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3); \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[394]), INSOValidateReceipt_str4_, 127, 16); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_012F000A(INSOValidateReceipt_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid); \
if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_ctx->guid_data); \
volatile int INSOValidateReceipt_size = 13; INSOValidateReceipt_size -= 8; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;  \
INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_TANWYFQSKGBR_005800AD(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size); \
INSOValidateReceipt_ZQEPWRCIUUVO = 182; \
INSOValidateReceipt_CRAGCYEBLEXO += 227; INSOValidateReceipt_CRAGCYEBLEXO /= 2;  \
INSOValidateReceipt_TANWYFQSKGBR -= 105; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 1;  \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[204]), 147, 49);
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier");
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[451]), 138, 19);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_00880114((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_ZQEPWRCIUUVO_005800B6(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
        }
        INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str2);
        // Global variables computation
        // From 295 to 276
        INSOValidateReceipt_UOBIPUYWCZKU += 257; INSOValidateReceipt_UOBIPUYWCZKU /= 2;
        // From 182 to 457
        INSOValidateReceipt_ZQEPWRCIUUVO -= 68; INSOValidateReceipt_ZQEPWRCIUUVO *= 4; INSOValidateReceipt_ZQEPWRCIUUVO += 1;
        INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_ctx) { \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[204]), 147, 49); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier"); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[451]), 138, 19); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_00880114((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_ZQEPWRCIUUVO_005800B6(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str2); \
INSOValidateReceipt_UOBIPUYWCZKU += 257; INSOValidateReceipt_UOBIPUYWCZKU /= 2;  \
INSOValidateReceipt_ZQEPWRCIUUVO -= 68; INSOValidateReceipt_ZQEPWRCIUUVO *= 4; INSOValidateReceipt_ZQEPWRCIUUVO += 1;  \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleVersion060(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version");
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[177]), 87, 16);
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[431]), 37, 16);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_UOBIPUYWCZKU_00D10114((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_ZQEPWRCIUUVO_008801C9(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A8012D(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 276 to 158
        INSOValidateReceipt_UOBIPUYWCZKU += 198; INSOValidateReceipt_UOBIPUYWCZKU /= 3;
        // From 215 to 57
        INSOValidateReceipt_BLXYZLCFZNUH += 70; INSOValidateReceipt_BLXYZLCFZNUH /= 5;
        // From 457 to 9
        INSOValidateReceipt_ZQEPWRCIUUVO += 11; INSOValidateReceipt_ZQEPWRCIUUVO /= 52;
        // Set to 374
        INSOValidateReceipt_VDUBAEFEDTTP = 374;
        // From 276 to 255
        INSOValidateReceipt_CRAGCYEBLEXO += 234; INSOValidateReceipt_CRAGCYEBLEXO /= 2;
        // From 208 to 268
        INSOValidateReceipt_WKUDXLMMLHTM -= 119; INSOValidateReceipt_WKUDXLMMLHTM *= 3; INSOValidateReceipt_WKUDXLMMLHTM += 1;
        // From 233 to 338
        INSOValidateReceipt_LULESSEUVORP -= 121; INSOValidateReceipt_LULESSEUVORP *= 3; INSOValidateReceipt_LULESSEUVORP += 2;
        // From 205 to 291
        INSOValidateReceipt_TANWYFQSKGBR -= 108; INSOValidateReceipt_TANWYFQSKGBR *= 3;
        INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str2);
        INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleVersion060(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version"); \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[177]), 87, 16); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[431]), 37, 16); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_UOBIPUYWCZKU_00D10114((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_ZQEPWRCIUUVO_008801C9(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A8012D(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_UOBIPUYWCZKU += 198; INSOValidateReceipt_UOBIPUYWCZKU /= 3;  \
INSOValidateReceipt_BLXYZLCFZNUH += 70; INSOValidateReceipt_BLXYZLCFZNUH /= 5;  \
INSOValidateReceipt_ZQEPWRCIUUVO += 11; INSOValidateReceipt_ZQEPWRCIUUVO /= 52;  \
INSOValidateReceipt_VDUBAEFEDTTP = 374; \
INSOValidateReceipt_CRAGCYEBLEXO += 234; INSOValidateReceipt_CRAGCYEBLEXO /= 2;  \
INSOValidateReceipt_WKUDXLMMLHTM -= 119; INSOValidateReceipt_WKUDXLMMLHTM *= 3; INSOValidateReceipt_WKUDXLMMLHTM += 1;  \
INSOValidateReceipt_LULESSEUVORP -= 121; INSOValidateReceipt_LULESSEUVORP *= 3; INSOValidateReceipt_LULESSEUVORP += 2;  \
INSOValidateReceipt_TANWYFQSKGBR -= 108; INSOValidateReceipt_TANWYFQSKGBR *= 3;  \
INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_008801A9(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetReceiptInformation062(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context;
        INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context;
        CFNumberRef INSOValidateReceipt_key;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2;
        int INSOValidateReceipt_type;
        int INSOValidateReceipt_xclass;
        long INSOValidateReceipt_length;
        CFDateFormatterRef INSOValidateReceipt_formatter = NULL;
        CFTimeZoneRef INSOValidateReceipt_tz = NULL;
        BIO *INSOValidateReceipt_bio_p7;
        PKCS7 *INSOValidateReceipt_pkcs7;
        ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content;
        ASN1_INTEGER *INSOValidateReceipt_value;
        const unsigned char *INSOValidateReceipt_seq_end;
        long INSOValidateReceipt_attr_type;
        long INSOValidateReceipt_attr_version;
        int INSOValidateReceipt_str_type;
        long INSOValidateReceipt_str_length;
        const unsigned char *INSOValidateReceipt_str_ptr;
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context;
        long INSOValidateReceipt_number;
        int INSOValidateReceipt_num_type;
        long INSOValidateReceipt_num_length;
        const unsigned char *INSOValidateReceipt_num_ptr;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_00140012(INSOValidateReceipt_BIO_s_mem_01AC0074());
        INSOValidateReceipt_BIO_write_00140162(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VDUBAEFEDTTP_00D10176((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_0088016C((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00140064(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_00D100DF(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[212]), 156, 33);
        INSOValidateReceipt_WKUDXLMMLHTM_00D1010C(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1);
        INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1);
        INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00D100E4(NULL, 0.0);
        INSOValidateReceipt_CRAGCYEBLEXO_005800FF(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00880078, INSOValidateReceipt_tz);
        INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_tz);
        // Initial context
        INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data;
        INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data;
        INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length;
        INSOValidateReceipt_receipt_context.parent = NULL;
        INSOValidateReceipt_receipt_context.dictionary = NULL;
        INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context;
        while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
            if (!INSOValidateReceipt_current_context->dictionary) {
                // Create the target dictionary
                INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_008800AE(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00D10066, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00D1006A);
                // Decode payload from ASN.1
                INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SET) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                }
            }
            // Iterate over attributes
            while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
                // Parse attribute sequence
                INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length;
                INSOValidateReceipt_attr_type = 0;
                INSOValidateReceipt_attr_version = 0;
                // Parse the attribute type
                INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value);
                // Parse the attribute version
                INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value);
                // Check the attribute value
                INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1));
                INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1) + 1);
                INSOValidateReceipt_value1 = NULL;
                INSOValidateReceipt_value2 = NULL;
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type);
                switch (INSOValidateReceipt_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleId:
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion:
                    case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion:
                    case INSOValidateReceipt_InAppAttributeTypeProductIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[23])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false);
                        INSOValidateReceipt_value2 = INSOValidateReceipt_ZQEPWRCIUUVO_00880009(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate:
                    case INSOValidateReceipt_InAppAttributeTypeCancellationDate:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypePurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[23])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_LULESSEUVORP_00880152(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case INSOValidateReceipt_InAppAttributeTypeQuantity:
                    case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId:
                    {
                        INSOValidateReceipt_num_type = 0;
                        INSOValidateReceipt_num_length = 0;
                        INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr);
                        if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length);
                        INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value);
                        INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberLongType, &INSOValidateReceipt_number);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue:
                    case INSOValidateReceipt_ReceiptAttributeTypeHash:
                    {
                        INSOValidateReceipt_value1 = INSOValidateReceipt_ZQEPWRCIUUVO_00880009(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_0088016C((CFDataRef) INSOValidateReceipt_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length;
                        INSOValidateReceipt_inapp_context.dictionary = NULL;
                        INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context;
                        INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context;
                        goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_key;
                    }
                    default:
                        break;
                }
                if (INSOValidateReceipt_value1) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                    INSOValidateReceipt_CFDictionaryAddValue_005801CF((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1);
                }
                if (INSOValidateReceipt_value2) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFDictionaryAddValue_005801CF((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2);
                    INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value2);
                }
                // Move past the attribute
                INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length;
            }
        INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_key:
            // If the current context is a new one, continue parsing
            if (!INSOValidateReceipt_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (INSOValidateReceipt_current_context->parent) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase");
                INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
                INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                INSOValidateReceipt_value1 = INSOValidateReceipt_BLXYZLCFZNUH_00D10039((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key);
                if (!INSOValidateReceipt_value1) {
                    INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_0088006C(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_00D10033);
                    INSOValidateReceipt_UOBIPUYWCZKU_0058009E((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1);
                }
                INSOValidateReceipt_TANWYFQSKGBR_00D10123((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
                // Switch to parent context
                INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent;
                // Move past the child context
                INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end;
            }
        }
        if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_ctx->receipt_dict);
        INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary;
        // Global variables computation
        // From 374 to 324
        INSOValidateReceipt_VDUBAEFEDTTP += 274; INSOValidateReceipt_VDUBAEFEDTTP /= 2;
        // From 338 to 364
        INSOValidateReceipt_LULESSEUVORP -= 217; INSOValidateReceipt_LULESSEUVORP *= 3; INSOValidateReceipt_LULESSEUVORP += 1;
    INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01AC00A0(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00140062(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_formatter);
    }
#else
#define INSOValidateReceipt_GetReceiptInformation062(INSOValidateReceipt_ctx) { \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context; \
INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context; \
CFNumberRef INSOValidateReceipt_key; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2; \
int INSOValidateReceipt_type; \
int INSOValidateReceipt_xclass; \
long INSOValidateReceipt_length; \
CFDateFormatterRef INSOValidateReceipt_formatter = NULL; \
CFTimeZoneRef INSOValidateReceipt_tz = NULL; \
BIO *INSOValidateReceipt_bio_p7; \
PKCS7 *INSOValidateReceipt_pkcs7; \
ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content; \
ASN1_INTEGER *INSOValidateReceipt_value; \
const unsigned char *INSOValidateReceipt_seq_end; \
long INSOValidateReceipt_attr_type; \
long INSOValidateReceipt_attr_version; \
int INSOValidateReceipt_str_type; \
long INSOValidateReceipt_str_length; \
const unsigned char *INSOValidateReceipt_str_ptr; \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context; \
long INSOValidateReceipt_number; \
int INSOValidateReceipt_num_type; \
long INSOValidateReceipt_num_length; \
const unsigned char *INSOValidateReceipt_num_ptr; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_00140012(INSOValidateReceipt_BIO_s_mem_01AC0074()); \
INSOValidateReceipt_BIO_write_00140162(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VDUBAEFEDTTP_00D10176((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_0088016C((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00140064(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_00D100DF(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[212]), 156, 33); \
INSOValidateReceipt_WKUDXLMMLHTM_00D1010C(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1); \
INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00D100E4(NULL, 0.0); \
INSOValidateReceipt_CRAGCYEBLEXO_005800FF(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00880078, INSOValidateReceipt_tz); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_tz); \
INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data; \
INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data; \
INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length; \
INSOValidateReceipt_receipt_context.parent = NULL; \
INSOValidateReceipt_receipt_context.dictionary = NULL; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context; \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
if (!INSOValidateReceipt_current_context->dictionary) { \
INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_008800AE(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00D10066, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00D1006A); \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SET) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
} \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_attr_type = 0; \
INSOValidateReceipt_attr_version = 0; \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1)); \
INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1) + 1); \
INSOValidateReceipt_value1 = NULL; \
INSOValidateReceipt_value2 = NULL; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type); \
switch (INSOValidateReceipt_attr_type) { \
case INSOValidateReceipt_ReceiptAttributeTypeBundleId: \
case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion: \
case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion: \
case INSOValidateReceipt_InAppAttributeTypeProductIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[23])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false); \
INSOValidateReceipt_value2 = INSOValidateReceipt_ZQEPWRCIUUVO_00880009(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate: \
case INSOValidateReceipt_InAppAttributeTypeCancellationDate: \
case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypePurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[23])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false); \
INSOValidateReceipt_value1 = INSOValidateReceipt_LULESSEUVORP_00880152(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_InAppAttributeTypeQuantity: \
case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId: \
{ \
INSOValidateReceipt_num_type = 0; \
INSOValidateReceipt_num_length = 0; \
INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00140186(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr); \
if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_0014011B(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length); \
INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_00140007(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_015F0005(INSOValidateReceipt_value); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberLongType, &INSOValidateReceipt_number); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue: \
case INSOValidateReceipt_ReceiptAttributeTypeHash: \
{ \
INSOValidateReceipt_value1 = INSOValidateReceipt_ZQEPWRCIUUVO_00880009(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_0088016C((CFDataRef) INSOValidateReceipt_value1)); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase: \
{ \
INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_inapp_context.dictionary = NULL; \
INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context; \
goto INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_key; \
} \
default: \
break; \
} \
if (INSOValidateReceipt_value1) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_CFDictionaryAddValue_005801CF((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1); \
} \
if (INSOValidateReceipt_value2) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key2); \
INSOValidateReceipt_CFDictionaryAddValue_005801CF((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value2); \
} \
INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length; \
} \
INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_key: \
if (!INSOValidateReceipt_current_context->dictionary) { \
continue; \
} \
if (INSOValidateReceipt_current_context->parent) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_value1 = INSOValidateReceipt_BLXYZLCFZNUH_00D10039((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key); \
if (!INSOValidateReceipt_value1) { \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_0088006C(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_00D10033); \
INSOValidateReceipt_UOBIPUYWCZKU_0058009E((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_value1); \
} \
INSOValidateReceipt_TANWYFQSKGBR_00D10123((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent; \
INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end; \
} \
} \
if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary; \
INSOValidateReceipt_VDUBAEFEDTTP += 274; INSOValidateReceipt_VDUBAEFEDTTP /= 2;  \
INSOValidateReceipt_LULESSEUVORP -= 217; INSOValidateReceipt_LULESSEUVORP *= 3; INSOValidateReceipt_LULESSEUVORP += 1;  \
INSOValidateReceipt_GetReceiptInformation062_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01AC00A0(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00140062(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptSignature078(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        BIO *INSOValidateReceipt_bio_p7 = NULL;
        PKCS7 *INSOValidateReceipt_pkcs7 = NULL;
        STACK_OF(X509) *INSOValidateReceipt_certificates = NULL;
        X509 *INSOValidateReceipt_certificate = NULL;
        int INSOValidateReceipt_count, INSOValidateReceipt_index1;
        unsigned int INSOValidateReceipt_index2;
        ASN1_OBJECT *INSOValidateReceipt_oid = NULL;
        char *INSOValidateReceipt_str1;
        char *INSOValidateReceipt_str3;
        char *INSOValidateReceipt_str4;
        char *INSOValidateReceipt_str5;
        int INSOValidateReceipt_verify, INSOValidateReceipt_status;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01AC007D(INSOValidateReceipt_BIO_s_mem_00140074());
        INSOValidateReceipt_BIO_write_00140043(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VDUBAEFEDTTP_00D10144((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_LULESSEUVORP_00D1016C((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_015F0011(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_OpenSSL_add_all_digests_001400C7();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        INSOValidateReceipt_verify = 0;
        INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert;
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01AC0132((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00140035((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            char INSOValidateReceipt_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            // Retrieve the common name
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00140104(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483);
            if (INSOValidateReceipt_status <= 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
            }
            volatile unsigned int INSOValidateReceipt_digest_length = 8; INSOValidateReceipt_digest_length -= 3; INSOValidateReceipt_digest_length *= 4;
            const EVP_MD *INSOValidateReceipt_digester = EVP_sha1();
            unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE];
            unsigned int INSOValidateReceipt_len = 0;
            // Check that the X509_digest function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01AC00CF(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2212;
            if (INSOValidateReceipt_status == 2212 || INSOValidateReceipt_len > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
            }
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01AC00CF(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2212;
            if (INSOValidateReceipt_status != 2212 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
            }
            char INSOValidateReceipt_fingerprint[483];
            volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 4; INSOValidateReceipt_increment += 2;
            for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) {
                snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02x", INSOValidateReceipt_digest[INSOValidateReceipt_index2]);
            }
            char INSOValidateReceipt_str3_[483];
            INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[459]), INSOValidateReceipt_str3_, 56, 49);
            INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
            // Check the common name and the fingerprint
            char INSOValidateReceipt_str1_[483];
            INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[462]), INSOValidateReceipt_str1_, 218, 16);
            INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
            volatile size_t INSOValidateReceipt_num = 8; INSOValidateReceipt_num -= 4; INSOValidateReceipt_num *= 3; INSOValidateReceipt_num += 1;
            if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[278])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[278])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) {
                INSOValidateReceipt_verify = 2212;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 2212) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[300]), INSOValidateReceipt_str4_, 5, 34);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_001400F2(INSOValidateReceipt_str4, 0);
        INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_015F0050(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
        INSOValidateReceipt_ASN1_OBJECT_free_015F001B(INSOValidateReceipt_oid);
        if (INSOValidateReceipt_verify >= 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char INSOValidateReceipt_str5_[483];
        INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[345]), INSOValidateReceipt_str5_, 160, 34);
        INSOValidateReceipt_str5 = INSOValidateReceipt_str5_;
        INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_001400E2(INSOValidateReceipt_pkcs7, NULL, 0);
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01AC0132((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00140035((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_001400F2(INSOValidateReceipt_str5, 0);
            INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_015F0050(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
            INSOValidateReceipt_ASN1_OBJECT_free_015F001B(INSOValidateReceipt_oid);
            if (INSOValidateReceipt_verify == -1) {
                sk_X509_free (INSOValidateReceipt_certificates);
                INSOValidateReceipt_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail;
        }
        // Global variables computation
        // From 9 to 95
        INSOValidateReceipt_ZQEPWRCIUUVO -= 2; INSOValidateReceipt_ZQEPWRCIUUVO *= 12; INSOValidateReceipt_ZQEPWRCIUUVO += 11;
        // From 268 to 446
        INSOValidateReceipt_WKUDXLMMLHTM -= 120; INSOValidateReceipt_WKUDXLMMLHTM *= 3; INSOValidateReceipt_WKUDXLMMLHTM += 2;
        // From 364 to 57
        INSOValidateReceipt_LULESSEUVORP += 92; INSOValidateReceipt_LULESSEUVORP /= 8;
    INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_01AC011D(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_001401B7(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates);
    }
#else
#define INSOValidateReceipt_CheckReceiptSignature078(INSOValidateReceipt_ctx) { \
BIO *INSOValidateReceipt_bio_p7 = NULL; \
PKCS7 *INSOValidateReceipt_pkcs7 = NULL; \
STACK_OF(X509) *INSOValidateReceipt_certificates = NULL; \
X509 *INSOValidateReceipt_certificate = NULL; \
int INSOValidateReceipt_count, INSOValidateReceipt_index1; \
unsigned int INSOValidateReceipt_index2; \
ASN1_OBJECT *INSOValidateReceipt_oid = NULL; \
char *INSOValidateReceipt_str1; \
char *INSOValidateReceipt_str3; \
char *INSOValidateReceipt_str4; \
char *INSOValidateReceipt_str5; \
int INSOValidateReceipt_verify, INSOValidateReceipt_status; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01AC007D(INSOValidateReceipt_BIO_s_mem_00140074()); \
INSOValidateReceipt_BIO_write_00140043(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VDUBAEFEDTTP_00D10144((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_LULESSEUVORP_00D1016C((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_015F0011(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_OpenSSL_add_all_digests_001400C7(); \
INSOValidateReceipt_verify = 0; \
INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert; \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01AC0132((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00140035((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
char INSOValidateReceipt_common_name[483]; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00140104(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483); \
if (INSOValidateReceipt_status <= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
volatile unsigned int INSOValidateReceipt_digest_length = 8; INSOValidateReceipt_digest_length -= 3; INSOValidateReceipt_digest_length *= 4;  \
const EVP_MD *INSOValidateReceipt_digester = EVP_sha1(); \
unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE]; \
unsigned int INSOValidateReceipt_len = 0; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01AC00CF(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2212; \
if (INSOValidateReceipt_status == 2212 || INSOValidateReceipt_len > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01AC00CF(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2212; \
if (INSOValidateReceipt_status != 2212 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_fingerprint[483]; \
volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 4; INSOValidateReceipt_increment += 2;  \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) { \
snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02x", INSOValidateReceipt_digest[INSOValidateReceipt_index2]); \
} \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[459]), INSOValidateReceipt_str3_, 56, 49); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[462]), INSOValidateReceipt_str1_, 218, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
volatile size_t INSOValidateReceipt_num = 8; INSOValidateReceipt_num -= 4; INSOValidateReceipt_num *= 3; INSOValidateReceipt_num += 1;  \
if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[278])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[278])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) { \
INSOValidateReceipt_verify = 2212; \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 2212) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[300]), INSOValidateReceipt_str4_, 5, 34); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_001400F2(INSOValidateReceipt_str4, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_015F0050(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_015F001B(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify >= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str5_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[345]), INSOValidateReceipt_str5_, 160, 34); \
INSOValidateReceipt_str5 = INSOValidateReceipt_str5_; \
INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_001400E2(INSOValidateReceipt_pkcs7, NULL, 0); \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01AC0132((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00140035((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_001400F2(INSOValidateReceipt_str5, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_015F0050(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_015F001B(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify == -1) { \
sk_X509_free (INSOValidateReceipt_certificates); \
INSOValidateReceipt_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00A80032(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_ZQEPWRCIUUVO -= 2; INSOValidateReceipt_ZQEPWRCIUUVO *= 12; INSOValidateReceipt_ZQEPWRCIUUVO += 11;  \
INSOValidateReceipt_WKUDXLMMLHTM -= 120; INSOValidateReceipt_WKUDXLMMLHTM *= 3; INSOValidateReceipt_WKUDXLMMLHTM += 2;  \
INSOValidateReceipt_LULESSEUVORP += 92; INSOValidateReceipt_LULESSEUVORP /= 8;  \
INSOValidateReceipt_CheckReceiptSignature078_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_01AC011D(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_001401B7(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[91]), 151, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_WKUDXLMMLHTM_005801BE(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_LULESSEUVORP_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key);
        if (INSOValidateReceipt_ZQEPWRCIUUVO_0058005F(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01DB001D(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 324 to 182
        INSOValidateReceipt_VDUBAEFEDTTP += 222; INSOValidateReceipt_VDUBAEFEDTTP /= 3;
        // From 57 to 96
        INSOValidateReceipt_LULESSEUVORP -= 25; INSOValidateReceipt_LULESSEUVORP *= 3;
        // From 291 to 392
        INSOValidateReceipt_TANWYFQSKGBR -= 161; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 2;
        INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[91]), 151, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_WKUDXLMMLHTM_005801BE(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_LULESSEUVORP_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key); \
if (INSOValidateReceipt_ZQEPWRCIUUVO_0058005F(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01DB001D(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_VDUBAEFEDTTP += 222; INSOValidateReceipt_VDUBAEFEDTTP /= 3;  \
INSOValidateReceipt_LULESSEUVORP -= 25; INSOValidateReceipt_LULESSEUVORP *= 3;  \
INSOValidateReceipt_TANWYFQSKGBR -= 161; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 2;  \
INSOValidateReceipt_CFRelease_00580002(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[253]), 154, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_WKUDXLMMLHTM_005801BE(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_LULESSEUVORP_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key);
        if (INSOValidateReceipt_ZQEPWRCIUUVO_0058005F(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 324 to 182
        INSOValidateReceipt_VDUBAEFEDTTP += 222; INSOValidateReceipt_VDUBAEFEDTTP /= 3;
        // From 57 to 96
        INSOValidateReceipt_LULESSEUVORP -= 25; INSOValidateReceipt_LULESSEUVORP *= 3;
        // From 291 to 392
        INSOValidateReceipt_TANWYFQSKGBR -= 161; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 2;
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[253]), 154, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_WKUDXLMMLHTM_005801BE(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_LULESSEUVORP_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key); \
if (INSOValidateReceipt_ZQEPWRCIUUVO_0058005F(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_VDUBAEFEDTTP += 222; INSOValidateReceipt_VDUBAEFEDTTP /= 3;  \
INSOValidateReceipt_LULESSEUVORP -= 25; INSOValidateReceipt_LULESSEUVORP *= 3;  \
INSOValidateReceipt_TANWYFQSKGBR -= 161; INSOValidateReceipt_TANWYFQSKGBR *= 3; INSOValidateReceipt_TANWYFQSKGBR += 2;  \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[373]), 125, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_LULESSEUVORP_00580060(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_TANWYFQSKGBR_00580188((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key);
        if (INSOValidateReceipt_VDUBAEFEDTTP_00D100B6(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01DB001D(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 158 to 57
        INSOValidateReceipt_UOBIPUYWCZKU += 70; INSOValidateReceipt_UOBIPUYWCZKU /= 4;
        // From 57 to 66
        INSOValidateReceipt_BLXYZLCFZNUH -= 35; INSOValidateReceipt_BLXYZLCFZNUH *= 3;
        // From 95 to 474
        INSOValidateReceipt_ZQEPWRCIUUVO -= 16; INSOValidateReceipt_ZQEPWRCIUUVO *= 6;
        // From 182 to 325
        INSOValidateReceipt_VDUBAEFEDTTP -= 74; INSOValidateReceipt_VDUBAEFEDTTP *= 3; INSOValidateReceipt_VDUBAEFEDTTP += 1;
        // From 255 to 208
        INSOValidateReceipt_CRAGCYEBLEXO += 161; INSOValidateReceipt_CRAGCYEBLEXO /= 2;
        // From 446 to 271
        INSOValidateReceipt_WKUDXLMMLHTM += 367; INSOValidateReceipt_WKUDXLMMLHTM /= 3;
        // From 96 to 105
        INSOValidateReceipt_LULESSEUVORP -= 61; INSOValidateReceipt_LULESSEUVORP *= 3;
        // From 392 to 176
        INSOValidateReceipt_TANWYFQSKGBR += 312; INSOValidateReceipt_TANWYFQSKGBR /= 4;
        INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[373]), 125, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_LULESSEUVORP_00580060(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_TANWYFQSKGBR_00580188((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key); \
if (INSOValidateReceipt_VDUBAEFEDTTP_00D100B6(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01DB001D(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_UOBIPUYWCZKU += 70; INSOValidateReceipt_UOBIPUYWCZKU /= 4;  \
INSOValidateReceipt_BLXYZLCFZNUH -= 35; INSOValidateReceipt_BLXYZLCFZNUH *= 3;  \
INSOValidateReceipt_ZQEPWRCIUUVO -= 16; INSOValidateReceipt_ZQEPWRCIUUVO *= 6;  \
INSOValidateReceipt_VDUBAEFEDTTP -= 74; INSOValidateReceipt_VDUBAEFEDTTP *= 3; INSOValidateReceipt_VDUBAEFEDTTP += 1;  \
INSOValidateReceipt_CRAGCYEBLEXO += 161; INSOValidateReceipt_CRAGCYEBLEXO /= 2;  \
INSOValidateReceipt_WKUDXLMMLHTM += 367; INSOValidateReceipt_WKUDXLMMLHTM /= 3;  \
INSOValidateReceipt_LULESSEUVORP -= 61; INSOValidateReceipt_LULESSEUVORP *= 3;  \
INSOValidateReceipt_TANWYFQSKGBR += 312; INSOValidateReceipt_TANWYFQSKGBR /= 4;  \
INSOValidateReceipt_CFRelease_00D10002(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[177]), 87, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_LULESSEUVORP_00580060(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_TANWYFQSKGBR_00580188((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_key);
        if (INSOValidateReceipt_VDUBAEFEDTTP_00D100B6(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 158 to 57
        INSOValidateReceipt_UOBIPUYWCZKU += 70; INSOValidateReceipt_UOBIPUYWCZKU /= 4;
        // From 57 to 66
        INSOValidateReceipt_BLXYZLCFZNUH -= 35; INSOValidateReceipt_BLXYZLCFZNUH *= 3;
        // From 95 to 474
        INSOValidateReceipt_ZQEPWRCIUUVO -= 16; INSOValidateReceipt_ZQEPWRCIUUVO *= 6;
        // From 182 to 325
        INSOValidateReceipt_VDUBAEFEDTTP -= 74; INSOValidateReceipt_VDUBAEFEDTTP *= 3; INSOValidateReceipt_VDUBAEFEDTTP += 1;
        // From 255 to 208
        INSOValidateReceipt_CRAGCYEBLEXO += 161; INSOValidateReceipt_CRAGCYEBLEXO /= 2;
        // From 446 to 271
        INSOValidateReceipt_WKUDXLMMLHTM += 367; INSOValidateReceipt_WKUDXLMMLHTM /= 3;
        // From 96 to 105
        INSOValidateReceipt_LULESSEUVORP -= 61; INSOValidateReceipt_LULESSEUVORP *= 3;
        // From 392 to 176
        INSOValidateReceipt_TANWYFQSKGBR += 312; INSOValidateReceipt_TANWYFQSKGBR /= 4;
        INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[177]), 87, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_LULESSEUVORP_00580060(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_TANWYFQSKGBR_00580188((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_key); \
if (INSOValidateReceipt_VDUBAEFEDTTP_00D100B6(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_UOBIPUYWCZKU += 70; INSOValidateReceipt_UOBIPUYWCZKU /= 4;  \
INSOValidateReceipt_BLXYZLCFZNUH -= 35; INSOValidateReceipt_BLXYZLCFZNUH *= 3;  \
INSOValidateReceipt_ZQEPWRCIUUVO -= 16; INSOValidateReceipt_ZQEPWRCIUUVO *= 6;  \
INSOValidateReceipt_VDUBAEFEDTTP -= 74; INSOValidateReceipt_VDUBAEFEDTTP *= 3; INSOValidateReceipt_VDUBAEFEDTTP += 1;  \
INSOValidateReceipt_CRAGCYEBLEXO += 161; INSOValidateReceipt_CRAGCYEBLEXO /= 2;  \
INSOValidateReceipt_WKUDXLMMLHTM += 367; INSOValidateReceipt_WKUDXLMMLHTM /= 3;  \
INSOValidateReceipt_LULESSEUVORP -= 61; INSOValidateReceipt_LULESSEUVORP *= 3;  \
INSOValidateReceipt_TANWYFQSKGBR += 312; INSOValidateReceipt_TANWYFQSKGBR /= 4;  \
INSOValidateReceipt_CFRelease_005801A9(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptHash09B(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3;
        CFMutableDataRef INSOValidateReceipt_data4;
        unsigned char INSOValidateReceipt_digest[483];
        volatile int INSOValidateReceipt_counter = 12; INSOValidateReceipt_counter -= 6; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value;
        CFNumberRef INSOValidateReceipt_key;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash");
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue;
        INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData;
        INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash;
        INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key);
        INSOValidateReceipt_data4 = INSOValidateReceipt_VDUBAEFEDTTP_00880145(NULL, INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1) + INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2));
        INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1));
        INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2));
        CC_SHA1_CTX INSOValidateReceipt_hashctx1;
        INSOValidateReceipt_LULESSEUVORP_00A80069(&INSOValidateReceipt_hashctx1);
        INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1));
        INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2));
        INSOValidateReceipt_ZQEPWRCIUUVO_00A801DA(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1);
        SHA_CTX INSOValidateReceipt_hashctx2;
        INSOValidateReceipt_SHA1_Init_001400B9(&INSOValidateReceipt_hashctx2);
        INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1));
        INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2));
        INSOValidateReceipt_SHA1_Final_015F010D(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2);
        CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_CFDataCreate_00580009(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter);
        if (!INSOValidateReceipt_WKUDXLMMLHTM_00D1010F(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid");
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5);
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_0169001D(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data1);
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data2);
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data4);
            INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5);
            goto INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5);
        // Global variables computation
        // From 57 to 139
        INSOValidateReceipt_UOBIPUYWCZKU -= 23; INSOValidateReceipt_UOBIPUYWCZKU *= 4; INSOValidateReceipt_UOBIPUYWCZKU += 3;
        // Set to 379
        INSOValidateReceipt_ZQEPWRCIUUVO = 379;
        // Set to 28
        INSOValidateReceipt_VDUBAEFEDTTP = 28;
        // From 208 to 57
        INSOValidateReceipt_CRAGCYEBLEXO += 77; INSOValidateReceipt_CRAGCYEBLEXO /= 5;
        // From 176 to 96
        INSOValidateReceipt_TANWYFQSKGBR += 112; INSOValidateReceipt_TANWYFQSKGBR /= 3;
    INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail:
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data4);
    }
#else
#define INSOValidateReceipt_CheckReceiptHash09B(INSOValidateReceipt_ctx) { \
CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3; \
CFMutableDataRef INSOValidateReceipt_data4; \
unsigned char INSOValidateReceipt_digest[483]; \
volatile int INSOValidateReceipt_counter = 12; INSOValidateReceipt_counter -= 6; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;  \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value; \
CFNumberRef INSOValidateReceipt_key; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash"); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00880079(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_UOBIPUYWCZKU_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key); \
INSOValidateReceipt_data4 = INSOValidateReceipt_VDUBAEFEDTTP_00880145(NULL, INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1) + INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2)); \
INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1)); \
INSOValidateReceipt_CRAGCYEBLEXO_008800D0(INSOValidateReceipt_data4, INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2)); \
CC_SHA1_CTX INSOValidateReceipt_hashctx1; \
INSOValidateReceipt_LULESSEUVORP_00A80069(&INSOValidateReceipt_hashctx1); \
INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1)); \
INSOValidateReceipt_BLXYZLCFZNUH_01DB0042(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2)); \
INSOValidateReceipt_ZQEPWRCIUUVO_00A801DA(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1); \
SHA_CTX INSOValidateReceipt_hashctx2; \
INSOValidateReceipt_SHA1_Init_001400B9(&INSOValidateReceipt_hashctx2); \
INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data1)); \
INSOValidateReceipt_SHA1_Update_01AC0071(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_TANWYFQSKGBR_005800B0(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_0058016C(INSOValidateReceipt_data2)); \
INSOValidateReceipt_SHA1_Final_015F010D(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2); \
CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_CFDataCreate_00580009(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter); \
if (!INSOValidateReceipt_WKUDXLMMLHTM_00D1010F(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid"); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0169001D(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data1); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data2); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data4); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5); \
goto INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data5); \
INSOValidateReceipt_UOBIPUYWCZKU -= 23; INSOValidateReceipt_UOBIPUYWCZKU *= 4; INSOValidateReceipt_UOBIPUYWCZKU += 3;  \
INSOValidateReceipt_ZQEPWRCIUUVO = 379; \
INSOValidateReceipt_VDUBAEFEDTTP = 28; \
INSOValidateReceipt_CRAGCYEBLEXO += 77; INSOValidateReceipt_CRAGCYEBLEXO /= 5;  \
INSOValidateReceipt_TANWYFQSKGBR += 112; INSOValidateReceipt_TANWYFQSKGBR /= 3;  \
INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail: \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_VDUBAEFEDTTP_00D1001C(NULL, INSOValidateReceipt_ZQEPWRCIUUVO_0058017B());
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_TANWYFQSKGBR_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_CRAGCYEBLEXO_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
        if (INSOValidateReceipt_date2 && INSOValidateReceipt_UOBIPUYWCZKU_0058008B(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01DB0032(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1);
            INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1);
        }
        // Global variables computation
        // From 66 to 96
        INSOValidateReceipt_BLXYZLCFZNUH -= 34; INSOValidateReceipt_BLXYZLCFZNUH *= 3;
        // Set to 76
        INSOValidateReceipt_CRAGCYEBLEXO = 76;
        // From 271 to 57
        INSOValidateReceipt_WKUDXLMMLHTM += 71; INSOValidateReceipt_WKUDXLMMLHTM /= 6;
        // From 105 to 95
        INSOValidateReceipt_LULESSEUVORP += 85; INSOValidateReceipt_LULESSEUVORP /= 2;
        // From 96 to 404
        INSOValidateReceipt_TANWYFQSKGBR -= 29; INSOValidateReceipt_TANWYFQSKGBR *= 6; INSOValidateReceipt_TANWYFQSKGBR += 2;
        INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1);
    }
#else
#define INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_VDUBAEFEDTTP_00D1001C(NULL, INSOValidateReceipt_ZQEPWRCIUUVO_0058017B()); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_TANWYFQSKGBR_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_CRAGCYEBLEXO_00580039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
if (INSOValidateReceipt_date2 && INSOValidateReceipt_UOBIPUYWCZKU_0058008B(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01DB0032(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1); \
} \
INSOValidateReceipt_BLXYZLCFZNUH -= 34; INSOValidateReceipt_BLXYZLCFZNUH *= 3;  \
INSOValidateReceipt_CRAGCYEBLEXO = 76; \
INSOValidateReceipt_WKUDXLMMLHTM += 71; INSOValidateReceipt_WKUDXLMMLHTM /= 6;  \
INSOValidateReceipt_LULESSEUVORP += 85; INSOValidateReceipt_LULESSEUVORP /= 2;  \
INSOValidateReceipt_TANWYFQSKGBR -= 29; INSOValidateReceipt_TANWYFQSKGBR *= 6; INSOValidateReceipt_TANWYFQSKGBR += 2;  \
INSOValidateReceipt_CFRelease_00D101E1(INSOValidateReceipt_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2;
        CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases");
        INSOValidateReceipt_key1 = INSOValidateReceipt_BLXYZLCFZNUH_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        // Extract InApp Purchase
        CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers;
        CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_WKUDXLMMLHTM_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1);
        if (INSOValidateReceipt_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                Boolean INSOValidateReceipt_found = false;
                // Iterate over the purchases
                for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) {
                    CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_purchases, INSOValidateReceipt_index2);
                    INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer;
                    INSOValidateReceipt_key2 = INSOValidateReceipt_BLXYZLCFZNUH_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
                    CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_WKUDXLMMLHTM_00880039(INSOValidateReceipt_purchase, INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (INSOValidateReceipt_LULESSEUVORP_00D1005F(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) {
                        INSOValidateReceipt_found |= true;
                        (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!INSOValidateReceipt_found) {
                    (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the INSOValidateReceipt_idents and call the block back
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
            }
        }
        INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key1);
    }
#else
#define INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_ctx) { \
CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2; \
CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_BLXYZLCFZNUH_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers; \
CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_WKUDXLMMLHTM_00880039((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1); \
if (INSOValidateReceipt_purchases) { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
Boolean INSOValidateReceipt_found = false; \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) { \
CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_purchases, INSOValidateReceipt_index2); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer; \
INSOValidateReceipt_key2 = INSOValidateReceipt_BLXYZLCFZNUH_00D10060(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_WKUDXLMMLHTM_00880039(INSOValidateReceipt_purchase, INSOValidateReceipt_key2); \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key2); \
if (INSOValidateReceipt_LULESSEUVORP_00D1005F(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) { \
INSOValidateReceipt_found |= true; \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase)); \
} \
} \
if (!INSOValidateReceipt_found) { \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
} else { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_TANWYFQSKGBR_00880194(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_CRAGCYEBLEXO_0088004C(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
INSOValidateReceipt_CFRelease_008801E1(INSOValidateReceipt_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void INSOValidateReceipt_CleanUp0AB(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up");
        if (INSOValidateReceipt_ctx->receipt_data) {
            INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->receipt_data);
            INSOValidateReceipt_ctx->receipt_data = NULL;
        }
        if (INSOValidateReceipt_ctx->guid_data) {
            INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->guid_data);
            INSOValidateReceipt_ctx->guid_data = NULL;
        }
        if (INSOValidateReceipt_ctx->receipt_dict) {
            INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->receipt_dict);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
        }
        if (INSOValidateReceipt_ctx->ca_data) {
            INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->ca_data);
            INSOValidateReceipt_ctx->ca_data = NULL;
        }
    }
#else
#define INSOValidateReceipt_CleanUp0AB(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up"); \
if (INSOValidateReceipt_ctx->receipt_data) { \
INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
} \
if (INSOValidateReceipt_ctx->guid_data) { \
INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->guid_data); \
INSOValidateReceipt_ctx->guid_data = NULL; \
} \
if (INSOValidateReceipt_ctx->receipt_dict) { \
INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
} \
if (INSOValidateReceipt_ctx->ca_data) { \
INSOValidateReceipt_CFRelease_00D101A9(INSOValidateReceipt_ctx->ca_data); \
INSOValidateReceipt_ctx->ca_data = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckInAppPurchases(NSArray *_inapp_identifiers, INSOValidateReceipt_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point");
        // Create contexts
        INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block);
        if (!INSOValidateReceipt_setjmp_00A80140(INSOValidateReceipt_JumpBuf)) {
            // Call each step
            INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_LoadReceipt040((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_GetGUID04E((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckBundleVersion060((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_GetReceiptInformation062((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptSignature078((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptIdentifier07E((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptHash09B((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CleanUp0AB((&INSOValidateReceipt_ctx1));
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define INSOValidateReceipt_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point"); \
INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block); \
if (!INSOValidateReceipt_setjmp_00A80140(INSOValidateReceipt_JumpBuf)) { \
INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_LoadReceipt040((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_GetGUID04E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckBundleVersion060((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_GetReceiptInformation062((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptSignature078((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptIdentifier07E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptHash09B((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CleanUp0AB((&INSOValidateReceipt_ctx1)); \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

