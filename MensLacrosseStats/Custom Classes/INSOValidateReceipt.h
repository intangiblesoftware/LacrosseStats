//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.intangiblesoftware.menslacrossestats
// CFBundleVersion            : 6
// Prefix                     : INSOValidateReceipt
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __INSOValidateReceipt_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*INSOValidateReceipt_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^INSOValidateReceipt_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _INSOValidateReceipt_ReceiptAttributeType {
        
        // Bundle identifier
        INSOValidateReceipt_ReceiptAttributeTypeBundleId = 2,
        // Application version
        INSOValidateReceipt_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        INSOValidateReceipt_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        INSOValidateReceipt_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        INSOValidateReceipt_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        INSOValidateReceipt_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        INSOValidateReceipt_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        INSOValidateReceipt_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        INSOValidateReceipt_StoreNone = 141,
        // Bundle identifier
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2) + 1,
        // Application version
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleVersion << 2),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersionData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2) + 1,
        // Opaque value
        INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue << 2),
        // Hash value
        INSOValidateReceipt_StoreReceiptAttributeTypeHash = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeHash << 2),
        // In-app purchase receipt
        INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase << 2),
        // Original Application Version
        INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion << 2),
        // Receipt Expiration Date
        INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeExpirationDate << 2),
        // Quantity
        INSOValidateReceipt_StoreInAppAttributeTypeQuantity = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeQuantity << 2),
        // Product identifier
        INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeProductIdentifer << 2),
        // Transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer << 2),
        // Purchase date
        INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypePurchaseDate << 2),
        // Original transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer << 2),
        // Original purchase date
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate << 2),
        // Subscription Expiration Date
        INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate << 2),
        // Web Order Line Item ID
        INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId << 2),
        // Cancellation Date
        INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeCancellationDate << 2)
        
    } INSOValidateReceipt_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleId]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeQuantity]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _INSOValidateReceipt_CheckingContext {
        CFTypeRef inapp_identifiers;
        CFTypeRef receipt_data;
        CFTypeRef dummy0006;
        CFTypeRef inapp_block;
        CFTypeRef dummy0008;
        CFTypeRef guid_data;
        CFTypeRef dummy0004;
        CFTypeRef dummy0003;
        CFTypeRef main_bundle;
        CFTypeRef dummy0007;
        CFTypeRef dummy0005;
        CFTypeRef receipt_dict;
        CFTypeRef dummy0000;
        CFTypeRef ca_data;
        CFTypeRef dummy0009;
        CFTypeRef dummy0002;
        CFTypeRef dummy0001;
    } INSOValidateReceipt_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _INSOValidateReceipt_ParsingContext {
        const unsigned char * end;
        CFTypeRef dummy000D;
        CFTypeRef dummy0004;
        CFTypeRef dummy0009;
        CFTypeRef dummy0005;
        CFTypeRef dummy000A;
        CFTypeRef dictionary;
        CFTypeRef dummy0008;
        CFTypeRef dummy0007;
        CFTypeRef dummy0000;
        struct _INSOValidateReceipt_ParsingContext * parent;
        CFTypeRef dummy0002;
        CFTypeRef dummy0006;
        CFTypeRef dummy0001;
        CFTypeRef dummy000C;
        CFTypeRef dummy0003;
        const unsigned char * ptr;
        CFTypeRef dummy000B;
    } INSOValidateReceipt_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__INSOValidateReceipt_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__INSOValidateReceipt_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__INSOValidateReceipt_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__INSOValidateReceipt_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__INSOValidateReceipt_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__INSOValidateReceipt_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__INSOValidateReceipt_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__INSOValidateReceipt_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__INSOValidateReceipt_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__INSOValidateReceipt_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__INSOValidateReceipt_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__INSOValidateReceipt_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__INSOValidateReceipt_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__INSOValidateReceipt_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__INSOValidateReceipt_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__INSOValidateReceipt_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__INSOValidateReceipt_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__INSOValidateReceipt_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__INSOValidateReceipt_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__INSOValidateReceipt_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__INSOValidateReceipt_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__INSOValidateReceipt_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__INSOValidateReceipt_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__INSOValidateReceipt_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__INSOValidateReceipt_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__INSOValidateReceipt_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__INSOValidateReceipt_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__INSOValidateReceipt_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__INSOValidateReceipt_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__INSOValidateReceipt_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__INSOValidateReceipt_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__INSOValidateReceipt_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__INSOValidateReceipt_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__INSOValidateReceipt_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__INSOValidateReceipt_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__INSOValidateReceipt_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__INSOValidateReceipt_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__INSOValidateReceipt_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__INSOValidateReceipt_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__INSOValidateReceipt_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__INSOValidateReceipt_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__INSOValidateReceipt_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__INSOValidateReceipt_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__INSOValidateReceipt_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__INSOValidateReceipt_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__INSOValidateReceipt_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__INSOValidateReceipt_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__INSOValidateReceipt_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__INSOValidateReceipt_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__INSOValidateReceipt_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__INSOValidateReceipt_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__INSOValidateReceipt_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__INSOValidateReceipt_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__INSOValidateReceipt_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__INSOValidateReceipt_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__INSOValidateReceipt_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__INSOValidateReceipt_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__INSOValidateReceipt_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__INSOValidateReceipt_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__INSOValidateReceipt_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__INSOValidateReceipt_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__INSOValidateReceipt_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__INSOValidateReceipt_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__INSOValidateReceipt_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__INSOValidateReceipt_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__INSOValidateReceipt_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__INSOValidateReceipt_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__INSOValidateReceipt_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__INSOValidateReceipt_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__INSOValidateReceipt_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__INSOValidateReceipt_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__INSOValidateReceipt_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__INSOValidateReceipt_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__INSOValidateReceipt_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__INSOValidateReceipt_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__INSOValidateReceipt_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__INSOValidateReceipt_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__INSOValidateReceipt_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__INSOValidateReceipt_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__INSOValidateReceipt_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *INSOValidateReceipt_Strings[483] = {
        // "" / M(None) / S(0) / L(0)
        "\xe9\xa7\xc9\xf7\x9e\x8f\xb0\x9b\x14\xd5\x71\xeb\x22\x90\x78\x6b\x3f\x3b\xc7\xa2\x45\x8f\x79\x66\xcb\xb2\x07\x1c\x60\xa6\x00\x77",
        // "CFDataAppendBytes" / M(Rot) / S(219) / L(17)
        "\x1e\x21\x1f\x3c\x4f\x3c\x1c\x4b\x4b\x40\x49\x3f\x1d\x54\x4f\x40\x4e\xdb",
        // "" / M(None) / S(0) / L(0)
        "\x22\x86\x67\xd2\x18\x4c\x06\xde\xeb\xa7\x61\xd2\xfe\xf7\xc3\x7c\xdb\xba\xf9\x06\xa8\x29\x76\x92\x57\x58\x3a\xde\x25\x9c\x15\xf8",
        // "CC_SHA1_Update" / M(Xor4) / S(195) / L(14)
        "\x73\x73\x6f\x63\x78\x71\x01\x6f\x65\x40\x54\x51\x44\x55\x30\x4d",
        // "sel_registerName" / M(Xor3) / S(75) / L(16)
        "\x2f\x39\x30\x03\x2e\x39\x3b\x35\x2f\x28\x39\x2e\x12\x3d\x31\x39\x5c",
        // "dlopen" / M(Xor4) / S(3) / L(6)
        "\x54\x5c\x5f\x40\x55\x5e\x30\x9e\x36\x11\x47\x34\x9a\xf6\xb3\xe9",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(160) / L(23)
        "\x53\x4b\x52\x65\x63\x65\x69\x70\x74\x52\x65\x66\x72\x65\x73\x68\x52\x65\x71\x75\x65\x73\x74\x00\x40\x67\xcb\xad\xc9\x18\x4c\x34",
        // "SHA1_Final" / M(Xor2) / S(53) / L(10)
        "\x76\x6d\x64\x14\x7a\x63\x4c\x4b\x44\x49\x25\xd9\xfa\xc3\xaa\xbb",
        // "CFArrayCreateMutable" / M(Xor2) / S(34) / L(20)
        "\x74\x71\x76\x45\x45\x56\x4e\x74\x45\x52\x56\x43\x52\x7a\x42\x43\x56\x55\x5b\x52\x37",
        // "CFDataGetLength" / M(Xor1) / S(112) / L(15)
        "\x33\x36\x34\x11\x04\x11\x37\x15\x04\x3c\x15\x1e\x17\x04\x18\x70",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(201) / L(36)
        "\xaf\xaa\xae\x99\x82\x88\x80\x89\xab\x89\x98\xba\x8d\x80\x99\x89\xaa\x83\x9e\xa5\x82\x8a\x83\xa8\x85\x8f\x98\x85\x83\x82\x8d\x9e\x95\xa7\x89\x95\xec",
        // "sk_value" / M(Xor4) / S(142) / L(8)
        "\x93\x8b\xbf\x96\x81\x8c\x95\x85\xe0\x47\x0c\x9f\x96\x43\x9c\x98",
        // "SHA1_Update" / M(Xor1) / S(125) / L(11)
        "\x2e\x35\x3c\x4c\x22\x28\x0d\x19\x1c\x09\x18\x7d\x39\x5f\x57\x55",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(28) / L(40)
        "\x2a\x2d\x2d\x59\x29\x5e\x2a\x2a\x2e\x5f\x29\x25\x2f\x5d\x2c\x24\x5a\x5a\x29\x24\x58\x2d\x28\x5d\x59\x2e\x2e\x28\x29\x2e\x58\x2d\x25\x24\x58\x5a\x2a\x5f\x2a\x2c\x1c\xa9\xae\xf5\xf4\xf1\xcb\xc5\xb0",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(242) / L(35)
        "\x55\x50\x52\x77\x62\x73\x50\x79\x64\x7b\x77\x62\x62\x73\x64\x55\x64\x73\x77\x62\x73\x52\x77\x62\x73\x50\x64\x79\x7b\x45\x62\x64\x7f\x78\x71\x16",
        // "X509_free" / M(Xor3) / S(153) / L(9)
        "\xf1\x9c\x99\x90\xf6\xcf\xdb\xcc\xcc\xa9\x50\xb3\xec\x31\x2b\x7e",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(147) / L(25)
        "\xb7\xa8\xb4\xa8\xbe\xb2\xb6\xa8\xb7\xb7\xb5\xb0\xb5\xb3\xa8\xb7\xb6\xb6\xa8\xb0\xa8\xb7\xb7\xa8\xb7\x86\xe8\x80\x1e\xfd\xaa\xef\xc8\x95",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(74) / L(22)
        "\xcd\xe5\xe0\xe4\xd3\xc8\xc2\xca\xc3\xef\xc2\xc3\xc8\xd2\xcf\xc0\xcf\xc3\xd4\xed\xc3\xdf\xa6",
        // "" / M(None) / S(0) / L(0)
        "\xb8\xbd\xd6\x1c\x36\x19\x11\x38\x3e\x39\x16\xa9\xee\xc1\x2a\x94\x0d\x42\xbe\xe8\x27\xbb\x34\x80\x7e\x2d\x60\xc0\x94\xc0\x8e\x52",
        // "sk_num" / M(Xor1) / S(157) / L(6)
        "\xee\xf6\xc2\xf3\xe8\xf0\x9d\x26\xa6\x11\xc2\x1d\xd7\xcd\x8f\xdb",
        // "CFDataCreateMutable" / M(Xor2) / S(154) / L(19)
        "\xcd\xc8\xca\xef\xfa\xef\xcd\xfc\xeb\xef\xfa\xeb\xc3\xfb\xfa\xef\xec\xe2\xeb\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x0f\x16\x24\xf3\x24\x3e\x44\xd7\x18\x1b\x8b\x35\x26\x4b\x78\x3f\x86\xbd\x03\xa7\x40\x4d\x8f\xfe\x6e\x0f\xa9\x79\xe5\xe5\x70\x4d",
        // "" / M(None) / S(0) / L(0)
        "\xaf\x22\x27\x67\xbf\x18\x31\x8b\x69\x14\x9c\xf7\x5f\xe7\x87\xa0\x32\xc0\xea\x60\xdb\x6f\x72\x9e\x38\xef\xcb\xc2\xc1\x4a\x8d\xaa",
        // "ASN1_INTEGER_get" / M(Xor1) / S(27) / L(16)
        "\x5a\x48\x55\x2a\x44\x52\x55\x4f\x5e\x5c\x5e\x49\x44\x7c\x7e\x6f\x1b",
        // "SHA1" / M(Xor2) / S(159) / L(4)
        "\xdc\xc7\xce\xbe\x8f\xe5\x70\x4d\xaf\x22\x27\x67\xbf\x18\x31\x8b",
        // "strncmp" / M(Xor4) / S(191) / L(7)
        "\x83\x84\x82\x9e\x93\x9d\x80\xf0\x33\x77\xf6\x82\xd6\x6f\xe9\xdb",
        // "CFDataGetLength" / M(Xor3) / S(12) / L(15)
        "\x5f\x5a\x58\x7d\x68\x7d\x5b\x79\x68\x50\x79\x72\x7b\x68\x74\x1c",
        // "d2i_X509_bio" / M(Xor1) / S(210) / L(12)
        "\xb6\xe0\xbb\x8d\x8a\xe7\xe2\xeb\x8d\xb0\xbb\xbd\xd2\x3c\x2f\xfc",
        // "" / M(None) / S(0) / L(0)
        "\xbb\x61\xae\xc0\x93\x6a\xbf\x63\x2a\xb1\x25\x0f\x97\xda\xc7\x7f\x1a\x5f\x21\x36\x39\x5f\x57\x55\x5d\xe8\x43\x9d\xf0\x2d\xad\xcd",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(168) / L(25)
        "\x89\x8c\x8e\xa3\xa9\xbe\xa3\xa5\xa4\xab\xb8\xb3\x89\xb8\xaf\xab\xbe\xaf\x87\xbf\xbe\xab\xa8\xa6\xaf\xca\xd8\x60\x00\x8e\x6c\x2b\x4e\xf8",
        // "CC_SHA1" / M(Rot) / S(44) / L(7)
        "\x6f\x6f\x8b\x7f\x74\x6d\x5d\x2c\xd4\x84\xef\x0c\x4c\xcc\x97\xaa",
        // "" / M(None) / S(0) / L(0)
        "\x17\x1c\x95\x72\x4d\xc8\x92\xc2\xf5\x7f\x0a\x52\x05\x5e\xc8\x75\x82\xef\x9f\x00\xf7\xb7\x46\x0d\xb4\x8e\x5f\x6e\xdd\xc3\x1b\x12",
        // "" / M(None) / S(0) / L(0)
        "\xf9\x47\x0c\x9f\x96\x43\x9c\x98\x94\x3b\x23\x40\xce\x7c\xbf\x0b\x27\xda\xc2\x5f\x6d\x43\x03\x71\x6b\xb5\x46\xd6\x18\x11\x4d\x2e",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x02\x59\xd5\xeb\xd4\xb6\x35\x49\x46\x78\xf8\x46\xfc\x10\x2a\x32\xbc\x4e\x1e\x25\x5f\x85\x03\x86\xc9\x9c\xd1\x83\xfe\xb3\xbf",
        // "CFDateFormatterSetProperty" / M(Xor1) / S(127) / L(26)
        "\x3c\x39\x3b\x1e\x0b\x1a\x39\x10\x0d\x12\x1e\x0b\x0b\x1a\x0d\x2c\x1a\x0b\x2f\x0d\x10\x0f\x1a\x0d\x0b\x06\x7f\x4e\x72\x45\x5a\xaa\xe4\x2e\x60",
        // "" / M(None) / S(0) / L(0)
        "\x86\xbb\x36\xd5\x4b\x9e\x22\xda\x26\xd4\xa3\x04\x48\xea\x01\xdb\x04\x49\xd4\x44\x19\x35\x6c\x4a\x33\x7e\x7a\xa9\x46\xde\x11\xa4",
        // "" / M(None) / S(0) / L(0)
        "\xc6\xb2\x56\x54\x24\x11\xb0\x6d\x18\x5a\xf3\x60\xd8\xf4\x91\x3f\xf9\x1a\xf7\xfa\x8e\xa9\xd6\x5e\xfa\xbd\x56\x78\x00\xfc\x0f\xad",
        // "" / M(None) / S(0) / L(0)
        "\x18\x63\xb2\x5c\xe6\xb5\x08\x23\xee\x20\x82\x00\x6f\x5c\xce\x1e\x83\x9d\x14\x7c\xc9\xe6\x63\x22\xa9\x52\x1b\x57\x2c\x6c\x5a\xd2",
        // "X509_digest" / M(Xor1) / S(217) / L(11)
        "\x81\xec\xe9\xe0\x86\xbd\xb0\xbe\xbc\xaa\xad\xd9\x17\x39\xb8\x17",
        // "mainBundle" / M(Rot) / S(207) / L(10)
        "\x3c\x30\x38\x3d\x11\x44\x3d\x33\x3b\x34\xcf\x25\xd7\x39\xf3\xdb",
        // "BIO_write" / M(Rot) / S(174) / L(9)
        "\xf0\xf7\xfd\x0d\x25\x20\x17\x22\x13\xae\x06\xff\xa4\x58\x56\x5a",
        // "ASN1_INTEGER_free" / M(Xor2) / S(184) / L(17)
        "\xeb\xf9\xe4\x9b\xf5\xe3\xe4\xfe\xef\xed\xef\xf8\xf5\xcc\xd8\xcf\xcf\xaa",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x52\xc1\x23\x95\x95\xaf\x0f\x16\x50\x68\xde\xea\x86\x4c\xbc\xe0\x2c\x60\xdb\x48\xe7\x27\x50\x13\xc0\x35\xe3\x18\x37\x29\x02",
        // "%02x" / M(Xor2) / S(23) / L(4)
        "\x22\x37\x35\x7f\x07\x9a\x7d\xb1\xb1\x64\x45\x41\x2d\xe5\xc5\x12",
        // "kCFDateFormatterTimeZone" / M(Xor4) / S(113) / L(24)
        "\xfa\xd2\xd7\xd5\xf0\xe5\xf4\xd7\xfe\xe3\xfc\xf0\xe5\xe5\xf4\xe3\xc5\xf8\xfc\xf4\xcb\xfe\xff\xf4\x91\x5e\x6c\xce\xef\x95\x3a\x17\x00",
        // "CFStringCreateWithBytes" / M(Xor1) / S(242) / L(23)
        "\xb1\xb4\xa1\x86\x80\x9b\x9c\x95\xb1\x80\x97\x93\x86\x97\xa5\x9b\x86\x9a\xb0\x8b\x86\x97\x81\xf2\xac\xb0\x12\xee\x27\x87\xf6\xa5",
        // "CFDataGetBytePtr" / M(Xor1) / S(208) / L(16)
        "\x93\x96\x94\xb1\xa4\xb1\x97\xb5\xa4\x92\xa9\xa4\xb5\x80\xa4\xa2\xd0",
        // "" / M(None) / S(0) / L(0)
        "\xdf\xfe\xd0\xce\xc9\x5f\x5c\xfb\x12\xa3\x23\xaa\xff\xb8\xd9\x64\x22\x2a\xd2\xe6\x36\xee\xf4\x1c\x74\x4d\x25\x6c\x21\x0b\x49\x5f",
        // "ASN1_OBJECT_free" / M(Rot) / S(46) / L(16)
        "\x6f\x81\x7c\x5f\x8d\x7d\x70\x78\x73\x71\x82\x8d\x94\xa0\x93\x93\x2e",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(79) / L(59)
        "\x3d\x3a\x31\x3a\x6e\x31\x3e\x69\x31\x3d\x3d\x31\x39\x68\x31\x3e\x32\x31\x38\x6a\x31\x3b\x33\x31\x6d\x6d\x31\x3e\x33\x31\x6f\x3a\x31\x3f\x6a\x31\x6e\x39\x31\x39\x3f\x31\x3e\x39\x31\x6f\x3a\x31\x32\x33\x31\x6f\x6d\x31\x3d\x68\x31\x3d\x3b\x0b\x74\x7e\xb2\x19\xe0\xf2\x34\xbc",
        // "" / M(None) / S(0) / L(0)
        "\x38\x6a\xff\xc7\x85\xf9\x24\x1f\xe2\xfc\x73\x89\xad\x7a\x78\x77\x9d\xbc\xcc\x71\x0f\x8c\xed\x80\x2c\xff\x6d\x95\x4d\x96\x19\x7a",
        // "CFDataAppendBytes" / M(Xor3) / S(176) / L(17)
        "\x81\x84\x86\xa3\xb6\xa3\x83\xb2\xb2\xa7\xac\xa6\x80\xbb\xb6\xa7\xb1\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x34\x8a\xa8\x15\x30\xd1\x7a\x47\x3d\xb6\xbd\x99\x12\x4c\xc0\xdf\xd7\x60\x10\x0b\xf0\xb4\x18\x76\xe1\x5c\x3d\x8c\xea\x4f\x7d\x8f",
        // "CFDictionaryGetValue" / M(Xor1) / S(159) / L(20)
        "\xdc\xd9\xdb\xf6\xfc\xeb\xf6\xf0\xf1\xfe\xed\xe6\xd8\xfa\xeb\xc9\xfe\xf3\xea\xfa\x9f",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(255) / L(22)
        "\x55\x50\x57\x64\x64\x77\x6f\x51\x73\x62\x40\x77\x7a\x63\x73\x57\x62\x5f\x78\x72\x73\x6e\x16",
        // "start" / M(Xor1) / S(83) / L(5)
        "\x20\x27\x32\x21\x27\x53\x85\xd4\x2e\xf2\x0d\xe6\xb0\xa5\x10\x37",
        // "SHA1_Update" / M(Xor2) / S(238) / L(11)
        "\xad\xb6\xbf\xcf\xa1\xab\x8e\x9a\x9f\x8a\x9b\xfe\x13\xf7\x82\x0f",
        // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(242) / L(24)
        "\x71\x74\x73\x50\x41\x5d\x5e\x47\x46\x57\x66\x5b\x5f\x57\x75\x57\x46\x71\x47\x40\x40\x57\x5c\x46\x32\xe9\xd3\x75\xfd\xe1\x60\xe0\x2e",
        // "ASN1_INTEGER_free" / M(Xor1) / S(161) / L(17)
        "\xe0\xf2\xef\x90\xfe\xe8\xef\xf5\xe4\xe6\xe4\xf3\xfe\xc7\xd3\xc4\xc4\xa1",
        // "" / M(None) / S(0) / L(0)
        "\xe8\x66\xef\x49\x9f\x7f\x17\xab\x18\x2a\x9b\x93\xe0\x76\x26\xd7\x81\x6e\x2d\xc8\x22\x92\xcc\xb4\x81\x26\x79\x21\x53\x1d\x08\x75",
        // "CFBundleUnloadExecutable" / M(Rot) / S(165) / L(24)
        "\xe8\xeb\xe7\x1a\x13\x09\x11\x0a\xfa\x13\x11\x14\x06\x09\xea\x1d\x0a\x08\x1a\x19\x06\x07\x11\x0a\xa5\xc7\xb3\x25\x06\x2c\xde\x1a\xd9",
        // "X509_STORE_new" / M(Xor1) / S(94) / L(14)
        "\x06\x6b\x6e\x67\x01\x0d\x0a\x11\x0c\x1b\x01\x30\x3b\x29\x5e\xdb",
        // "OpenSSL_add_all_digests" / M(Xor2) / S(221) / L(23)
        "\xb2\x8d\x98\x93\xae\xae\xb1\xa2\x9c\x99\x99\xa2\x9c\x91\x91\xa2\x99\x94\x9a\x98\x8e\x89\x8e\xfd\xcb\xb2\x07\x1c\x60\xa6\x00\x77",
        // "CFDataGetBytePtr" / M(Xor4) / S(181) / L(16)
        "\x46\x43\x41\x64\x71\x64\x42\x60\x71\x47\x7c\x71\x60\x55\x71\x77\x05",
        // "EVP_DigestFinal" / M(Xor1) / S(81) / L(15)
        "\x14\x07\x01\x0e\x15\x38\x36\x34\x22\x25\x17\x38\x3f\x30\x3d\x51",
        // "sk_free" / M(Rot) / S(197) / L(7)
        "\x38\x30\x24\x2b\x37\x2a\x2a\xc5\x17\x1c\x95\x72\x4d\xc8\x92\xc2",
        // "CFDateCompare" / M(Xor4) / S(204) / L(13)
        "\x83\x86\x84\xa1\xb4\xa5\x83\xaf\xad\xb0\xa1\xb2\xa5\xc0\x54\x69",
        // "CC_SHA1_Final" / M(Xor4) / S(44) / L(13)
        "\x83\x83\x9f\x93\x88\x81\xf1\x9f\x86\xa9\xae\xa1\xac\xc0\xc7\x4d",
        // "SHA1_Final" / M(Xor3) / S(51) / L(10)
        "\x10\x0b\x02\x72\x1c\x05\x2a\x2d\x22\x2f\x43\x60\xdb\x6f\x72\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x04\xe0\x0e\xb2\xca\x8f\x44\xc0\x3e\xb7\xd7\x5e\xcd\x38\xcb\xd2\xec\xa3\xd9\xdb\xf2\x0d\x32\xb1\xe8\xc4\x61\xf8\xb6\x65\x52\xb5",
        // "" / M(None) / S(0) / L(0)
        "\x43\x89\xe1\x57\x61\x6e\xf6\x8a\x67\x44\x9f\xba\xb0\x2d\x89\x7d\x2b\xff\xbf\x21\xbf\x5c\xb5\xf2\xc9\xe4\xf5\xa3\x04\xbf\xdb\xa1",
        // "objc_lookUpClass" / M(Xor1) / S(90) / L(16)
        "\x35\x38\x30\x39\x05\x36\x35\x35\x31\x0f\x2a\x19\x36\x3b\x29\x29\x5a",
        // "EVP_get_digestbyname" / M(Xor3) / S(187) / L(20)
        "\x95\x86\x80\x8f\xb7\xb5\xa4\x8f\xb4\xb9\xb7\xb5\xa3\xa4\xb2\xa9\xbe\xb1\xbd\xb5\xd0",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(49) / L(32)
        "\x28\x28\x28\x28\x76\x7c\x76\x1c\x1c\x76\x7c\x76\x35\x35\x76\x05\x76\x19\x19\x76\x6b\x76\x3c\x3c\x76\x6b\x76\x22\x22\x76\x0b\x76\x51",
        // "ASN1_get_object" / M(Rot) / S(65) / L(15)
        "\x82\x94\x8f\x72\xa0\xa8\xa6\xb5\xa0\xb0\xa3\xab\xa6\xa4\xb5\x41",
        // "mainBundle" / M(Xor2) / S(49) / L(10)
        "\x4c\x40\x48\x4f\x63\x54\x4f\x45\x4d\x44\x21\xc7\x9d\xf7\x98\xd2",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(241) / L(66)
        "\x1b\x67\x4d\x47\x40\x51\x59\x1b\x78\x5d\x56\x46\x55\x46\x4d\x1b\x72\x46\x55\x59\x51\x43\x5b\x46\x5f\x47\x1b\x77\x5b\x46\x51\x72\x5b\x41\x5a\x50\x55\x40\x5d\x5b\x5a\x1a\x52\x46\x55\x59\x51\x43\x5b\x46\x5f\x1b\x77\x5b\x46\x51\x72\x5b\x41\x5a\x50\x55\x40\x5d\x5b\x5a\x34",
        // "d2i_X509_bio" / M(Xor1) / S(30) / L(12)
        "\x7a\x2c\x77\x41\x46\x2b\x2e\x27\x41\x7c\x77\x71\x1e\xd8\x50\x49",
        // "dlopen" / M(Xor2) / S(198) / L(6)
        "\xb2\xba\xb9\xa6\xb3\xb8\xd6\xab\x44\xac\xae\xae\xed\x18\x03\x19",
        // "sk_num" / M(Rot) / S(12) / L(6)
        "\x7f\x77\x6b\x7a\x81\x79\x0c\x75\x82\xef\x9f\x00\xf7\xb7\x46\x0d",
        // "ASN1_INTEGER_get" / M(Xor1) / S(211) / L(16)
        "\x92\x80\x9d\xe2\x8c\x9a\x9d\x87\x96\x94\x96\x81\x8c\xb4\xb6\xa7\xd3",
        // "BIO_free" / M(Xor3) / S(165) / L(8)
        "\xf7\xfc\xfa\xea\xd3\xc7\xd0\xd0\xb5\x86\xf1\x15\xb5\x05\xd0\x91",
        // "NSBundle" / M(Xor4) / S(252) / L(8)
        "\x8e\x93\x82\xb5\xae\xa4\xac\xa5\xc0\x1d\x06\x47\x26\xd6\x5e\x58",
        // "" / M(None) / S(0) / L(0)
        "\x70\xd7\xac\x19\xd8\xb5\xfd\x86\xd3\x94\x41\xd9\x71\xe6\x9f\x5e\x3f\x3c\xb8\x35\xb7\xe0\xa5\xd4\x9f\xcc\x16\x14\x4a\xa6\xf2\xef",
        // "setDelegate:" / M(Xor3) / S(132) / L(12)
        "\xe7\xf1\xe0\xd0\xf1\xf8\xf1\xf3\xf5\xe0\xf1\xae\x94\x7a\x57\x97",
        // "X509_STORE_add_cert" / M(Xor3) / S(120) / L(19)
        "\xd4\xb9\xbc\xb5\xd3\xdf\xd8\xc3\xde\xc9\xd3\xed\xe8\xe8\xd3\xef\xe9\xfe\xf8\x8c",
        // "strlen" / M(Xor1) / S(123) / L(6)
        "\x08\x0f\x09\x17\x1e\x15\x7b\x56\xeb\x0c\xf7\x61\x5b\x17\x33\x1d",
        // "CFDictionarySetValue" / M(Xor3) / S(213) / L(20)
        "\xa9\xac\xae\x83\x89\x9e\x83\x85\x84\x8b\x98\x93\xb9\x8f\x9e\xbc\x8b\x86\x9f\x8f\xea",
        // "CC_SHA1_Final" / M(Xor2) / S(218) / L(13)
        "\x89\x89\x95\x99\x82\x8b\xfb\x95\x8c\xa3\xa4\xab\xa6\xca\x5b\xd0",
        // "" / M(None) / S(0) / L(0)
        "\xb6\xf9\x5d\xd4\x1a\x5d\x0a\xe8\x74\x7e\xb2\x19\xe0\xf2\x34\xbc\x40\x88\x53\xc7\x99\x87\xca\xe8\xc4\x5c\xc0\x09\xb9\x78\x94\xbb",
        // "CFArrayAppendValue" / M(Xor3) / S(127) / L(18)
        "\xd1\xd4\xd3\xe0\xe0\xf3\xeb\xd3\xe2\xe2\xf7\xfc\xf6\xc4\xf3\xfe\xe7\xf7\x92",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(237) / L(14)
        "\x3f\x41\x39\x31\x4c\x3a\x2e\x36\x3b\x4c\x3c\x3b\x39\x46\xed\x2c",
        // "dlsym" / M(Xor2) / S(77) / L(5)
        "\x39\x31\x2e\x24\x30\x5d\xd6\xa6\xa7\x44\x56\xea\xd0\x14\x8e\x1c",
        // "CFReadStreamOpen" / M(Xor1) / S(116) / L(16)
        "\x37\x32\x26\x11\x15\x10\x27\x00\x06\x11\x15\x19\x3b\x04\x11\x1a\x74",
        // "" / M(None) / S(0) / L(0)
        "\xe8\xb8\xe4\x66\x2d\xc7\x1e\x29\x15\xa0\x50\x6a\x04\xca\xe9\x0d\xb1\x71\x5f\x7e\x4d\x28\x03\x9e\x9d\x4e\x1d\x55\xbb\x4f\x8c\xa5",
        // "appStoreReceiptURL" / M(Xor1) / S(20) / L(18)
        "\x75\x64\x64\x47\x60\x7b\x66\x71\x46\x71\x77\x71\x7d\x64\x60\x41\x46\x58\x14",
        // "" / M(None) / S(0) / L(0)
        "\x5a\xf1\xc3\xe4\x4b\x51\xf0\x9e\xda\x99\x65\x6e\x15\x75\x52\xcb\x7a\x72\x56\xc9\x20\x6b\xab\x45\x95\x3d\x5d\x81\x10\x6f\x2b\xce",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(238) / L(59)
        "\xd8\xdf\xd4\xdf\xab\xd4\xdb\xac\xd4\xd8\xd8\xd4\xdc\xad\xd4\xdb\xd7\xd4\xdd\xaf\xd4\xde\xd6\xd4\xa8\xa8\xd4\xdb\xd6\xd4\xaa\xdf\xd4\xda\xaf\xd4\xab\xdc\xd4\xdc\xda\xd4\xdb\xdc\xd4\xaa\xdf\xd4\xd7\xd6\xd4\xaa\xa8\xd4\xd8\xad\xd4\xd8\xde\xee\x85\x66\x27\xed\x93\x48\xe0\xa2",
        // "sk_value" / M(Xor1) / S(243) / L(8)
        "\x80\x98\xac\x85\x92\x9f\x86\x96\xf3\xcf\x19\xaf\x18\x20\x31\xcc",
        // "X509_STORE_add_cert" / M(Xor3) / S(158) / L(19)
        "\xea\x87\x82\x8b\xed\xe1\xe6\xfd\xe0\xf7\xed\xd3\xd6\xd6\xed\xd1\xd7\xc0\xc6\xb2",
        // "CFBundleGetMainBundle" / M(Xor1) / S(186) / L(21)
        "\xf9\xfc\xf8\xcf\xd4\xde\xd6\xdf\xfd\xdf\xce\xf7\xdb\xd3\xd4\xf8\xcf\xd4\xde\xd6\xdf\xba",
        // "BIO_s_mem" / M(Xor1) / S(119) / L(9)
        "\x35\x3e\x38\x28\x04\x28\x1a\x12\x1a\x77\x67\x48\x57\x4a\x96\x33",
        // "setjmp" / M(Xor1) / S(154) / L(6)
        "\xe9\xff\xee\xf0\xf7\xea\x9a\xce\xc3\x79\x9d\x28\xd8\x4b\x16\xa8",
        // "" / M(None) / S(0) / L(0)
        "\xe2\x4e\x0d\xf0\x44\x6c\xae\x91\x09\x82\x8b\x28\xfb\xb9\x58\x97\x42\x4b\xa8\x3a\xc2\x6c\xef\xa7\x40\xe5\x28\x9e\x33\x22\x23\x3c",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(213) / L(35)
        "\x96\x93\x91\xb4\xa1\xb0\x93\xba\xa7\xb8\xb4\xa1\xa1\xb0\xa7\x96\xa7\xb0\xb4\xa1\xb0\x91\xb4\xa1\xb0\x93\xa7\xba\xb8\x86\xa1\xa7\xbc\xbb\xb2\xd5",
        // "CFReadStreamCreateWithFile" / M(Rot) / S(2) / L(26)
        "\x45\x48\x54\x67\x63\x66\x55\x76\x74\x67\x63\x6f\x45\x74\x67\x63\x76\x67\x59\x6b\x76\x6a\x48\x6b\x6e\x67\x02\x93\xff\xa5\xd8\x11\xa5\x7d\xed",
        // "CFDateCreate" / M(Xor2) / S(249) / L(12)
        "\xaa\xaf\xad\x88\x9d\x8c\xaa\x9b\x8c\x88\x9d\x8c\xe9\x33\xd5\xc9",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(46) / L(22)
        "\x06\x03\x04\x37\x37\x24\x3c\x02\x20\x31\x13\x24\x29\x30\x20\x04\x31\x0c\x2b\x21\x20\x3d\x45",
        // "CFBundleGetIdentifier" / M(Xor2) / S(198) / L(21)
        "\x93\x96\x92\xa5\xbe\xb4\xbc\xb5\x97\xb5\xa4\x99\xb4\xb5\xbe\xa4\xb9\xb6\xb9\xb5\xa2\xd0",
        // "CFEqual" / M(Xor4) / S(124) / L(7)
        "\x83\x86\x85\xb1\xb5\xa1\xac\xc0\xa9\x15\x99\x37\x73\x85\x2e\x9a",
        // "%02X:" / M(Xor1) / S(233) / L(5)
        "\xcc\xd9\xdb\xb1\xd3\xe9\xf7\xd5\xbe\xcc\x82\x31\x2f\xb6\x25\x99",
        // "6" / M(Xor3) / S(33) / L(1)
        "\x07\x31\x33\xe6\xcc\xd7\x99\xa2\x15\xba\x3f\x7c\x87\xeb\x04\xa5",
        // "Apple Root CA" / M(Rot) / S(159) / L(13)
        "\xe0\x0f\x0f\x0b\x04\xbf\xf1\x0e\x0e\x13\xbf\xe2\xe0\x9f\x14\x2e",
        // "CFRelease" / M(Rot) / S(18) / L(9)
        "\x55\x58\x64\x77\x7e\x77\x73\x85\x77\x12\x68\xae\x70\x4e\x2c\x49",
        // "" / M(None) / S(0) / L(0)
        "\xa3\xc6\x3c\xef\xde\xe2\x95\x8a\x2b\x36\x22\xfd\xa6\x32\xd3\xf0\x94\x15\x8b\xea\x7e\xe8\x67\x9d\x74\x6f\xaf\x24\x1a\x8d\x46\xc4",
        // "UIDevice" / M(Xor1) / S(71) / L(8)
        "\x12\x0e\x03\x22\x31\x2e\x24\x22\x47\x16\xcc\x16\x18\x38\x49\x17",
        // "" / M(None) / S(0) / L(0)
        "\x97\x86\x76\x9f\x2a\x7e\xc7\x14\xcd\xc4\x1e\x51\x95\xcf\x6a\xf3\x74\x74\xcb\x34\x9d\x7a\xd5\xb8\x90\xed\x6c\x56\x6d\xec\xd7\x23",
        // "dlsym" / M(Xor4) / S(38) / L(5)
        "\x04\x0c\x13\x19\x0d\x60\x43\xbb\xd4\x22\x13\xc6\x3b\xa8\xf1\xc0",
        // "identifierForVendor" / M(Xor3) / S(145) / L(19)
        "\xcc\xc1\xc0\xcb\xd1\xcc\xc3\xcc\xc0\xd7\xe3\xca\xd7\xf3\xc0\xcb\xc1\xca\xd7\xa5",
        // "" / M(None) / S(0) / L(0)
        "\x72\x41\x97\xff\x8e\xb1\x81\x9f\x1c\x1b\xe5\x48\x4e\x68\x7e\x2b\x3d\xf2\x41\x9d\x3d\x8a\x59\x1f\x05\xd3\x14\x2e\x27\x78\x1d\x62",
        // "CFDictionaryAddValue" / M(Xor4) / S(123) / L(20)
        "\x54\x51\x53\x7e\x74\x63\x7e\x78\x79\x76\x65\x6e\x56\x73\x73\x41\x76\x7b\x62\x72\x17",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x90\x77\x30\x21\xbb\x75\x88\x41\x65\x30\x34\x18\x6a\xb4\x97\xd1\x84\xda\x07\xdb\x42\x86\x9b\x8b\x8f\x1c\x9c\x29\x6a\xfd\x86",
        // "%02X:" / M(Xor2) / S(31) / L(5)
        "\x2a\x3f\x3d\x57\x35\x0f\x08\x75\x04\xe0\x0e\xb2\xca\x8f\x44\xc0",
        // "objc_msgSend" / M(Xor1) / S(202) / L(12)
        "\xa5\xa8\xa0\xa9\x95\xa7\xb9\xad\x99\xaf\xa4\xae\xca\xe7\xb0\x23",
        // "" / M(None) / S(0) / L(0)
        "\xa9\x32\x89\xd1\x7f\x6c\x4c\x1a\xbf\x1d\xa0\x7d\xd5\xbf\x22\x97\xf1\x5c\xa1\xc7\xc1\x8d\x33\x63\xa6\xe1\xbc\x8e\x35\xdd\x80\xc0",
        // "kCFTypeArrayCallBacks" / M(Xor2) / S(38) / L(21)
        "\x5b\x73\x76\x64\x49\x40\x55\x71\x42\x42\x51\x49\x73\x51\x5c\x5c\x72\x51\x53\x5b\x43\x30",
        // "longjmp" / M(Xor1) / S(205) / L(7)
        "\xa1\xa2\xa3\xaa\xa7\xa0\xbd\xcd\x66\xb0\x76\xc3\x90\x0b\x79\xd7",
        // "objc_getClass" / M(Rot) / S(40) / L(13)
        "\x97\x8a\x92\x8b\x87\x8f\x8d\x9c\x6b\x94\x89\x9b\x9b\x28\xec\xd9",
        // "" / M(None) / S(0) / L(0)
        "\xfc\xca\xe4\x4a\x81\xbb\x5e\x53\xc3\x89\xb1\x32\x19\xae\xa3\xb8\x41\x57\xa9\x68\x94\x63\xc5\xce\x28\x8e\x93\x4a\x64\x65\x6f\x41",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(194) / L(19)
        "\x70\x1d\x18\x11\x77\x4f\x4d\x5c\x77\x4d\x50\x5c\x77\x4a\x51\x77\x67\x6a\x62\x28",
        // "EVP_MD_CTX_init" / M(Xor4) / S(29) / L(15)
        "\x95\x86\x80\x8f\x9d\x94\x8f\x93\x84\x88\x8f\xb9\xbe\xb9\xa4\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x88\x1d\xa0\xdc\x6e\xd8\xce\x29\xfe\x8f\xfd\x8c\x78\x99\x19\xcd\x34\x48\x7d\x52\x6a\x9a\x89\x26\xb0\xee\x7c\x9e\x5b\xcf\x02\xe4",
        // "" / M(None) / S(0) / L(0)
        "\xc1\x72\xc6\xab\x60\x97\x07\xea\xc2\x6d\xac\x0b\x77\xba\x89\x75\x8a\x07\x3c\xa1\xaf\x6a\x69\x6f\x1b\xbc\x70\x1f\x2b\xc0\x22\x2f",
        // "BIO_new" / M(Xor1) / S(102) / L(7)
        "\x24\x2f\x29\x39\x08\x03\x11\x66\xc6\xf6\x05\xae\xd8\xa3\x25\xea",
        // "objc_getClass" / M(Xor2) / S(231) / L(13)
        "\x98\x95\x9d\x94\xa8\x90\x92\x83\xb4\x9b\x96\x84\x84\xf7\x5a\x94",
        // "PKCS7_get0_signers" / M(Rot) / S(131) / L(18)
        "\xd3\xce\xc6\xd6\xba\xe2\xea\xe8\xf7\xb3\xe2\xf6\xec\xea\xf1\xe8\xf5\xf6\x83",
        // "UIDevice" / M(Xor1) / S(148) / L(8)
        "\xc1\xdd\xd0\xf1\xe2\xfd\xf7\xf1\x94\x01\x5b\x29\x5c\xa6\x64\x3e",
        // "X509_STORE_free" / M(Xor3) / S(13) / L(15)
        "\x45\x28\x2d\x24\x42\x4e\x49\x52\x4f\x58\x42\x7b\x6f\x78\x78\x1d",
        // "" / M(None) / S(0) / L(0)
        "\x9c\x9e\xec\x5c\x48\x9c\x78\x25\xd7\x39\xf3\xdb\x54\xe9\x2b\xa1\xa4\x5d\xa7\x9b\x8f\x9c\x6f\x10\x63\x05\xdc\xfc\x18\xeb\x4d\x20",
        // "CFBundleIdentifier" / M(Xor1) / S(213) / L(18)
        "\x96\x93\x97\xa0\xbb\xb1\xb9\xb0\x9c\xb1\xb0\xbb\xa1\xbc\xb3\xbc\xb0\xa7\xd5",
        // "CFDataCreate" / M(Rot) / S(226) / L(12)
        "\x25\x28\x26\x43\x56\x43\x25\x54\x47\x43\x56\x47\xe2\x65\x9e\x00",
        // "Apple Root CA" / M(Xor1) / S(159) / L(13)
        "\xde\xef\xef\xf3\xfa\xbf\xcd\xf0\xf0\xeb\xbf\xdc\xde\x9f\x56\x43",
        // "CFStringCreateWithCString" / M(Xor4) / S(210) / L(25)
        "\xa7\xa2\xb7\x90\x96\x8d\x8a\x83\xa7\x96\x81\x85\x90\x81\xb3\x8d\x90\x8c\xa7\xb7\x90\x96\x8d\x8a\x83\xe4\xbb\xa8\xe1\x23\xf6\xd5\x00\x68",
        // "" / M(None) / S(0) / L(0)
        "\x7e\xdc\x60\xe7\x34\xa6\x2b\xd8\xb4\x86\xf1\x74\xce\xfc\x1b\x88\xb0\xac\x4b\xab\x08\xab\x70\x93\x04\x9c\x69\x81\xcc\x7f\x82\x2d",
        // "dlopen" / M(Xor1) / S(33) / L(6)
        "\x45\x4d\x4e\x51\x44\x4f\x21\xd2\x8a\x01\x21\x02\xff\xa4\x99\x62",
        // "" / M(None) / S(0) / L(0)
        "\xb3\xa4\xca\xd2\x94\x61\x96\x8f\xa1\x81\xd2\x3b\xd8\xff\x7b\x0a\x9a\x74\x64\x16\x7e\x92\x8d\x56\xb8\xd7\x78\x5a\x2b\x56\x62\x1a",
        // "X509_STORE_add_cert" / M(Xor2) / S(45) / L(19)
        "\x61\x0c\x09\x00\x66\x6a\x6d\x76\x6b\x7c\x66\x58\x5d\x5d\x66\x5a\x5c\x4b\x4d\x39",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(19) / L(29)
        "\x5e\x76\x73\x61\x4c\x45\x50\x71\x5c\x56\x41\x5c\x5a\x5b\x54\x47\x4c\x7e\x50\x4c\x76\x54\x59\x59\x77\x54\x56\x5e\x46\x35\x84\xc0\x84\x91\x60\x11\xf3\xea",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(161) / L(40)
        "\xd7\xd2\xd2\x06\xd6\x03\xd7\xd7\xd3\x04\xd6\xda\xd4\x02\xd1\xd9\x07\x07\xd6\xd9\x05\xd2\xd5\x02\x06\xd3\xd3\xd5\xd6\xd3\x05\xd2\xda\xd9\x05\x07\xd7\x04\xd7\xd1\xa1\x22\x23\x3c\xa3\xc6\x3c\xef\x8a",
        // "CFDateFormatterCreate" / M(Xor2) / S(35) / L(21)
        "\x76\x73\x71\x54\x41\x50\x73\x5a\x47\x58\x54\x41\x41\x50\x47\x76\x47\x50\x54\x41\x50\x35",
        // "BIO_new" / M(Xor4) / S(104) / L(7)
        "\xc2\xc9\xcf\xdf\xee\xe5\xf7\x80\x28\x3b\x5b\xff\xeb\xad\x01\x45",
        // "CFStringCreateWithBytes" / M(Xor3) / S(38) / L(23)
        "\x05\x00\x15\x32\x34\x2f\x28\x21\x05\x34\x23\x27\x32\x23\x11\x2f\x32\x2e\x04\x3f\x32\x23\x35\x46\x2f\x5b\x9b\xd1\x70\x57\xbe\x64",
        // "setjmp" / M(Rot) / S(227) / L(6)
        "\x56\x48\x57\x4d\x50\x53\xe3\x24\x0b\x83\x41\xbd\xc9\xf2\x68\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x4f\xed\xb4\x7c\xda\x73\x94\xc0\x63\x45\x0c\x31\xf8\x9d\xf6\xda\x41\x34\x9a\x3e\x87\x16\xcc\x16\x18\x38\x49\x17\x65\x8e\x60\x35",
        // "%02X" / M(Xor1) / S(189) / L(4)
        "\x98\x8d\x8f\xe5\xbd\xbe\x1a\x45\x5b\x75\xf7\x46\x55\x62\x15\xc5",
        // "CFDictionarySetValue" / M(Xor2) / S(162) / L(20)
        "\xf4\xf1\xf3\xde\xd4\xc3\xde\xd8\xd9\xd6\xc5\xce\xe4\xd2\xc3\xe1\xd6\xdb\xc2\xd2\xb7",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(19) / L(40)
        "\x14\x13\x13\x67\x17\x60\x14\x14\x10\x61\x17\x1b\x11\x63\x12\x1a\x64\x64\x17\x1a\x66\x13\x16\x63\x67\x10\x10\x16\x17\x10\x66\x13\x1b\x1a\x66\x64\x14\x61\x14\x12\x22\x74\xcb\x34\x9d\x7a\xd5\xb8\x56",
        // "setDelegate:" / M(Xor4) / S(220) / L(12)
        "\xb3\xa5\xb4\x84\xa5\xac\xa5\xa7\xa1\xb4\xa5\xfa\xc0\x86\xf1\x74",
        // "" / M(None) / S(0) / L(0)
        "\x38\xae\xaa\x3e\x49\xa5\x0c\x10\x6a\x84\xf5\xa3\xf2\x53\x39\x0c\xf9\x5f\x0d\x12\x47\xb5\xe5\x6c\xd6\x94\x3f\xb5\x69\x6c\x33\xe6",
        // "CFArrayCreateMutable" / M(Xor3) / S(129) / L(20)
        "\xd5\xd0\xd7\xe4\xe4\xf7\xef\xd5\xe4\xf3\xf7\xe2\xf3\xdb\xe3\xe2\xf7\xf4\xfa\xf3\x96",
        // "CC_SHA1_Init" / M(Xor1) / S(145) / L(12)
        "\xd2\xd2\xce\xc2\xd9\xd0\xa0\xce\xd8\xff\xf8\xe5\x91\x2b\x48\x30",
        // "Apple Root CA" / M(Rot) / S(183) / L(13)
        "\xf8\x27\x27\x23\x1c\xd7\x09\x26\x26\x2b\xd7\xfa\xf8\xb7\x00\xb6",
        // "" / M(None) / S(0) / L(0)
        "\x29\x1c\x60\xb4\x79\xaf\xed\x4a\x06\xff\x7f\xf2\xaa\xd3\xab\xaa\xeb\xdc\x9f\x38\x5a\x61\xbd\xf8\x70\x8f\x5c\x37\x90\xd1\xbb\x3d",
        // "X509_digest" / M(Xor1) / S(197) / L(11)
        "\x9d\xf0\xf5\xfc\x9a\xa1\xac\xa2\xa0\xb6\xb1\xc5\x25\x5f\x85\x03",
        // "CFReadStreamRead" / M(Xor3) / S(169) / L(16)
        "\xf9\xfc\xe8\xdf\xdb\xde\xe9\xce\xc8\xdf\xdb\xd7\xe8\xdf\xdb\xde\xba",
        // "EVP_get_digestbyname" / M(Xor3) / S(29) / L(20)
        "\x77\x64\x62\x6d\x55\x57\x46\x6d\x56\x5b\x55\x57\x41\x46\x50\x4b\x5c\x53\x5f\x57\x32",
        // "SKReceiptRefreshRequest" / M(Rot) / S(29) / L(23)
        "\x70\x68\x6f\x82\x80\x82\x86\x8d\x91\x6f\x82\x83\x8f\x82\x90\x85\x6f\x82\x8e\x92\x82\x90\x91\x1d\x62\x9e\xbb\x6a\x6e\x09\xce\x81",
        // "CFDictionarySetValue" / M(Xor1) / S(25) / L(20)
        "\x5a\x5f\x5d\x70\x7a\x6d\x70\x76\x77\x78\x6b\x60\x4a\x7c\x6d\x4f\x78\x75\x6c\x7c\x19",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x91\x8c\x73\x1e\xdc\xa7\xae\x40\xf9\x49\x01\x37\x27\x62\x27\x10\x24\x09\x31\x8f\x5e\x10\xdc\xf6\x9a\x8f\xd9\xb5\x5f\x64\x6b",
        // "longjmp" / M(Xor4) / S(187) / L(7)
        "\xdc\xdf\xde\xd7\xda\xdd\xc0\xb0\xa7\xd1\xd4\x44\x4d\xea\xa5\xe9",
        // "CFBundleUnloadExecutable" / M(Xor4) / S(251) / L(24)
        "\x18\x1d\x19\x2e\x35\x3f\x37\x3e\x0e\x35\x37\x34\x3a\x3f\x1e\x23\x3e\x38\x2e\x2f\x3a\x39\x37\x3e\x5b\xf4\x29\xd4\x3b\xaf\xb4\xcd\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x4f\x26\x84\x32\x00\xf7\x33\xe8\xc7\xc9\x5f\x74\x04\xd7\x49\xac\x15\x2a\x56\xd6\x69\x1d\xb9\xc7\x18\x44\xb6\xc3\x0d\x59\x63\x8b",
        // "BIO_write" / M(Xor1) / S(177) / L(9)
        "\xf3\xf8\xfe\xee\xc6\xc3\xd8\xc5\xd4\xb1\x52\xe4\xb7\x08\x8a\xfc",
        // "X509_STORE_free" / M(Xor3) / S(219) / L(15)
        "\xb3\xde\xdb\xd2\xb4\xb8\xbf\xa4\xb9\xae\xb4\x8d\x99\x8e\x8e\xeb",
        // "d2i_X509_bio" / M(Xor3) / S(185) / L(12)
        "\xad\xfb\xa0\x96\x91\xfc\xf9\xf0\x96\xab\xa0\xa6\xc9\xcf\x56\x12",
        // "" / M(None) / S(0) / L(0)
        "\x3a\xd7\x8c\xc9\x28\x3b\x5b\xff\xeb\xad\x01\x45\x2d\xb5\xc5\x1b\x9b\xdd\x61\x66\xea\x76\x67\x48\x57\x4a\x96\x33\x2b\xad\xf0\x1c",
        // "CC_SHA1" / M(Xor4) / S(131) / L(7)
        "\x73\x73\x6f\x63\x78\x71\x01\x30\x98\x43\xa4\x94\x0f\xdd\xcd\x3c",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(7) / L(24)
        "\x09\x53\x55\x54\x09\x4a\x4f\x44\x09\x4a\x4f\x44\x75\x5f\x55\x52\x43\x4b\x08\x42\x5f\x4a\x4f\x44\x26\xf4\x0e\xcd\x26\xf8\xb0\xd0\x65",
        // "CFBundleIdentifier" / M(Xor1) / S(83) / L(18)
        "\x10\x15\x11\x26\x3d\x37\x3f\x36\x1a\x37\x36\x3d\x27\x3a\x35\x3a\x36\x21\x53",
        // "" / M(None) / S(0) / L(0)
        "\x41\xd4\x1a\xbd\xa0\x76\x67\xc6\x43\xab\x25\xf3\x9b\x95\x6d\xe1\xbc\x95\xd5\xce\x84\xe0\x1c\xa0\x60\x14\x70\x65\x61\x2a\x8a\x4a",
        // "currentDevice" / M(Xor1) / S(121) / L(13)
        "\x1a\x0c\x0b\x0b\x1c\x17\x0d\x3d\x1c\x0f\x10\x1a\x1c\x79\x6b\x6a",
        // "CFReadStreamClose" / M(Xor3) / S(177) / L(17)
        "\x80\x85\x91\xa6\xa2\xa7\x90\xb7\xb1\xa6\xa2\xae\x80\xaf\xac\xb0\xa6\xc3",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(116) / L(39)
        "\xb7\xba\xc8\xdd\xe1\xd9\xce\xe3\xe2\xd9\xb7\xe6\xd9\xd5\xe8\xd9\xcb\xdd\xe8\xdc\xc8\xdd\xe1\xd9\xbd\xe2\xe8\xd9\xe6\xea\xd5\xe0\xba\xe6\xe3\xe1\xbb\xc1\xc8\x74\xd1\x85\x00\x1d\x6f\x68\xfd\x29",
        // "BIO_free" / M(Xor3) / S(34) / L(8)
        "\x70\x7b\x7d\x6d\x54\x40\x57\x57\x32\xc6\xfd\x71\xfd\x13\x79\xb3",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(27) / L(25)
        "\x7e\x7b\x79\x54\x5e\x49\x54\x52\x53\x5c\x4f\x44\x7e\x4f\x58\x5c\x49\x58\x70\x48\x49\x5c\x5f\x51\x58\x3d\xb3\x18\xab\xed\x8d\x24\x74\x98",
        // "" / M(None) / S(0) / L(0)
        "\x20\x55\x25\x1c\x79\xc5\xbe\xc6\x67\x25\xab\x2a\x1f\x1f\x4e\xe2\xbb\x5f\x0c\x6d\x0b\xe5\xdb\x25\xd9\x34\xfa\x67\x79\x8e\xc9\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x6d\x8a\xcf\xf6\xac\xd3\xa9\x96\x81\x5c\x87\x93\x0b\x28\xec\xac\x40\xc8\xc6\xb8\xb7\xaf\x6d\x67\x64\x18\x60\xa2\x9b\x44\x67\xce",
        // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(148) / L(25)
        "\x87\x98\x84\x98\x8e\x82\x86\x98\x87\x87\x85\x80\x85\x83\x98\x87\x86\x86\x98\x80\x98\x87\x87\x98\x87\xb6\xe1\x57\x61\x6e\xf6\x8a\xba\x9f",
        // "objc_msgSend" / M(Xor4) / S(217) / L(12)
        "\xff\xf2\xfa\xf3\xcf\xfd\xe3\xf7\xc3\xf5\xfe\xf4\x90\x13\xa3\x2d",
        // "CFArrayAppendValue" / M(Rot) / S(95) / L(18)
        "\xa2\xa5\xa0\xd1\xd1\xc0\xd8\xa0\xcf\xcf\xc4\xcd\xc3\xb5\xc0\xcb\xd4\xc4\x5f",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(120) / L(16)
        "\xdb\xaa\xe1\xd7\xb9\xcb\xc6\xa9\xd7\xc1\xc6\xcc\xbd\xbf\xbd\xca\x78",
        // "CFAbsoluteTimeGetCurrent" / M(Rot) / S(94) / L(24)
        "\xa1\xa4\x9f\xc0\xd1\xcd\xca\xd3\xd2\xc3\xb2\xc7\xcb\xc3\xa5\xc3\xd2\xa1\xd3\xd0\xd0\xc3\xcc\xd2\x5e\x1d\xa3\xb1\x37\x39\x74\xd2\xf4",
        // "X509_STORE_new" / M(Xor2) / S(104) / L(14)
        "\x20\x4d\x48\x41\x27\x2b\x2c\x37\x2a\x3d\x27\x16\x1d\x0f\x78\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x7f\xe8\xb9\x1b\xae\xd5\x0e\x46\x35\xa2\xbb\x60\x8d\x62\x7a\x9d\xbe\xf9\x3c\x9a\x30\x58\x04\xa3\xf4\xe9\xd3\x75\xfd\xe1\x60\xe0",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(7) / L(31)
        "\x6c\x44\x41\x53\x7e\x77\x62\x43\x6e\x64\x73\x6e\x68\x69\x66\x75\x7e\x51\x66\x6b\x72\x62\x44\x66\x6b\x6b\x45\x66\x64\x6c\x74\x07",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(68) / L(39)
        "\x87\x8a\x98\xad\xb1\xa9\x9e\xb3\xb2\xa9\x87\xb6\xa9\xa5\xb8\xa9\x9b\xad\xb8\xac\x98\xad\xb1\xa9\x8d\xb2\xb8\xa9\xb6\xba\xa5\xb0\x8a\xb6\xb3\xb1\x8b\x91\x98\x44\x7c\x2e\xed\xa7\x44\xf8\xa7\xe4",
        // "" / M(None) / S(0) / L(0)
        "\xdd\xed\x6c\x2e\x09\xaf\xa9\xd9\x47\x63\x6b\x96\x95\xbe\xdd\x70\x3c\x75\x0f\x94\x58\x20\x32\xea\x68\x2b\xbb\x84\x6e\xaf\xfc\xd7",
        // "sk_free" / M(Rot) / S(217) / L(7)
        "\x4c\x44\x38\x3f\x4b\x3e\x3e\xd9\xe2\xb8\x33\x0c\x7a\x23\xa6\x1c",
        // "CFDateCompare" / M(Xor2) / S(0) / L(13)
        "\x53\x56\x54\x71\x64\x75\x53\x7f\x7d\x60\x71\x62\x75\x10\xe8\x50",
        // "sel_registerName" / M(Xor4) / S(120) / L(16)
        "\x8b\x9d\x94\xa7\x8a\x9d\x9f\x91\x8b\x8c\x9d\x8a\xb6\x99\x95\x9d\xf8",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(184) / L(24)
        "\x23\xfb\xfe\xfc\x19\x2c\x1d\xfe\x27\x2a\x25\x19\x2c\x2c\x1d\x2a\x0c\x21\x25\x1d\x12\x27\x26\x1d\xb8\xbb\x62\xa1\xe6\xd8\x0f\xc5\x8f",
        // "CFBundleGetMainBundle" / M(Xor3) / S(4) / L(21)
        "\x59\x5c\x58\x6f\x74\x7e\x76\x7f\x5d\x7f\x6e\x57\x7b\x73\x74\x58\x6f\x74\x7e\x76\x7f\x1a",
        // "CFDictionaryGetValue" / M(Xor1) / S(145) / L(20)
        "\xd2\xd7\xd5\xf8\xf2\xe5\xf8\xfe\xff\xf0\xe3\xe8\xd6\xf4\xe5\xc7\xf0\xfd\xe4\xf4\x91",
        // "" / M(None) / S(0) / L(0)
        "\xc8\x7d\x84\xc2\xaa\x21\x45\x3c\x83\x7d\xa0\x19\x8c\x1b\x3e\x86\x35\xcd\xc5\xe3\x7c\xa3\xdd\xa6\xfc\xf3\xb2\xa3\x9d\x14\x86\x13",
        // "CFBundleIdentifier" / M(Xor4) / S(16) / L(18)
        "\x73\x76\x72\x45\x5e\x54\x5c\x55\x79\x54\x55\x5e\x44\x59\x56\x59\x55\x42\x30",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(49) / L(24)
        "\x3f\x65\x63\x62\x3f\x7c\x79\x72\x3f\x7c\x79\x72\x43\x69\x63\x64\x75\x7d\x3e\x74\x69\x7c\x79\x72\x10\xee\x8b\x88\x30\x1a\x84\x11\xfe",
        // "X509_get_ext_by_OBJ" / M(Rot) / S(18) / L(19)
        "\x6a\x47\x42\x4b\x71\x79\x77\x86\x71\x77\x8a\x86\x71\x74\x8b\x71\x61\x54\x5c\x12",
        // "PKCS7_free" / M(Xor3) / S(159) / L(10)
        "\xff\xe4\xec\xfc\x98\xf0\xc9\xdd\xca\xca\xaf\x93\xb2\x4e\xfc\xf7",
        // "CC_SHA1_Init" / M(Rot) / S(212) / L(12)
        "\x17\x17\x33\x27\x1c\x15\x05\x33\x1d\x42\x3d\x48\xd4\x28\xec\xac",
        // "" / M(None) / S(0) / L(0)
        "\x3a\x5e\x98\xd3\xa9\x86\x58\x38\x90\x73\xe6\x74\xac\xd2\x8e\xfd\x72\x1a\xc3\x18\x8d\x8a\x60\x92\x7e\xbc\x88\x14\x24\x92\x59\x3d",
        // "CFBundleShortVersionString" / M(Xor1) / S(110) / L(26)
        "\x2d\x28\x2c\x1b\x00\x0a\x02\x0b\x3d\x06\x01\x1c\x1a\x38\x0b\x1c\x1d\x07\x01\x00\x3d\x1a\x1c\x07\x00\x09\x6e\x55\x85\x78\xe5\xca\xa4\x5b\x4d",
        // "%02x:" / M(Xor2) / S(226) / L(5)
        "\xd7\xc2\xc0\x8a\xc8\xf2\x26\xd7\x81\x6e\x2d\xc8\x22\x92\xcc\xb4",
        // "EVP_DigestFinal" / M(Xor2) / S(188) / L(15)
        "\xe9\xfa\xfc\xf3\xe8\xc5\xcb\xc9\xdf\xd8\xea\xc5\xc2\xcd\xc0\xac",
        // "CFStringCompare" / M(Rot) / S(153) / L(15)
        "\xdc\xdf\xec\x0d\x0b\x02\x07\x00\xdc\x08\x06\x09\xfa\x0b\xfe\x99",
        // "CFArrayGetCount" / M(Rot) / S(119) / L(15)
        "\xba\xbd\xb8\xe9\xe9\xd8\xf0\xbe\xdc\xeb\xba\xe6\xec\xe5\xeb\x77",
        // "OBJ_txt2obj" / M(Rot) / S(46) / L(11)
        "\x7d\x70\x78\x8d\xa2\xa6\xa2\x60\x9d\x90\x98\x2e\x6a\x70\x82\xb1",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(154) / L(32)
        "\xc2\xc2\xc2\xc2\x9c\x96\x9c\xf6\xf6\x9c\x96\x9c\xdf\xdf\x9c\xef\x9c\xf3\xf3\x9c\x81\x9c\xd6\xd6\x9c\x81\x9c\xc8\xc8\x9c\xe1\x9c\xbb",
        // "CC_SHA1_Init" / M(Xor2) / S(241) / L(12)
        "\xa2\xa2\xbe\xb2\xa9\xa0\xd0\xbe\xa8\x8f\x88\x95\xe1\x93\x18\x2d",
        // "CFDictionaryAddValue" / M(Xor1) / S(76) / L(20)
        "\x0f\x0a\x08\x25\x2f\x38\x25\x23\x22\x2d\x3e\x35\x0d\x28\x28\x1a\x2d\x20\x39\x29\x4c",
        // "" / M(None) / S(0) / L(0)
        "\x07\xe1\x69\x2d\x35\x04\x27\xfa\x1d\x57\xc7\x09\x4c\xe7\xe3\x6e\x2d\x13\x4a\x30\x3b\xec\x04\x56\xe6\x1e\x17\x3f\x1a\xeb\xd3\x1b",
        // "" / M(None) / S(0) / L(0)
        "\xab\x17\x08\x93\x51\x11\xd7\x9f\x78\x1c\xd2\xbd\xfc\xc7\x31\x10\x04\x4c\xdd\x61\x58\xa2\x73\x5d\x3b\xff\x86\x7f\x17\x2f\x52\x20",
        // "" / M(None) / S(0) / L(0)
        "\x74\x03\xbd\x0d\xd6\x08\x73\xfe\x9d\xb7\x56\xd5\x6d\xaa\x94\x4e\x9a\x47\x4b\x30\x65\xe4\xd1\xc7\xb4\x87\x2d\xc5\x30\x5c\x15\xd6",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(193) / L(40)
        "\x24\x30\x2e\xef\x2a\x2f\x35\x22\x2f\x28\x2a\x23\x2d\x26\x34\x30\x27\x35\x38\x22\x33\x26\xef\x2e\x26\x2f\x34\x2d\x22\x24\x33\x30\x34\x34\x26\x34\x35\x22\x35\x34\xc1\x02\x25\x2c\xb9\xe1\x6b\x93\x43",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(99) / L(66)
        "\xc6\xba\x90\x9a\x9d\x8c\x84\xc6\xa5\x80\x8b\x9b\x88\x9b\x90\xc6\xaf\x9b\x88\x84\x8c\x9e\x86\x9b\x82\x9a\xc6\xaa\x86\x9b\x8c\xaf\x86\x9c\x87\x8d\x88\x9d\x80\x86\x87\xc7\x8f\x9b\x88\x84\x8c\x9e\x86\x9b\x82\xc6\xaa\x86\x9b\x8c\xaf\x86\x9c\x87\x8d\x88\x9d\x80\x86\x87\xe9",
        // "currentDevice" / M(Xor1) / S(107) / L(13)
        "\x08\x1e\x19\x19\x0e\x05\x1f\x2f\x0e\x1d\x02\x08\x0e\x6b\x9a\x7e",
        // "X509_free" / M(Xor1) / S(87) / L(9)
        "\x0f\x62\x67\x6e\x08\x31\x25\x32\x32\x57\xbf\x9b\xa5\x05\x65\xa6",
        // "6" / M(Xor1) / S(25) / L(1)
        "\x2f\x19\xb9\xe8\x84\x3e\x01\xd8\x0d\xac\xe8\x37\x94\x71\x58\x78",
        // "CFArrayGetCount" / M(Xor3) / S(78) / L(15)
        "\x1d\x18\x1f\x2c\x2c\x3f\x27\x19\x3b\x2a\x1d\x31\x2b\x30\x2a\x5e",
        // "BIO_s_mem" / M(Xor4) / S(57) / L(9)
        "\xd2\xd9\xdf\xcf\xe3\xcf\xfd\xf5\xfd\x90\x12\x57\xe1\xcf\x40\xf2",
        // "strncmp" / M(Xor3) / S(130) / L(7)
        "\xe1\xe6\xe0\xfc\xf1\xff\xe2\x92\x5a\x33\x03\x5e\x36\x32\x45\x20",
        // "CFBundleVersion" / M(Xor1) / S(176) / L(15)
        "\xf3\xf6\xf2\xc5\xde\xd4\xdc\xd5\xe6\xd5\xc2\xc3\xd9\xdf\xde\xb0",
        // "SHA1_Init" / M(Xor2) / S(108) / L(9)
        "\x2f\x34\x3d\x4d\x23\x35\x12\x15\x08\x7c\xae\xc0\x93\x6a\xbf\x63",
        // "" / M(None) / S(0) / L(0)
        "\xe2\x31\xb5\xb0\x06\x58\x45\xbd\xf7\x77\x35\xca\x78\xcb\xd0\x2b\x9d\x46\x9a\x5b\x95\xe4\xfc\xba\xd8\xe5\x7b\x4f\xa8\xa4\x40\x82",
        // "CFBundleShortVersionString" / M(Xor1) / S(26) / L(26)
        "\x59\x5c\x58\x6f\x74\x7e\x76\x7f\x49\x72\x75\x68\x6e\x4c\x7f\x68\x69\x73\x75\x74\x49\x6e\x68\x73\x74\x7d\x1a\x30\xb7\xec\x79\x75\xc6\xe7\x06",
        // "CFDataCreate" / M(Xor1) / S(127) / L(12)
        "\x3c\x39\x3b\x1e\x0b\x1e\x3c\x0d\x1a\x1e\x0b\x1a\x7f\xd5\x27\xf9",
        // "strlen" / M(Xor4) / S(25) / L(6)
        "\xe3\xe4\xe2\xfc\xf5\xfe\x90\x0b\x27\xda\xc2\x5f\x6d\x43\x03\x71",
        // "" / M(None) / S(0) / L(0)
        "\x85\x84\xce\x37\x9a\xe4\x8a\x84\xf0\x2c\xb7\x10\xbd\x5f\x5b\x9f\xc4\x65\x14\xe6\x47\xd5\x27\xf9\xd3\xc6\x31\xee\xfa\x4c\xcf\xad",
        // "CFNumberCreate" / M(Xor2) / S(151) / L(14)
        "\xc4\xc1\xc9\xf2\xea\xe5\xe2\xf5\xc4\xf5\xe2\xe6\xf3\xe2\x87\x4e",
        // "6" / M(Xor4) / S(171) / L(1)
        "\x86\xb0\x73\x89\xad\x7a\x78\x77\x9d\xbc\xcc\x71\x0f\x8c\xed\x80",
        // "" / M(None) / S(0) / L(0)
        "\x9c\x97\x49\x25\x86\xc8\x61\xcf\xd9\xb5\x75\x04\x23\x2a\x72\x81\xa8\x05\xdb\xf4\xae\xdc\x61\x75\x2f\xfd\x98\x06\xfb\x75\x7f\x0c",
        // "ASN1_get_object" / M(Xor4) / S(103) / L(15)
        "\x31\x23\x3e\x41\x2f\x17\x15\x04\x2f\x1f\x12\x1a\x15\x13\x04\x70",
        // "CC_SHA1_Update" / M(Xor1) / S(104) / L(14)
        "\x2b\x2b\x37\x3b\x20\x29\x59\x37\x3d\x18\x0c\x09\x1c\x0d\x68\xce",
        // "BIO_s_mem" / M(Xor2) / S(161) / L(9)
        "\xf3\xf8\xfe\xee\xc2\xee\xdc\xd4\xdc\xb1\x9e\x0c\x06\xa6\x5a\x3b",
        // "" / M(None) / S(0) / L(0)
        "\xeb\x10\xfd\xde\x47\x19\x65\x1f\x78\x07\x93\x5d\x0d\x72\xdd\xe5\x42\x98\x99\x94\x16\x23\x9b\x36\x71\xb6\xec\xe6\xf2\x43\x54\x69",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(10) / L(31)
        "\x75\x4d\x50\x5e\x83\x7a\x6f\x4e\x73\x6d\x7e\x73\x79\x78\x6b\x7c\x83\x60\x6b\x76\x7f\x6f\x4d\x6b\x76\x76\x4c\x6b\x6d\x75\x7d\x0a",
        // "X509_digest" / M(Xor1) / S(73) / L(11)
        "\x11\x7c\x79\x70\x16\x2d\x20\x2e\x2c\x3a\x3d\x49\x6b\xde\xc3\xec",
        // "getUUIDBytes:" / M(Xor1) / S(141) / L(13)
        "\xea\xe8\xf9\xd8\xd8\xc4\xc9\xcf\xf4\xf9\xe8\xfe\xb7\x8d\x61\x49",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(139) / L(40)
        "\x8c\x8b\x8b\xff\x8f\xf8\x8c\x8c\x88\xf9\x8f\x83\x89\xfb\x8a\x82\xfc\xfc\x8f\x82\xfe\x8b\x8e\xfb\xff\x88\x88\x8e\x8f\x88\xfe\x8b\x83\x82\xfe\xfc\x8c\xf9\x8c\x8a\xba\xed\xae\xe0\xb9\x87\xc1\x3b\x1e",
        // "CFDataAppendBytes" / M(Xor4) / S(62) / L(17)
        "\x1f\x1a\x18\x3d\x28\x3d\x1d\x2c\x2c\x39\x32\x38\x1e\x25\x28\x39\x2f\x5c",
        // "" / M(None) / S(0) / L(0)
        "\x60\x8f\x6f\x69\x18\xbd\x04\x03\x5d\x50\xb8\x10\xd9\x72\x0d\xc5\x14\xb2\x2e\x1e\xbb\x66\xb4\x06\xf0\x9a\xf4\x0d\xc9\x84\xb6\x59",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(37) / L(40)
        "\x88\x94\x92\x53\x8e\x93\x99\x86\x93\x8c\x8e\x87\x91\x8a\x98\x94\x8b\x99\x9c\x86\x97\x8a\x53\x92\x8a\x93\x98\x91\x86\x88\x97\x94\x98\x98\x8a\x98\x99\x86\x99\x98\x25\x9b\x9b\xe6\x0d\x7c\x76\x7b\xad",
        // "CFDateFormatterCreate" / M(Rot) / S(182) / L(21)
        "\xf9\xfc\xfa\x17\x2a\x1b\xfc\x25\x28\x23\x17\x2a\x2a\x1b\x28\xf9\x28\x1b\x17\x2a\x1b\xb6",
        // "" / M(None) / S(0) / L(0)
        "\x76\xac\xb3\x9d\xd4\x63\x33\xb3\x47\xc9\xb3\xd4\x60\xf6\xfe\x72\x55\x7d\x5c\x1f\xa1\xca\x78\x36\xcb\x36\x5c\x12\x3b\x3b\xb4\xec",
        // "" / M(None) / S(0) / L(0)
        "\x53\x44\xb5\xf9\x3e\x87\xba\x5e\xe7\xd7\x68\x6e\x96\x16\x38\xdd\x80\x39\x68\x48\x68\x21\x8b\x75\xd5\xce\xd9\xee\x60\x6d\x3d\x18",
        // "CFBundleVersion" / M(Rot) / S(75) / L(15)
        "\x8e\x91\x8d\xc0\xb9\xaf\xb7\xb0\xa1\xb0\xbd\xbe\xb4\xba\xb9\x4b",
        // "CFStringCreateWithCString" / M(Xor4) / S(180) / L(25)
        "\xab\xae\xbb\x9c\x9a\x81\x86\x8f\xab\x9a\x8d\x89\x9c\x8d\xbf\x81\x9c\x80\xab\xbb\x9c\x9a\x81\x86\x8f\xe8\x5f\xca\x40\x9a\x90\xf9\xf6\x3a",
        // "identifierForVendor" / M(Xor1) / S(69) / L(19)
        "\x2c\x21\x20\x2b\x31\x2c\x23\x2c\x20\x37\x03\x2a\x37\x13\x20\x2b\x21\x2a\x37\x45",
        // "CFBundleGetIdentifier" / M(Xor2) / S(107) / L(21)
        "\x3e\x3b\x3f\x08\x13\x19\x11\x18\x3a\x18\x09\x34\x19\x18\x13\x09\x14\x1b\x14\x18\x0f\x7d",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(140) / L(26)
        "\xcf\xca\xde\xe9\xed\xe8\xdf\xf8\xfe\xe9\xed\xe1\xcf\xfe\xe9\xed\xf8\xe9\xdb\xe5\xf8\xe4\xca\xe5\xe0\xe9\x8c\x45\xcf\xb9\xa7\x9d\xb1\x24\xaa",
        // "CFDateFormatterSetProperty" / M(Xor4) / S(137) / L(26)
        "\xf8\xfd\xff\xda\xcf\xde\xfd\xd4\xc9\xd6\xda\xcf\xcf\xde\xc9\xe8\xde\xcf\xeb\xc9\xd4\xcb\xde\xc9\xcf\xc2\xbb\x33\x27\x97\xdb\xdc\xc9\xd1\xda",
        // "OBJ_txt2obj" / M(Xor3) / S(73) / L(11)
        "\x16\x1b\x13\x06\x2d\x21\x2d\x6b\x36\x3b\x33\x59\xca\x37\x11\xfa",
        // "" / M(None) / S(0) / L(0)
        "\x23\x30\xf8\xa6\xa3\x68\xc1\x82\x11\x5c\x3f\x91\x36\x8b\xb3\xe0\xc6\x6d\x2c\x5e\xe3\xdf\xd7\x83\xe0\xd2\x25\x48\x1c\xd1\x24\x93",
        // "PKCS7_get0_signers" / M(Xor3) / S(61) / L(18)
        "\x00\x1b\x13\x03\x67\x0f\x37\x35\x24\x60\x0f\x23\x39\x37\x3e\x35\x22\x23\x50",
        // "CFArrayCreateMutable" / M(Xor1) / S(33) / L(20)
        "\x62\x67\x60\x53\x53\x40\x58\x62\x53\x44\x40\x55\x44\x6c\x54\x55\x40\x43\x4d\x44\x21",
        // "ASN1_INTEGER_free" / M(Xor1) / S(148) / L(17)
        "\xd5\xc7\xda\xa5\xcb\xdd\xda\xc0\xd1\xd3\xd1\xc6\xcb\xf2\xe6\xf1\xf1\x94",
        // "." / M(Xor4) / S(140) / L(1)
        "\xee\xc0\x16\x2a\x6d\xae\x90\x5c\x3b\x26\x56\x7f\xa9\x01\x30\x8c",
        // "CFDateCreate" / M(Xor1) / S(233) / L(12)
        "\xaa\xaf\xad\x88\x9d\x8c\xaa\x9b\x8c\x88\x9d\x8c\xe9\x72\x0d\xc5",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(38) / L(32)
        "\x9f\x9f\x9f\x9f\x4d\x53\x4d\x73\x73\x4d\x53\x4d\x8a\x8a\x4d\x7a\x4d\x6e\x6e\x4d\x60\x4d\x93\x93\x4d\x60\x4d\x99\x99\x4d\x80\x4d\x26",
        // "identifierForVendor" / M(Xor1) / S(5) / L(19)
        "\x6c\x61\x60\x6b\x71\x6c\x63\x6c\x60\x77\x43\x6a\x77\x53\x60\x6b\x61\x6a\x77\x05",
        // "EVP_MD_CTX_init" / M(Xor3) / S(51) / L(15)
        "\x06\x15\x13\x1c\x0e\x07\x1c\x00\x17\x1b\x1c\x2a\x2d\x2a\x37\x43",
        // "" / M(None) / S(0) / L(0)
        "\x3b\x12\x60\x5b\xf4\x16\x1f\x14\x62\xc7\xe6\x4e\x72\x45\x5a\xaa\x58\x60\x2e\xe4\x03\x7b\x68\xa6\x9e\xba\x0f\xde\x41\xb3\xfd\x2a",
        // "sk_free" / M(Xor3) / S(236) / L(7)
        "\x8f\x97\xa3\x9a\x8e\x99\x99\xfc\xa3\x1f\x96\x3a\xc5\xe5\x58\x25",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(176) / L(16)
        "\x13\xe2\x19\x0f\xf1\x03\xfe\xe1\x0f\xf9\xfe\x04\xf5\xf7\xf5\x02\xb0",
        // "sk_num" / M(Xor2) / S(45) / L(6)
        "\x4e\x56\x62\x53\x48\x50\x3d\x69\xe3\xb9\xe0\xe7\xcf\xcc\x6e\xb5",
        // "%02x" / M(Xor2) / S(116) / L(4)
        "\x41\x54\x56\x1c\x64\xdb\x45\xcc\xfc\x65\xa4\xb1\xff\x3e\xe0\x34",
        // "" / M(None) / S(0) / L(0)
        "\xae\xfa\xe6\x19\xb1\xb6\x81\x90\x0e\xcf\x6a\xa5\x11\xf4\xcb\x87\x9d\x0a\x83\x05\x13\x82\x3c\xd4\xc6\x6d\xdb\x7e\x3f\x63\xc5\x2d",
        // "d2i_PKCS7_bio" / M(Xor4) / S(252) / L(13)
        "\xa4\xf2\xa9\x9f\x90\x8b\x83\x93\xf7\x9f\xa2\xa9\xaf\xc0\x3d\x32",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(226) / L(39)
        "\x51\x54\x46\x7b\x7f\x77\x48\x7d\x7c\x77\x51\x60\x77\x73\x66\x77\x45\x7b\x66\x7a\x46\x7b\x7f\x77\x5b\x7c\x66\x77\x60\x64\x73\x7e\x54\x60\x7d\x7f\x55\x5f\x46\x12\xec\x03\x10\xac\x8b\x5f\x7d\x77",
        // "CFDataGetLength" / M(Xor3) / S(9) / L(15)
        "\x5a\x5f\x5d\x78\x6d\x78\x5e\x7c\x6d\x55\x7c\x77\x7e\x6d\x71\x19",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor1) / S(137) / L(59)
        "\xbf\xb8\xb3\xb8\xcc\xb3\xbc\xcb\xb3\xbf\xbf\xb3\xbb\xca\xb3\xbc\xb0\xb3\xba\xc8\xb3\xb9\xb1\xb3\xcf\xcf\xb3\xbc\xb1\xb3\xcd\xb8\xb3\xbd\xc8\xb3\xcc\xbb\xb3\xbb\xbd\xb3\xbc\xbb\xb3\xcd\xb8\xb3\xb0\xb1\xb3\xcd\xcf\xb3\xbf\xca\xb3\xbf\xb9\x89\x15\x75\x52\xcb\x7a\x72\x56\xc9",
        // "UIDevice" / M(Xor1) / S(101) / L(8)
        "\x30\x2c\x21\x00\x13\x0c\x06\x00\x65\x96\x34\x46\xeb\x2f\x70\x7a",
        // "" / M(None) / S(0) / L(0)
        "\xac\x98\x28\x74\x5f\xae\x52\xe3\x67\x07\xdd\x2f\xa1\xaf\x2b\x9e\x38\x8f\xb7\x1e\x59\x7b\x0a\x5c\x29\x47\xaf\x4c\x1d\xff\xd0\xd8",
        // "%02X:" / M(Xor1) / S(120) / L(5)
        "\x5d\x48\x4a\x20\x42\x78\xe5\x4c\xa1\x0c\x1c\x6a\x6a\xd0\xd3\xe9",
        // "exit" / M(Xor1) / S(50) / L(4)
        "\x57\x4a\x5b\x46\x32\xf6\xda\x10\x46\x3b\x39\x55\x35\x76\xb4\xde",
        // "sk_value" / M(Xor3) / S(17) / L(8)
        "\x52\x4a\x7e\x57\x40\x4d\x54\x44\x21\xe9\x4e\x04\x1a\x81\x9d\x35",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(243) / L(22)
        "\x25\x7f\x79\x78\x25\x66\x63\x68\x25\x66\x63\x68\x65\x68\x60\x69\x24\x6e\x73\x66\x63\x68\x0a",
        // "NSBundle" / M(Xor3) / S(170) / L(8)
        "\xf4\xe9\xf8\xcf\xd4\xde\xd6\xdf\xba\xf8\x09\x92\x6f\x39\x11\xd0",
        // "" / M(None) / S(0) / L(0)
        "\xbb\xa0\xb8\x34\xa4\x0e\x8f\x5f\x01\xca\xeb\x60\x15\x68\x5b\x20\xa8\x77\x41\x1d\x1d\x04\x82\xf6\x9e\x51\x65\x6e\x13\xb8\x8e\x78",
        // "SHA1_Final" / M(Xor3) / S(67) / L(10)
        "\x00\x1b\x12\x62\x0c\x15\x3a\x3d\x32\x3f\x53\x99\x51\x0c\xd8\x56",
        // "NSBundle" / M(Xor1) / S(172) / L(8)
        "\xe2\xff\xee\xd9\xc2\xc8\xc0\xc9\xac\x9c\x6f\x10\x63\x05\xdc\xfc",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x16\x20\x2b\x03\x94\x45\x74\xa9\x15\x99\x37\x73\x85\x2e\x9a\x92\x5d\x6d\xc1\x65\x6e\x1f\x4c\x8a\xc5\xc9\xbf\x39\xc5\x6c\xf4",
        // "%02x:" / M(Xor3) / S(50) / L(5)
        "\x67\x72\x70\x3a\x78\x42\xb3\xa0\x37\xe0\x3b\xa8\x27\x8a\x1e\x6f",
        // "setjmp" / M(Xor2) / S(17) / L(6)
        "\x72\x64\x75\x6b\x6c\x71\x01\x3f\x86\xbd\x03\xa7\x40\x4d\x8f\xfe",
        // "CFReadStreamClose" / M(Xor1) / S(79) / L(17)
        "\x0c\x09\x1d\x2a\x2e\x2b\x1c\x3b\x3d\x2a\x2e\x22\x0c\x23\x20\x3c\x2a\x4f",
        // "" / M(None) / S(0) / L(0)
        "\xc2\x0e\xe9\x27\x7a\x4b\x18\xd1\x9b\x8e\xa2\x9c\xd6\xe0\x52\x4b\x85\x10\xc4\xbf\x7a\x5c\x2b\x1c\x54\x78\x53\xe9\xcf\x7e\x0f\x83",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x02\x97\xea\xa1\x36\xbe\xd2\x3b\x9c\x14\x64\x13\xd2\x6c\x65\x43\x91\x1f\x99\xb0\x29\x0c\xd4\x1a\x51\xa2\xa3\x3c\x7b\xa6\x3d",
        // "ASN1_INTEGER_get" / M(Xor2) / S(48) / L(16)
        "\x60\x72\x6f\x10\x7e\x68\x6f\x75\x64\x66\x64\x73\x7e\x46\x44\x55\x21",
        // "longjmp" / M(Rot) / S(198) / L(7)
        "\x32\x35\x34\x2d\x30\x33\x36\xc6\x84\x06\x5d\xf0\x8e\xf9\x55\x6e",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(169) / L(14)
        "\xeb\xed\xf5\xfd\xe6\xf4\xf8\xf0\xf7\xe6\xf6\xf7\xf5\xe0\xb9\x3b",
        // "CFStringCompare" / M(Xor2) / S(18) / L(15)
        "\x41\x44\x51\x76\x70\x6b\x6c\x65\x41\x6d\x6f\x72\x63\x70\x67\x02",
        // "kCFDateFormatterTimeZone" / M(Xor2) / S(249) / L(24)
        "\xb3\x9b\x9e\x9c\xb9\xac\xbd\x9e\xb7\xaa\xb5\xb9\xac\xac\xbd\xaa\x8c\xb1\xb5\xbd\x82\xb7\xb6\xbd\xd8\x66\xb4\xbe\x97\xc8\x3a\x5e\xef",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(181) / L(16)
        "\xd6\x87\xdc\xea\xf4\xe6\xfb\x84\xea\xfc\xfb\xe1\xf0\xf2\xf0\xe7\xb5",
        // "" / M(None) / S(0) / L(0)
        "\x14\xfb\xd8\xe6\x6e\xb1\xe9\x2d\x52\x43\x79\xeb\xbc\x8a\x3e\x2d\xb6\xd2\xcd\xc0\x78\xc7\xaf\x23\x93\x56\xc0\x21\x33\x53\x34\x5d",
        // "PKCS7_get0_signers" / M(Xor4) / S(249) / L(18)
        "\x2b\x30\x38\x28\x4c\x24\x1c\x1e\x0f\x4b\x24\x08\x12\x1c\x15\x1e\x09\x08\x7b",
        // "CFRelease" / M(Rot) / S(232) / L(9)
        "\x2b\x2e\x3a\x4d\x54\x4d\x49\x5b\x4d\xe8\x77\x8a\xaf\x5e\x91\xae",
        // "" / M(None) / S(0) / L(0)
        "\x86\x5d\x13\xd3\x29\x0c\xb3\xee\x14\xbf\x68\xae\x70\x4e\x2c\x49\x68\x70\xeb\xd2\x2a\x8a\xd8\x6b\x15\xcc\x0b\x89\x4b\xb9\x5f\x32",
        // "alloc" / M(Xor4) / S(158) / L(5)
        "\x81\x8c\x8c\x8f\x83\xe0\x97\xff\x8e\xb1\x81\x9f\x1c\x1b\xe5\x48",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(14) / L(35)
        "\x71\x74\x76\x53\x46\x57\x74\x5d\x40\x5f\x53\x46\x46\x57\x40\x71\x40\x57\x53\x46\x57\x76\x53\x46\x57\x74\x40\x5d\x5f\x61\x46\x40\x5b\x5c\x55\x32",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(200) / L(36)
        "\xae\xab\xaf\x98\x83\x89\x81\x88\xaa\x88\x99\xbb\x8c\x81\x98\x88\xab\x82\x9f\xa4\x83\x8b\x82\xa9\x84\x8e\x99\x84\x82\x83\x8c\x9f\x94\xa6\x88\x94\xed",
        // "EVP_DigestInit" / M(Xor1) / S(223) / L(14)
        "\x9a\x89\x8f\x80\x9b\xb6\xb8\xba\xac\xab\x96\xb1\xb6\xab\xdf\xc0",
        // "" / M(None) / S(0) / L(0)
        "\x2a\xe3\x43\x0d\x0f\x42\x4e\x29\x3f\x9b\x03\x32\xae\x84\xfb\xf1\x67\xd5\xd0\x4a\xac\x64\x0b\x91\x2f\x5b\x9b\xd1\x70\x57\xbe\x64",
        // "" / M(None) / S(0) / L(0)
        "\xd3\xfa\x1b\x15\x2a\xe3\xce\x21\x3d\x27\xe5\x45\xa3\xec\xb2\xa7\x0e\x2d\xd7\xac\x2a\xb2\x68\x62\xe1\x6d\x5f\xca\x40\x9a\x90\xf9",
        // "" / M(None) / S(0) / L(0)
        "\x2b\x55\x3a\xf6\x32\x52\x02\x61\xeb\x4d\xaf\xfd\x01\x65\xb0\x47\xe1\x6f\x0c\x14\xe5\x30\x26\x74\x95\x86\xd6\xec\xe2\xd3\xfb\xfb",
        // "CFStringCompare" / M(Xor3) / S(60) / L(15)
        "\x0f\x0a\x1f\x38\x3e\x25\x22\x2b\x0f\x23\x21\x3c\x2d\x3e\x29\x4c",
        // "EVP_DigestInit" / M(Xor4) / S(52) / L(14)
        "\x05\x16\x10\x1f\x04\x29\x27\x25\x33\x34\x09\x2e\x29\x34\x40\xb7",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xfd\xc5\x2e\x84\x09\x80\xcb\x62\x89\xc0\x56\xd1\x85\x00\x1d\x6f\x68\xfd\x29\xc4\x4c\x85\xee\xbe\x67\x33\x2b\x98\xd1\x74\x21",
        // "EVP_DigestUpdate" / M(Xor4) / S(244) / L(16)
        "\x71\x62\x64\x6b\x70\x5d\x53\x51\x47\x40\x61\x44\x50\x55\x40\x51\x34",
        // "" / M(None) / S(0) / L(0)
        "\xfc\x6e\xa5\xd2\xfa\x0e\x15\x9f\xec\x5f\xe6\x0b\x6a\x59\x16\x55\xf5\x3c\x2f\xfc\xa1\xcd\x14\x50\xde\x32\x4b\xab\x44\xac\xae\xae",
        // "CFEqual" / M(Rot) / S(249) / L(7)
        "\x3c\x3f\x3e\x6a\x6e\x5a\x65\xf9\x0d\x09\xd7\x52\xaa\xe9\xab\xb6",
        // "getUUIDBytes:" / M(Rot) / S(168) / L(13)
        "\x0f\x0d\x1c\xfd\xfd\xf1\xec\xea\x21\x1c\x0d\x1b\xe2\xa8\xcf\x29",
        // "OpenSSL_add_all_digests" / M(Xor3) / S(174) / L(23)
        "\x81\xbe\xab\xa0\x9d\x9d\x82\x91\xaf\xaa\xaa\x91\xaf\xa2\xa2\x91\xaa\xa7\xa9\xab\xbd\xba\xbd\xce\x3c\xa1\xf6\xf9\x16\x41\xe4\x16",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(232) / L(59)
        "\x96\x91\x9a\x91\xc5\x9a\x95\xc2\x9a\x96\x96\x9a\x92\xc3\x9a\x95\x99\x9a\x93\xc1\x9a\x90\x98\x9a\xc6\xc6\x9a\x95\x98\x9a\xc4\x91\x9a\x94\xc1\x9a\xc5\x92\x9a\x92\x94\x9a\x95\x92\x9a\xc4\x91\x9a\x99\x98\x9a\xc4\xc6\x9a\x96\xc3\x9a\x96\x90\xa0\xb5\xc5\x89\x1f\xfe\xd1\xb5\x6f",
        // "" / M(None) / S(0) / L(0)
        "\xed\x18\x03\x19\x92\x7d\xa4\x99\xec\x26\x43\xbb\xd4\x22\x13\xc6\x3b\xa8\xf1\xc0\xe1\xc8\xb9\xcb\x96\x22\xf7\xd5\x50\xa0\xd4\x86",
        // "kCFBundleIdentifierKey" / M(Xor3) / S(99) / L(22)
        "\x11\x39\x3c\x38\x0f\x14\x1e\x16\x1f\x33\x1e\x1f\x14\x0e\x13\x1c\x13\x1f\x08\x31\x1f\x03\x7a",
        // "objc_lookUpClass" / M(Xor2) / S(63) / L(16)
        "\x41\x4c\x44\x4d\x71\x42\x41\x41\x45\x7b\x5e\x6d\x42\x4f\x5d\x5d\x2e",
        // "currentDevice" / M(Xor2) / S(242) / L(13)
        "\x81\x97\x90\x90\x87\x8c\x96\xa6\x87\x94\x8b\x81\x87\xe2\xce\x29",
        // "PKCS7_free" / M(Rot) / S(32) / L(10)
        "\x70\x6b\x63\x73\x57\x7f\x86\x92\x85\x85\x20\x0d\x40\xca\x02\x79",
        // "" / M(None) / S(0) / L(0)
        "\xf2\xaf\x9e\xf1\x2e\x84\x2b\x16\x5b\xf3\x5e\x32\xcd\x3a\xe4\x2a\xd4\x7f\x97\xb7\x4b\x97\x37\xc1\xc0\xa9\x04\x6f\x45\x60\xe2\x27",
        // "ASN1_OBJECT_free" / M(Xor3) / S(65) / L(16)
        "\x13\x01\x1c\x63\x0d\x1d\x10\x18\x17\x11\x06\x0d\x34\x20\x37\x37\x52",
        // "CFDataCreate" / M(Rot) / S(60) / L(12)
        "\x7f\x82\x80\x9d\xb0\x9d\x7f\xae\xa1\x9d\xb0\xa1\x3c\xbe\xfe\xa0",
        // "CFReadStreamRead" / M(Xor3) / S(101) / L(16)
        "\x35\x30\x24\x13\x17\x12\x25\x02\x04\x13\x17\x1b\x24\x13\x17\x12\x76",
        // "CC_SHA1" / M(Xor2) / S(212) / L(7)
        "\x87\x87\x9b\x97\x8c\x85\xf5\xc4\x67\x25\xab\x2a\x1f\x1f\x4e\xe2",
        // "%02X" / M(Xor3) / S(14) / L(4)
        "\x3b\x2e\x2c\x46\x1e\x4f\x7d\x8f\xe8\x66\xef\x49\x9f\x7f\x17\xab",
        // "X509_free" / M(Xor4) / S(236) / L(9)
        "\x98\xf5\xf0\xf9\x9f\xa6\xb2\xa5\xa5\xc0\x36\xd5\x4b\x9e\x22\xda",
        // "exit" / M(Xor4) / S(164) / L(4)
        "\x25\x38\x29\x34\x40\xc6\x05\x86\xa3\xad\xc4\x05\xe0\xc0\x30\xe4",
        // "EVP_DigestFinal" / M(Rot) / S(184) / L(15)
        "\xfd\x0e\x08\x17\xfc\x21\x1f\x1d\x2b\x2c\xfe\x21\x26\x19\x24\xb8",
        // "" / M(None) / S(0) / L(0)
        "\x10\xcd\xc6\xbe\xcd\x3c\xa3\x9c\xa6\xc0\xfe\x1e\x7a\x62\xc8\x9d\xd0\xdf\x64\xaa\x2d\xbd\x8c\x19\xe9\x47\x4f\xe1\x60\x17\x2d\xbb",
        // "" / M(None) / S(0) / L(0)
        "\x15\xea\x33\xa5\xf3\x8d\x0e\x58\x58\x33\x12\x53\x8d\xea\xb6\x4b\x92\x29\xb7\x23\x2f\xf6\xda\x10\x46\x3b\x39\x55\x35\x76\xb4\xde",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(237) / L(59)
        "\x23\x1e\x27\x1e\x52\x27\x22\x4f\x27\x23\x23\x27\x1f\x50\x27\x22\x26\x27\x20\x4e\x27\x1d\x25\x27\x53\x53\x27\x22\x25\x27\x51\x1e\x27\x21\x4e\x27\x52\x1f\x27\x1f\x21\x27\x22\x1f\x27\x51\x1e\x27\x26\x25\x27\x51\x53\x27\x23\x50\x27\x23\x1d\xed\x66\x85\x25\x3f\x8d\x45\xd6\xd6",
        // "sel_registerName" / M(Xor3) / S(48) / L(16)
        "\x32\x24\x2d\x1e\x33\x24\x26\x28\x32\x35\x24\x33\x0f\x20\x2c\x24\x41",
        // "objc_lookUpClass" / M(Xor2) / S(162) / L(16)
        "\xdc\xd1\xd9\xd0\xec\xdf\xdc\xdc\xd8\xe6\xc3\xf0\xdf\xd2\xc0\xc0\xb3",
        // "" / M(None) / S(0) / L(0)
        "\x64\xe0\xd4\xc9\x00\x08\xba\x2d\x1a\xd3\xca\xbd\xb5\xad\x97\x8e\x20\x14\x85\x2e\x3f\xaf\x18\x1e\x8b\x01\xad\xb3\x8b\x35\xc7\x96",
        // "" / M(None) / S(0) / L(0)
        "\xe8\x59\xf6\x6f\x2d\xc5\x85\xa6\x11\x93\x5e\x84\xc8\xc6\x51\x1a\x5d\xbb\x62\xa1\xe6\xd8\x0f\xc5\x45\x4e\x2d\x8f\x61\x1c\xdb\x7e",
        // "CFReadStreamClose" / M(Xor1) / S(203) / L(17)
        "\x88\x8d\x99\xae\xaa\xaf\x98\xbf\xb9\xae\xaa\xa6\x88\xa7\xa4\xb8\xae\xcb",
        // "d2i_PKCS7_bio" / M(Xor1) / S(46) / L(13)
        "\x4a\x1c\x47\x71\x7e\x65\x6d\x7d\x19\x71\x4c\x47\x41\x2e\xae\x4c",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(138) / L(24)
        "\xe8\xed\xea\xc9\xd8\xc4\xc7\xde\xdf\xce\xff\xc2\xc6\xce\xec\xce\xdf\xe8\xde\xd9\xd9\xce\xc5\xdf\xab\xaa\x24\x35\x04\x6c\x5f\xcc\x32",
        // "/usr/lib/libobjc.dylib" / M(Xor1) / S(40) / L(22)
        "\x07\x5d\x5b\x5a\x07\x44\x41\x4a\x07\x44\x41\x4a\x47\x4a\x42\x4b\x06\x4c\x51\x44\x41\x4a\x28",
        // "setDelegate:" / M(Xor1) / S(201) / L(12)
        "\xba\xac\xbd\x8d\xac\xa5\xac\xae\xa8\xbd\xac\xf3\xc9\xd5\x3a\x40",
        // "CFBundleGetMainBundle" / M(Xor2) / S(40) / L(21)
        "\x7d\x78\x7c\x4b\x50\x5a\x52\x5b\x79\x5b\x4a\x73\x5f\x57\x50\x7c\x4b\x50\x5a\x52\x5b\x3e",
        // "" / M(None) / S(0) / L(0)
        "\xd7\xd7\xa9\xb4\x8e\xa4\x23\x9e\xbc\x06\x35\x0e\x0c\xc2\x37\x59\x96\x2c\x90\x95\x75\xb2\x77\x7e\x04\x96\xe7\x6c\x54\x36\x2c\x56",
        // "CFDateFormatterCreate" / M(Xor2) / S(59) / L(21)
        "\x6e\x6b\x69\x4c\x59\x48\x6b\x42\x5f\x40\x4c\x59\x59\x48\x5f\x6e\x5f\x48\x4c\x59\x48\x2d",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(105) / L(66)
        "\x54\x28\x02\x08\x0f\x1e\x16\x54\x37\x12\x19\x09\x1a\x09\x02\x54\x3d\x09\x1a\x16\x1e\x0c\x14\x09\x10\x08\x54\x38\x14\x09\x1e\x3d\x14\x0e\x15\x1f\x1a\x0f\x12\x14\x15\x55\x1d\x09\x1a\x16\x1e\x0c\x14\x09\x10\x54\x38\x14\x09\x1e\x3d\x14\x0e\x15\x1f\x1a\x0f\x12\x14\x15\x7b",
        // "init" / M(Xor3) / S(140) / L(4)
        "\xf5\xf2\xf5\xe8\x9c\x07\x3c\xa1\xaf\x6a\x69\x6f\x1b\xbc\x70\x1f",
        // "" / M(None) / S(0) / L(0)
        "\xf6\x99\x66\x74\xbb\x60\x70\x34\xe2\xdb\x65\xbd\xd2\xa7\xae\x31\xce\x50\x5b\x02\xc7\x23\xbc\xbb\x6e\xfe\xda\xed\xa8\xee\x7d\x79",
        // "PKCS7_verify" / M(Rot) / S(66) / L(12)
        "\x92\x8d\x85\x95\x79\xa1\xb8\xa7\xb4\xab\xa8\xbb\x42\x8a\x04\x6a",
        // "strncmp" / M(Xor1) / S(228) / L(7)
        "\x97\x90\x96\x8a\x87\x89\x94\xe4\xb8\x02\x59\xd5\xeb\xd4\xb6\x35",
        // "" / M(None) / S(0) / L(0)
        "\x32\x9b\x2e\x70\x91\xa1\x86\x15\x4c\xf8\x8d\x25\xf8\x67\x2a\xf4\xcf\x90\x7e\x66\x34\x23\xa9\x4e\x04\xd6\x07\x9b\x21\x18\x8e\x32",
        // "RTLD_MAIN_ONLY" / M(Xor2) / S(36) / L(14)
        "\x66\x60\x78\x70\x6b\x79\x75\x7d\x7a\x6b\x7b\x7a\x78\x6d\x34\x2f",
        // "SHA1" / M(Rot) / S(188) / L(4)
        "\x0f\x04\xfd\xed\xbc\xa8\x4b\x8f\xd3\x20\x3a\x7b\x5e\xab\x47\x70",
        // "." / M(Rot) / S(222) / L(1)
        "\x0c\xde\xcc\x26\x64\xed\x06\x45\xc0\xa0\x01\x59\xa9\xd9\xd8\x71",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(141) / L(24)
        "\xce\xcb\xc9\xec\xf9\xe8\xcb\xe2\xff\xe0\xec\xf9\xf9\xe8\xff\xde\xe8\xf9\xcb\xe2\xff\xe0\xec\xf9\x8d\x68\xc1\x82\x11\x5c\x3f\x91\xe0",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor4) / S(139) / L(40)
        "\xf8\xf4\xf6\xb5\xf2\xf5\xef\xfa\xf5\xfc\xf2\xf9\xf7\xfe\xe8\xf4\xfd\xef\xec\xfa\xe9\xfe\xb5\xf6\xfe\xf5\xe8\xf7\xfa\xf8\xe9\xf4\xe8\xe8\xfe\xe8\xef\xfa\xef\xe8\x9b\x0b\x49\x5f\x38\x6a\xff\xc7\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x88\x92\xa9\xd4\x66\xb0\x76\xc3\x90\x0b\x79\xd7\xa2\xa9\x12\x42\x21\x7c\xb9\x93\xd8\xfd\x9c\xa2\xca\x37\x11\xfa\x92\xda\xd2\x16",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(13) / L(36)
        "\x71\x74\x70\x47\x5c\x56\x5e\x57\x75\x57\x46\x64\x53\x5e\x47\x57\x74\x5d\x40\x7b\x5c\x54\x5d\x76\x5b\x51\x46\x5b\x5d\x5c\x53\x40\x4b\x79\x57\x4b\x32",
        // "CFDateCreate" / M(Xor2) / S(129) / L(12)
        "\xd2\xd7\xd5\xf0\xe5\xf4\xd2\xe3\xf4\xf0\xe5\xf4\x91\xc2\x48\x4d",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(199) / L(24)
        "\xab\xae\xac\x89\x9c\x8d\xae\x87\x9a\x85\x89\x9c\x9c\x8d\x9a\xbb\x8d\x9c\xae\x87\x9a\x85\x89\x9c\xe8\x6e\x20\x3e\x5a\x20\xec\x5a\x88",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(41) / L(40)
        "\x6c\x6b\x6b\x3f\x6f\x38\x6c\x6c\x68\x39\x6f\x63\x69\x3b\x6a\x62\x3c\x3c\x6f\x62\x3e\x6b\x6e\x3b\x3f\x68\x68\x6e\x6f\x68\x3e\x6b\x63\x62\x3e\x3c\x6c\x39\x6c\x6a\x5a\x01\x75\x10\xeb\xb0\xf3\xf3\xb7",
        // "%02X" / M(Xor3) / S(206) / L(4)
        "\xfb\xee\xec\x86\xde\xa3\xd5\xe0\x8f\xba\x71\x8a\x31\x76\x1a\x6f",
        // "CFReadStreamOpen" / M(Xor2) / S(242) / L(16)
        "\xa0\xa5\xb1\x86\x82\x87\xb0\x97\x91\x86\x82\x8e\xac\x93\x86\x8d\xe3",
        // "kCFTypeArrayCallBacks" / M(Xor3) / S(68) / L(21)
        "\x31\x19\x1c\x0e\x23\x2a\x3f\x1b\x28\x28\x3b\x23\x19\x3b\x36\x36\x18\x3b\x39\x31\x29\x5a",
        // "CFDateCompare" / M(Xor1) / S(143) / L(13)
        "\xcc\xc9\xcb\xee\xfb\xea\xcc\xe0\xe2\xff\xee\xfd\xea\x8f\x77\xb1",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x2e\x65\x5e\x21\x82\x36\x09\x8e\xac\x5a\x94\x00\xd3\x3e\x07\xda\x57\x62\xdf\x68\x1f\xbf\x86\x8f\xd5\xdd\xcb\x33\x6c\xad\x3f",
        // "" / M(None) / S(0) / L(0)
        "\x0b\x52\x87\xd3\x11\x78\x0a\x3a\x51\x25\x6a\x54\xcf\x81\x91\x4a\x33\xa1\xb5\x4b\x95\xae\xa3\xa5\xbd\x33\x5f\x40\x00\x6b\x4c\x3a",
        // "EVP_get_digestbyname" / M(Xor1) / S(195) / L(20)
        "\x86\x95\x93\x9c\xa4\xa6\xb7\x9c\xa7\xaa\xa4\xa6\xb0\xb7\xa1\xba\xad\xa2\xae\xa6\xc3",
        // "" / M(None) / S(0) / L(0)
        "\xa6\x8e\xbc\x97\x0a\x21\xec\xeb\x3c\xa1\xf6\xf9\x16\x41\xe4\x16\xc7\x60\xa3\x19\xd4\xb4\xfe\xa1\x97\x7e\x1e\x93\xb2\x4e\xfc\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x47\x21\xb4\x1f\xd1\xc4\x25\x6f\x13\x8f\x9a\x1d\x18\xdf\xf4\xfe\x17\xdb\x0a\xc0\xcc\x7a\x3c\xe7\x06\x43\xdf\x5c\x87\x74\xe0",
        // "" / M(None) / S(0) / L(0)
        "\x40\x29\xba\x34\xe0\x0d\xfb\x67\xba\x64\x44\x06\xc9\x91\xbf\x45\xf9\x2b\x91\x5c\x80\x17\x79\xd4\xc9\x12\xb5\x69\x2c\x97\x20\xce",
        // "EVP_DigestInit" / M(Xor2) / S(220) / L(14)
        "\x89\x9a\x9c\x93\x88\xa5\xab\xa9\xbf\xb8\x85\xa2\xa5\xb8\xcc\x32",
        // "SKReceiptRefreshRequest" / M(Xor3) / S(210) / L(23)
        "\xa1\xb9\xa0\x97\x91\x97\x9b\x82\x86\xa0\x97\x94\x80\x97\x81\x9a\xa0\x97\x83\x87\x97\x81\x86\xf2\x7e\x92\x8d\x56\xb8\xd7\x78\x5a",
        // "CFReadStreamCreateWithFile" / M(Xor1) / S(214) / L(26)
        "\x95\x90\x84\xb3\xb7\xb2\x85\xa2\xa4\xb3\xb7\xbb\x95\xa4\xb3\xb7\xa2\xb3\x81\xbf\xa2\xbe\x90\xbf\xba\xb3\xd6\x65\x43\x91\x1f\x99\xd4\x0c\x29",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(157) / L(24)
        "\x91\xcb\xcd\xcc\x91\xd2\xd7\xdc\x91\xd2\xd7\xdc\xed\xc7\xcd\xca\xdb\xd3\x90\xda\xc7\xd2\xd7\xdc\xbe\xb2\x34\x05\x2f\x98\x2a\xca\x89",
        // "" / M(None) / S(0) / L(0)
        "\xc3\x79\x9d\x28\xd8\x4b\x16\xa8\x13\x98\xed\xb3\x0e\xa8\x4b\x8f\xd3\x20\x3a\x7b\x5e\xab\x47\x70\x23\x54\x34\xf5\xa2\xd1\x0c\x75",
        // "CFDictionaryGetValue" / M(Xor1) / S(194) / L(20)
        "\x81\x84\x86\xab\xa1\xb6\xab\xad\xac\xa3\xb0\xbb\x85\xa7\xb6\x94\xa3\xae\xb7\xa7\xc2",
        // "CC_SHA1_Final" / M(Xor2) / S(170) / L(13)
        "\xf9\xf9\xe5\xe9\xf2\xfb\x8b\xe5\xfc\xd3\xd4\xdb\xd6\xba\xc9\xd0",
        // "CFBundleGetIdentifier" / M(Xor1) / S(138) / L(21)
        "\xc9\xcc\xc8\xff\xe4\xee\xe6\xef\xcd\xef\xfe\xc3\xee\xef\xe4\xfe\xe3\xec\xe3\xef\xf8\x8a",
        // "PKCS7_verify" / M(Rot) / S(87) / L(12)
        "\xa7\xa2\x9a\xaa\x8e\xb6\xcd\xbc\xc9\xc0\xbd\xd0\x57\x42\xbe\xe8",
        // "CC_SHA1_Update" / M(Rot) / S(211) / L(14)
        "\x16\x16\x32\x26\x1b\x14\x04\x32\x28\x43\x37\x34\x47\x38\xd3\x83",
        // "" / M(None) / S(0) / L(0)
        "\x0b\xb1\xae\x99\x51\x0c\xd8\x56\xab\x57\xc7\x5e\xb1\xc5\x0f\xf6\x0a\xc7\xbd\x72\xbb\x6e\x68\x67\x47\x27\xb8\x09\xb6\xe8\xca\x4f",
        // "" / M(None) / S(0) / L(0)
        "\x53\x9e\x6b\xf0\xde\xba\xe9\xca\x47\xbc\x24\xbe\x8b\xd8\x00\x0c\xe2\xb8\x33\x0c\x7a\x23\xa6\x1c\xe4\xf7\x36\xff\xcb\xe5\x7c\x26",
        // "" / M(None) / S(0) / L(0)
        "\xa6\x11\xc2\x1d\xd7\xcd\x8f\xdb\xe8\x73\x6d\x52\x4a\x26\xed\x34\x77\xe9\x4e\x04\x1a\x81\x9d\x35\x56\x30\xfa\x25\xd2\xf2\x65\xeb",
        // "EVP_MD_CTX_init" / M(Xor4) / S(216) / L(15)
        "\xc5\xd6\xd0\xdf\xcd\xc4\xdf\xc3\xd4\xd8\xdf\xe9\xee\xe9\xf4\x80",
        // "X509_STORE_new" / M(Xor1) / S(101) / L(14)
        "\x3d\x50\x55\x5c\x3a\x36\x31\x2a\x37\x20\x3a\x0b\x00\x12\x65\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x66\x98\x0e\x5c\xec\xbe\xdd\x2f\x62\xc0\xc4\x59\x74\x63\xbe\xef\x5a\x33\x03\x5e\x36\x32\x45\x20\x59\x0a\x7d\x35\x6b\x26\x1f\xf6",
        // "CFDataCreateMutable" / M(Xor3) / S(241) / L(19)
        "\x46\x43\x41\x64\x71\x64\x46\x77\x60\x64\x71\x60\x48\x70\x71\x64\x67\x69\x60\x05",
        // "start" / M(Rot) / S(198) / L(5)
        "\x39\x3a\x27\x38\x3a\xc6\x17\x2d\x3a\xab\xcb\xdd\x51\x9b\x70\x88",
        // "" / M(None) / S(0) / L(0)
        "\x61\x94\xee\x02\x17\x39\xb8\x17\xd6\xd6\xe6\x8a\x83\xd3\xfc\x77\xd6\x05\x50\xb3\xec\x31\x2b\x7e\x11\xc5\xda\x40\x81\xe3\xff\x8e",
        // "appStoreReceiptURL" / M(Xor2) / S(2) / L(18)
        "\x70\x61\x61\x42\x65\x7e\x63\x74\x43\x74\x72\x74\x78\x61\x65\x44\x43\x5d\x11",
        // "CFArrayGetValueAtIndex" / M(Rot) / S(125) / L(22)
        "\xc0\xc3\xbe\xef\xef\xde\xf6\xc4\xe2\xf1\xd3\xde\xe9\xf2\xe2\xbe\xf1\xc6\xeb\xe1\xe2\xf5\x7d",
        // "" / M(None) / S(0) / L(0)
        "\xaf\x3c\x9d\x90\x3b\x66\x65\xba\x5d\xd5\x60\xd7\x7f\xaa\xae\xc5\x13\xd0\xc9\x32\x51\x91\x21\x73\xf4\x27\xe9\xfb\xf2\xc8\x97\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x30\xc2\xde\x50\xbe\xd9\x2d\xfa\x23\x42\xba\x6a\x9d\x25\xfd\x12\xf9\x17\x73\xbe\xc9\x78\xa2\x17\xdc\xd5\xae\x8b\x89\x0a\xb7\xa9",
        // "" / M(None) / S(0) / L(0)
        "\x27\x4f\x00\xaf\xe7\x52\xe6\x4d\xb1\x76\xf0\x61\x9c\xaf\x03\xa4\xe2\xed\x97\x61\x23\xec\xa3\x04\x2f\x23\xe1\x64\x22\x2c\xb8\xa2",
        // "PKCS7_free" / M(Xor2) / S(68) / L(10)
        "\x04\x1f\x17\x07\x63\x0b\x32\x26\x31\x31\x54\xd2\xfe\xf7\xc3\x7c",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(43) / L(40)
        "\x61\x5c\x5c\x90\x60\x8d\x61\x61\x5d\x8e\x60\x64\x5e\x8c\x5b\x63\x91\x91\x60\x63\x8f\x5c\x5f\x8c\x90\x5d\x5d\x5f\x60\x5d\x8f\x5c\x64\x63\x8f\x91\x61\x8e\x61\x5b\x2b\x86\x34\xb1\x75\x7d\x2b\xea\xbb",
        // "BIO_free" / M(Rot) / S(231) / L(8)
        "\x29\x30\x36\x46\x4d\x59\x4c\x4c\xe7\x1d\xb9\xc7\x18\x44\xb6\xc3",
        // "1.2.840.113635.100.6.11.1" / M(Xor2) / S(94) / L(25)
        "\x4d\x52\x4e\x52\x44\x48\x4c\x52\x4d\x4d\x4f\x4a\x4f\x49\x52\x4d\x4c\x4c\x52\x4a\x52\x4d\x4d\x52\x4d\x7c\xa6\x23\x6e\x7c\xf7\x38\x89\xd9",
        // "kCFTypeArrayCallBacks" / M(Xor2) / S(208) / L(21)
        "\xad\x85\x80\x92\xbf\xb6\xa3\x87\xb4\xb4\xa7\xbf\x85\xa7\xaa\xaa\x84\xa7\xa5\xad\xb5\xc6",
        // "sha1" / M(Xor2) / S(77) / L(4)
        "\x2e\x35\x3c\x6c\x5d\x11\x0a\x57\x59\x04\xd2\x37\x49\x5f\xd3\x08",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(112) / L(29)
        "\xcb\xe3\xe6\xf4\xd9\xd0\xc5\xe4\xc9\xc3\xd4\xc9\xcf\xce\xc1\xd2\xd9\xeb\xc5\xd9\xe3\xc1\xcc\xcc\xe2\xc1\xc3\xcb\xd3\xa0\x5b\x02\xc7\x23\xbc\xbb\xed\xda",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(22) / L(24)
        "\x74\x71\x75\x42\x59\x53\x5b\x52\x62\x59\x5b\x58\x56\x53\x72\x4f\x52\x54\x42\x43\x56\x55\x5b\x52\x37\x77\x35\xca\x78\xcb\xd0\x2b\x5b",
        // "" / M(None) / S(0) / L(0)
        "\xbe\xe8\x51\x0b\x6b\xc4\x17\x16\x81\x75\x78\xe6\x9d\x9a\x19\x4f\x6d\x97\xa8\x31\x48\x5a\xf6\xd1\x6d\x43\x61\xb4\xe9\x0b\xe3\xad",
        // "%02x" / M(Xor3) / S(35) / L(4)
        "\x16\x03\x01\x4b\x33\x4c\xc0\xdf\xd7\x60\x10\x0b\xf0\xb4\x18\x76",
        // "CFDateFormatterSetProperty" / M(Xor1) / S(17) / L(26)
        "\x52\x57\x55\x70\x65\x74\x57\x7e\x63\x7c\x70\x65\x65\x74\x63\x42\x74\x65\x41\x63\x7e\x61\x74\x63\x65\x68\x11\x19\xd1\x34\xaf\xcb\x8a\x19\x14",
        // "SHA1_Update" / M(Xor2) / S(250) / L(11)
        "\xb9\xa2\xab\xdb\xb5\xbf\x9a\x8e\x8b\x9e\x8f\xea\xde\xba\xe9\xca",
        // "CFBundleShortVersionString" / M(Xor3) / S(252) / L(26)
        "\x5c\x59\x5d\x6a\x71\x7b\x73\x7a\x4c\x77\x70\x6d\x6b\x49\x7a\x6d\x6c\x76\x70\x71\x4c\x6b\x6d\x76\x71\x78\x1f\xc0\xfc\xca\xe4\x4a\x53\x5e\xbb",
        // "CFNumberCreate" / M(Xor2) / S(183) / L(14)
        "\xe4\xe1\xe9\xd2\xca\xc5\xc2\xd5\xe4\xd5\xc2\xc6\xd3\xc2\xa7\xf4",
        // "" / M(None) / S(0) / L(0)
        "\xb0\x87\x75\x2f\xb9\xf2\x1c\x84\x82\xc3\x06\xdf\xc6\x9b\x9b\xe6\x0d\x7c\x76\x7b\x75\x13\xed\xad\x4b\xb7\xb9\xe8\x84\x3e\x01\xd8",
        // "objc_getClass" / M(Xor3) / S(177) / L(13)
        "\xae\xa3\xab\xa2\x9e\xa6\xa4\xb5\x82\xad\xa0\xb2\xb2\xc1\x61\x35",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(68) / L(19)
        "\x1c\x71\x74\x7d\x1b\x23\x21\x30\x1b\x21\x3c\x30\x1b\x26\x3d\x1b\x0b\x06\x0e\x44",
        // "init" / M(Xor2) / S(234) / L(4)
        "\x93\x94\x93\x8e\xfa\xb6\xb9\xbe\xa7\xf0\x0a\xf6\xe3\x3d\x72\x5a",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor4) / S(219) / L(29)
        "\xe9\xc1\xc4\xd6\xfb\xf2\xe7\xc6\xeb\xe1\xf6\xeb\xed\xec\xe3\xf0\xfb\xc9\xe7\xfb\xc1\xe3\xee\xee\xc0\xe3\xe1\xe9\xf1\x82\x99\x76\x00\xba\x8c\x65\x6a\xe0",
        // "strlen" / M(Xor1) / S(173) / L(6)
        "\xde\xd9\xdf\xc1\xc8\xc3\xad\xeb\x66\x98\x0e\x5c\xec\xbe\xdd\x2f",
        // "mainBundle" / M(Xor4) / S(249) / L(10)
        "\xfd\xf1\xf9\xfe\xd2\xe5\xfe\xf4\xfc\xf5\x90\xb7\x86\x35\xd8\x2d",
        // "getUUIDBytes:" / M(Xor2) / S(133) / L(13)
        "\xf2\xf0\xe1\xc0\xc0\xdc\xd1\xd7\xec\xe1\xf0\xe6\xaf\x95\x89\x26",
        // "BIO_write" / M(Xor3) / S(168) / L(9)
        "\xfa\xf1\xf7\xe7\xcf\xca\xd1\xcc\xdd\xb8\x67\xc6\x43\xab\x25\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x0d\xac\xe8\x37\x94\x71\x58\x78\x9c\x2b\xcc\x26\x64\xed\x06\x45\xc0\xa0\x01\x59\xa9\xd9\xd8\x71\x0a\x3f\x0a\x63\xaa\x9a\x7d\xb1",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(58) / L(25)
        "\x04\x69\x6c\x65\x03\x12\x1d\x11\x19\x03\x3b\x39\x28\x03\x28\x39\x24\x28\x03\x3e\x25\x03\x12\x15\x18\x5c\xcb\x5a\x03\xd4\x03\x0c\x23\x2c",
        // "CFDataCreateMutable" / M(Rot) / S(225) / L(19)
        "\x24\x27\x25\x42\x55\x42\x24\x53\x46\x42\x55\x46\x2e\x56\x55\x42\x43\x4d\x46\xe1",
        // "CFStringCreateWithBytes" / M(Xor2) / S(246) / L(23)
        "\x95\x90\x85\xa2\xa4\xbf\xb8\xb1\x95\xa4\xb3\xb7\xa2\xb3\x81\xbf\xa2\xbe\x94\xaf\xa2\xb3\xa5\xd6\x72\xb9\x65\x93\x6c\x25\x75\xde",
        // "appStoreReceiptURL" / M(Xor2) / S(175) / L(18)
        "\xdd\xcc\xcc\xef\xc8\xd3\xce\xd9\xee\xd9\xdf\xd9\xd5\xcc\xc8\xe9\xee\xf0\xbc",
        // "start" / M(Xor4) / S(91) / L(5)
        "\xc3\xc4\xd1\xc2\xc4\xb0\xb4\x7c\xda\x73\x94\xc0\x63\x45\x0c\x31",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(78) / L(22)
        "\x32\x1a\x1f\x1b\x2c\x37\x3d\x35\x3c\x10\x3d\x3c\x37\x2d\x30\x3f\x30\x3c\x2b\x12\x3c\x20\x59",
        // "CFNumberCreate" / M(Xor4) / S(204) / L(14)
        "\x83\x86\x8e\xb5\xad\xa2\xa5\xb2\x83\xb2\xa5\xa1\xb4\xa5\xc0\x81",
        // "" / M(None) / S(0) / L(0)
        "\xb1\x64\x45\x41\x2d\xe5\xc5\x12\xff\x65\x39\xfc\x13\xbe\x1a\x45\x5b\x75\xf7\x46\x55\x62\x15\xc5\x53\xbb\x56\x90\x06\xc8\x9b\xdb",
        // "" / M(None) / S(0) / L(0)
        "\x85\x4e\x3f\x6b\x1b\x0c\x6a\x2f\x85\x71\xda\xb1\xc1\xbb\xf7\xd5\xbe\xcc\x82\x31\x2f\xb6\x25\x99\xe0\x6d\x3e\x32\x17\x31\xa3\x99",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(30) / L(31)
        "\x55\x7d\x78\x6a\x47\x4e\x5b\x7a\x57\x5d\x4a\x57\x51\x50\x5f\x4c\x47\x68\x5f\x52\x4b\x5b\x7d\x5f\x52\x52\x7c\x5f\x5d\x55\x4d\x3e",
        // "ASN1_get_object" / M(Xor3) / S(164) / L(15)
        "\xf5\xe7\xfa\x85\xeb\xd3\xd1\xc0\xeb\xdb\xd6\xde\xd1\xd7\xc0\xb4",
        // "OpenSSL_add_all_digests" / M(Xor4) / S(153) / L(23)
        "\x6f\x50\x45\x4e\x73\x73\x6c\x7f\x41\x44\x44\x7f\x41\x4c\x4c\x7f\x44\x49\x47\x45\x53\x54\x53\x20\x8e\x35\xab\x8f\x43\x17\xe0\x50",
        // "CFEqual" / M(Xor4) / S(84) / L(7)
        "\x03\x06\x05\x31\x35\x21\x2c\x40\x0b\xad\xfd\xc8\x40\x85\xf2\x51",
        // "" / M(None) / S(0) / L(0)
        "\x59\x78\x7a\x53\xfe\xac\x91\x87\xa0\x06\xf3\x16\x7c\xc3\x24\xad\xb3\x38\xe8\x80\x1e\xfd\xaa\xef\x80\x39\x95\xc8\x09\x75\x59\x01",
        // "CFBundleVersion" / M(Rot) / S(70) / L(15)
        "\x89\x8c\x88\xbb\xb4\xaa\xb2\xab\x9c\xab\xb8\xb9\xaf\xb5\xb4\x46",
        // "%02x:" / M(Xor2) / S(10) / L(5)
        "\x3f\x2a\x28\x62\x20\x1a\x9b\xdb\x85\x4e\x3f\x6b\x1b\x0c\x6a\x2f",
        // "" / M(None) / S(0) / L(0)
        "\x3e\x12\x8c\x5f\xf9\xd0\x60\x2c\xe7\x8c\xa2\x64\x28\xab\xea\x5e\xf9\x6c\xb2\xc5\x84\xcb\x44\x44\xd3\x7f\x22\x9e\xb3\x1b\x52\x63",
        // "CFStringCreateWithCString" / M(Xor2) / S(28) / L(25)
        "\x7d\x78\x6d\x4a\x4c\x57\x50\x59\x7d\x4c\x5b\x5f\x4a\x5b\x69\x57\x4a\x56\x7d\x6d\x4a\x4c\x57\x50\x59\x3e\xb5\x07\x4f\x8c\x52\x57\x4c\x8e",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(222) / L(59)
        "\x14\x13\x18\x13\x67\x18\x17\x60\x18\x14\x14\x18\x10\x61\x18\x17\x1b\x18\x11\x63\x18\x12\x1a\x18\x64\x64\x18\x17\x1a\x18\x66\x13\x18\x16\x63\x18\x67\x10\x18\x10\x16\x18\x17\x10\x18\x66\x13\x18\x1b\x1a\x18\x66\x64\x18\x14\x61\x18\x14\x12\x22\xbe\x94\xea\xa4\x5b\x3e\x95\x33",
        // "CFDictionaryAddValue" / M(Xor1) / S(151) / L(20)
        "\xd4\xd1\xd3\xfe\xf4\xe3\xfe\xf8\xf9\xf6\xe5\xee\xd6\xf3\xf3\xc1\xf6\xfb\xe2\xf2\x97",
        // "" / M(None) / S(0) / L(0)
        "\x65\x0b\xb1\xef\xf3\xc8\x0a\x2a\x91\x1f\xed\x02\xa0\x2a\xb7\xa3\xd2\x91\x6b\x37\xea\xff\xe8\xe9\x66\x85\x25\x3f\x8d\x45\xd6\xd6",
        // "SHA1_Init" / M(Rot) / S(76) / L(9)
        "\x9f\x94\x8d\x7d\xab\x95\xba\xb5\xc0\x4c\x7b\x25\xc4\x96\x3c\xe6",
        // "CFDataGetBytePtr" / M(Xor2) / S(205) / L(16)
        "\x9f\x9a\x98\xbd\xa8\xbd\x9b\xb9\xa8\x9e\xa5\xa8\xb9\x8c\xa8\xae\xdc",
        // "PKCS7_verify" / M(Rot) / S(235) / L(12)
        "\x3b\x36\x2e\x3e\x22\x4a\x61\x50\x5d\x54\x51\x64\xeb\x29\xba\x34",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xad\x59\x53\xa2\x5b\xd2\x28\x5d\x86\xbb\x99\x4f\x51\x82\x7f\x25\x34\x4c\x09\x21\x30\xfe\x4e\x07\x2c\x77\x83\x6d\x65\xcd\xed",
        // "" / M(None) / S(0) / L(0)
        "\x37\xff\xcb\xc0\x20\xe2\x05\x60\xbf\x8d\x51\x59\xa4\x81\x05\x61\x2f\xa4\x03\x89\x02\x57\x76\xc8\xa4\x9a\x71\xcd\x85\x66\x27\xed",
        // "d2i_PKCS7_bio" / M(Xor1) / S(145) / L(13)
        "\xf5\xa3\xf8\xce\xc1\xda\xd2\xc2\xa6\xce\xf3\xf8\xfe\x91\xa5\xd2",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(248) / L(25)
        "\x82\xef\xea\xe3\x85\x94\x9b\x97\x9f\x85\xbd\xbf\xae\x85\xae\xbf\xa2\xae\x85\xb8\xa3\x85\x94\x93\x9e\xda\x2d\xfa\x23\x42\xba\x6a\x12\xfd",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(154) / L(22)
        "\xf9\xa3\xa5\xa4\xf9\xba\xbf\xb4\xf9\xba\xbf\xb4\xb9\xb4\xbc\xb5\xf8\xb2\xaf\xba\xbf\xb4\xd6",
        // "EVP_DigestUpdate" / M(Rot) / S(197) / L(16)
        "\x0a\x1b\x15\x24\x09\x2e\x2c\x2a\x38\x39\x1a\x35\x29\x26\x39\x2a\xc5",
        // "init" / M(Rot) / S(167) / L(4)
        "\x10\x15\x10\x1b\xa7\x88\xbd\x8c\x23\xb2\xb6\x70\x87\x6c\x30\xcb",
        // "ASN1_OBJECT_free" / M(Xor2) / S(241) / L(16)
        "\xa1\xb3\xae\xd1\xbf\xaf\xa2\xaa\xa5\xa3\xb4\xbf\x86\x92\x85\x85\xe0",
        // "CFDateFormatterSetFormat" / M(Xor2) / S(118) / L(24)
        "\x14\x11\x13\x36\x23\x32\x11\x38\x25\x3a\x36\x23\x23\x32\x25\x04\x32\x23\x11\x38\x25\x3a\x36\x23\x57\xcb\x49\x6f\x94\x7d\x09\x91\xb2",
        // "CFReadStreamRead" / M(Xor3) / S(181) / L(16)
        "\x85\x80\x94\xa3\xa7\xa2\x95\xb2\xb4\xa3\xa7\xab\x94\xa3\xa7\xa2\xc6",
        // "SHA1" / M(Xor3) / S(70) / L(4)
        "\x05\x1e\x17\x67\x56\x66\xba\x33\x67\xaa\xc9\x5b\x3f\x38\x16\x40",
        // "EVP_DigestUpdate" / M(Xor3) / S(97) / L(16)
        "\x37\x24\x22\x2d\x36\x1b\x15\x17\x01\x06\x27\x02\x16\x13\x06\x17\x72",
        // "sha1" / M(Rot) / S(34) / L(4)
        "\x95\x8a\x83\x53\x22\x75\x43\x2f\x9d\xfd\x56\xa2\x0e\xeb\xe0\xa7",
        // "CFArrayAppendValue" / M(Xor4) / S(14) / L(18)
        "\x49\x4c\x4b\x78\x78\x6b\x73\x4b\x7a\x7a\x6f\x64\x6e\x5c\x6b\x66\x7f\x6f\x0a",
        // "CFDictionaryCreateMutable" / M(Rot) / S(225) / L(25)
        "\x24\x27\x25\x4a\x44\x55\x4a\x50\x4f\x42\x53\x5a\x24\x53\x46\x42\x55\x46\x2e\x56\x55\x42\x43\x4d\x46\xe1\x52\xe3\x67\x07\xdd\x2f\x9e\x2b",
        // "BIO_new" / M(Xor4) / S(143) / L(7)
        "\xb2\xb9\xbf\xaf\x9e\x95\x87\xf0\xef\xb5\x27\x1e\x3a\xd3\xa7\x4b",
        // "" / M(None) / S(0) / L(0)
        "\x93\x48\xe0\xa2\x2b\x78\xe0\xe6\x10\x0b\x28\xc6\x14\x17\x33\x9a\xa1\xb1\x43\x08\xdd\x8c\x1f\x80\x79\xd3\x5c\xb0\xb8\xa2\xb7\x95",
        // "sha1" / M(Xor4) / S(62) / L(4)
        "\x93\x88\x81\xd1\xe0\xac\x4b\xab\x08\xab\x70\x93\x04\x9c\x69\x81",
        // "alloc" / M(Xor3) / S(92) / L(5)
        "\x0d\x00\x00\x03\x0f\x6c\x04\x59\x19\x12\x3b\x23\xc5\x66\x6d\x89",
        // "." / M(Xor4) / S(92) / L(1)
        "\xee\xc0\x6d\x95\x4d\x96\x19\x7a\x34\x8a\xa8\x15\x30\xd1\x7a\x47",
        // "CFArrayGetCount" / M(Xor3) / S(245) / L(15)
        "\x46\x43\x44\x77\x77\x64\x7c\x42\x60\x71\x46\x6a\x70\x6b\x71\x05",
        // "SHA1_Init" / M(Xor4) / S(160) / L(9)
        "\x53\x48\x41\x31\x5f\x49\x6e\x69\x74\x00\xbd\x72\xbb\x6e\x68\x67",
        // "" / M(None) / S(0) / L(0)
        "\xe3\x38\x88\xc1\xb5\xf9\x23\x06\xa5\xe6\x56\x07\x9c\x86\x34\xb1\x75\x7d\x2b\xea\xc4\x7b\x87\xbb\xe8\xd9\xfe\xb2\x96\xfe\xb7\x0b",
        // "" / M(None) / S(0) / L(0)
        "\x11\x4b\x43\x11\x23\xac\xec\xd5\x13\x78\x70\x3b\x4e\xec\x7a\x4c\x7f\x34\x9f\xb9\x64\x88\xd1\x4b\xfe\xbd\x87\xf6\xc5\xe2\xd5\xa7",
        // "exit" / M(Xor3) / S(30) / L(4)
        "\x4b\x56\x47\x5a\x2e\x3d\xec\x98\xe8\xb4\xe7\xa6\x0c\x15\xe0\x8c",
        // "objc_msgSend" / M(Rot) / S(66) / L(12)
        "\xb1\xa4\xac\xa5\xa1\xaf\xb5\xa9\x95\xa7\xb0\xa6\x42\x81\x91\x4a",
        // "OBJ_txt2obj" / M(Xor3) / S(126) / L(11)
        "\xc1\xcc\xc4\xd1\xfa\xf6\xfa\xbc\xe1\xec\xe4\x8e\x0d\x44\x94\xa4",
        // "CFRelease" / M(Rot) / S(247) / L(9)
        "\x3a\x3d\x49\x5c\x63\x5c\x58\x6a\x5c\xf7\x20\x3e\xda\xad\x13\x2d",
        // "X509_STORE_free" / M(Rot) / S(76) / L(15)
        "\xa4\x81\x7c\x85\xab\x9f\xa0\x9b\x9e\x91\xab\xb2\xbe\xb1\xb1\x4c",
        // "dlsym" / M(Xor2) / S(42) / L(5)
        "\x5e\x56\x49\x43\x57\x3a\xf3\x31\xb7\xfd\x33\xd0\xad\x56\x88\x0f",
        // "CFReadStreamOpen" / M(Xor3) / S(170) / L(16)
        "\xf8\xfd\xe9\xde\xda\xdf\xe8\xcf\xc9\xde\xda\xd6\xf4\xcb\xde\xd5\xbb",
        // "alloc" / M(Xor1) / S(40) / L(5)
        "\x49\x44\x44\x47\x4b\x28\x2e\x99\x09\xf9\xa3\x8e\x7b\x12\xd7\x88",
        // "" / M(None) / S(0) / L(0)
        "\x98\xed\xae\xe0\xb9\x87\xc1\x3b\xe9\x28\xe6\x1e\x97\x45\xb5\x70\x04\x37\x04\x59\x19\x12\x3b\x23\xc5\x66\x6d\x89\xc0\xf7\x7e\x09",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(122) / L(25)
        "\xc4\xa9\xac\xa5\xc3\xd2\xdd\xd1\xd9\xc3\xfb\xf9\xe8\xc3\xe8\xf9\xe4\xe8\xc3\xfe\xe5\xc3\xd2\xd5\xd8\x9c\xd6\x5e\xfa\xbd\x56\x78\xad\x0f",
    };
    
    // Table for storing pointers
    static void *INSOValidateReceipt_Pointers[483] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) SHA1),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) dlopen),
        ((void *) sk_num),
        ((void *) ASN1_INTEGER_get),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) X509_STORE_free),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int INSOValidateReceipt_BPOAOWMCKONW __unused;
    static int INSOValidateReceipt_QNPNWLBOFZHK __unused;
    static int INSOValidateReceipt_FYFXWABLASZB __unused;
    static int INSOValidateReceipt_OJYHTERGBWXP __unused;
    static int INSOValidateReceipt_HZQFHDXHSEOJ __unused;
    static int INSOValidateReceipt_DOYXHHGPPYBR __unused;
    static int INSOValidateReceipt_FHYWANPGOPLF __unused;
    static int INSOValidateReceipt_YMOOQXBSEWVK __unused;
    
    
    // The long jump buffer
    static jmp_buf INSOValidateReceipt_JumpBuf __unused;
    
#define INSOValidateReceipt_ASN1_get_object_016500F0 ((__INSOValidateReceipt_ASN1_get_object) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction00C, 240, 103, 16))
#define INSOValidateReceipt_ASN1_INTEGER_free_012A0108 ((__INSOValidateReceipt_ASN1_INTEGER_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction005, 264, 148, 18))
#define INSOValidateReceipt_ASN1_INTEGER_get_005B0017 ((__INSOValidateReceipt_ASN1_INTEGER_get) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction006, 23, 27, 17))
#define INSOValidateReceipt_ASN1_OBJECT_free_016501C8 ((__INSOValidateReceipt_ASN1_OBJECT_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction008, 456, 241, 17))
#define INSOValidateReceipt_BIO_free_01650051 ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction009, 81, 165, 16))
#define INSOValidateReceipt_BIO_free_016500B7 ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction00A, 183, 34, 16))
#define INSOValidateReceipt_BIO_new_01650085 ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction005, 133, 102, 16))
#define INSOValidateReceipt_BIO_new_016501D0 ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction00C, 464, 143, 16))
#define INSOValidateReceipt_BIO_s_mem_016500E4 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction00C, 228, 57, 16))
#define INSOValidateReceipt_BIO_s_mem_016500F2 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction007, 242, 161, 16))
#define INSOValidateReceipt_BIO_write_012A00AC ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction005, 172, 177, 16))
#define INSOValidateReceipt_BIO_write_012A01A7 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction009, 423, 168, 16))
#define INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110 ((__INSOValidateReceipt_c2i_ASN1_INTEGER) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction004, 272, 176, 17))
#define INSOValidateReceipt_CC_SHA1_Init_00CD00D0 ((__INSOValidateReceipt_CC_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction004, 208, 212, 16))
#define INSOValidateReceipt_CC_SHA1_Update_00CD0003 ((__INSOValidateReceipt_CC_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction00C, 3, 195, 16))
#define INSOValidateReceipt_CFArrayAppendValue_004C005A ((__INSOValidateReceipt_CFArrayAppendValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, 90, 127, 19))
#define INSOValidateReceipt_CFBundleGetMainBundle_004C00C9 ((__INSOValidateReceipt_CFBundleGetMainBundle) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, 201, 4, 22))
#define INSOValidateReceipt_CFBundleUnloadExecutable_00DF0198 ((__INSOValidateReceipt_CFBundleUnloadExecutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction007, 408, 22, 33))
#define INSOValidateReceipt_CFDataCreateMutable_00DF01AA ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction004, 426, 225, 20))
#define INSOValidateReceipt_CFDataCreateMutable_015F0189 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00A, 393, 241, 20))
#define INSOValidateReceipt_CFDataGetLength_00DF001A ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction00A, 26, 12, 16))
#define INSOValidateReceipt_CFDataGetLength_015F0116 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00A, 278, 9, 16))
#define INSOValidateReceipt_CFDateFormatterCreateDateFromString_004C0133 ((__INSOValidateReceipt_CFDateFormatterCreateDateFromString) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, 307, 14, 36))
#define INSOValidateReceipt_CFDateFormatterSetFormat_004C01C9 ((__INSOValidateReceipt_CFDateFormatterSetFormat) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction008, 457, 118, 33))
#define INSOValidateReceipt_CFDictionaryAddValue_004C01BC ((__INSOValidateReceipt_CFDictionaryAddValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction006, 444, 151, 21))
#define INSOValidateReceipt_CFDictionaryCreateMutable_00DF00B8 ((__INSOValidateReceipt_CFDictionaryCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction009, 184, 27, 34))
#define INSOValidateReceipt_CFDictionarySetValue_004C00A7 ((__INSOValidateReceipt_CFDictionarySetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction005, 167, 25, 21))
#define INSOValidateReceipt_CFRelease_004C0071 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction003, 113, 18, 16))
#define INSOValidateReceipt_CFRelease_004C0130 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction003, 304, 232, 16))
#define INSOValidateReceipt_CFRelease_004C01DC ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction003, 476, 247, 16))
#define INSOValidateReceipt_CFRelease_00DF0071 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction003, 113, 18, 16))
#define INSOValidateReceipt_CFRelease_00DF01DC ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction003, 476, 247, 16))
#define INSOValidateReceipt_CFRelease_015F0071 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction003, 113, 18, 16))
#define INSOValidateReceipt_CFRelease_015F0130 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction003, 304, 232, 16))
#define INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_015F00C3 ((__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction003, 195, 68, 48))
#define INSOValidateReceipt_d2i_PKCS7_bio_005B0114 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00B, 276, 252, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_012A0158 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction005, 344, 46, 16))
#define INSOValidateReceipt_d2i_X509_bio_005B00AE ((__INSOValidateReceipt_d2i_X509_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction009, 174, 185, 16))
#define INSOValidateReceipt_EVP_DigestFinal_005B0040 ((__INSOValidateReceipt_EVP_DigestFinal) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction005, 64, 81, 16))
#define INSOValidateReceipt_EVP_DigestInit_005B0135 ((__INSOValidateReceipt_EVP_DigestInit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction005, 309, 223, 16))
#define INSOValidateReceipt_EVP_DigestUpdate_005B013C ((__INSOValidateReceipt_EVP_DigestUpdate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00C, 316, 244, 17))
#define INSOValidateReceipt_EVP_get_digestbyname_005B0048 ((__INSOValidateReceipt_EVP_get_digestbyname) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00A, 72, 187, 21))
#define INSOValidateReceipt_EVP_MD_CTX_init_012A010D ((__INSOValidateReceipt_EVP_MD_CTX_init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction00A, 269, 51, 16))
#define INSOValidateReceipt_exit_00B1011B ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction006, 283, 50, 16))
#define INSOValidateReceipt_exit_00B1014E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction00C, 334, 164, 16))
#define INSOValidateReceipt_exit_00B101D9 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 30, 16))
#define INSOValidateReceipt_exit_00CD014E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction00C, 334, 164, 16))
#define INSOValidateReceipt_exit_00CD01D9 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 30, 16))
#define INSOValidateReceipt_exit_017C014E ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 380, 157, 33, INSOValidateReceipt_ObfuscationFunction00C, 334, 164, 16))
#define INSOValidateReceipt_exit_017C01D9 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 380, 157, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 30, 16))
#define INSOValidateReceipt_BPOAOWMCKONW_004C0001 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_BPOAOWMCKONW, 219, 18))
#define INSOValidateReceipt_BPOAOWMCKONW_004C013E ((__INSOValidateReceipt_CFEqual) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_BPOAOWMCKONW, 249, 16))
#define INSOValidateReceipt_BPOAOWMCKONW_004C016B ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_BPOAOWMCKONW, 13, 37))
#define INSOValidateReceipt_BPOAOWMCKONW_004C0170 ((__INSOValidateReceipt_CFReadStreamOpen) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_BPOAOWMCKONW, 242, 17))
#define INSOValidateReceipt_BPOAOWMCKONW_015F006C ((__INSOValidateReceipt_CFBundleGetIdentifier) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_BPOAOWMCKONW, 198, 22))
#define INSOValidateReceipt_BPOAOWMCKONW_015F00ED ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_BPOAOWMCKONW, 151, 16))
#define INSOValidateReceipt_QNPNWLBOFZHK_004C0103 ((__INSOValidateReceipt_CFDateFormatterSetProperty) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_QNPNWLBOFZHK, 137, 35))
#define INSOValidateReceipt_QNPNWLBOFZHK_004C012B ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QNPNWLBOFZHK, 18, 16))
#define INSOValidateReceipt_QNPNWLBOFZHK_00DF003F ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_QNPNWLBOFZHK, 181, 17))
#define INSOValidateReceipt_QNPNWLBOFZHK_00DF00CA ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_QNPNWLBOFZHK, 145, 21))
#define INSOValidateReceipt_QNPNWLBOFZHK_00DF012B ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QNPNWLBOFZHK, 18, 16))
#define INSOValidateReceipt_QNPNWLBOFZHK_015F0033 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_QNPNWLBOFZHK, 176, 18))
#define INSOValidateReceipt_QNPNWLBOFZHK_015F0159 ((__INSOValidateReceipt_CFAbsoluteTimeGetCurrent) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QNPNWLBOFZHK, 138, 33))
#define INSOValidateReceipt_FYFXWABLASZB_004C00E3 ((__INSOValidateReceipt_CFArrayGetCount) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_FYFXWABLASZB, 78, 16))
#define INSOValidateReceipt_FYFXWABLASZB_004C01AF ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_FYFXWABLASZB, 204, 16))
#define INSOValidateReceipt_FYFXWABLASZB_00DF0069 ((__INSOValidateReceipt_CFReadStreamCreateWithFile) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_FYFXWABLASZB, 2, 35))
#define INSOValidateReceipt_FYFXWABLASZB_00DF00D5 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_FYFXWABLASZB, 153, 16))
#define INSOValidateReceipt_FYFXWABLASZB_015F003F ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_FYFXWABLASZB, 181, 17))
#define INSOValidateReceipt_FYFXWABLASZB_015F006A ((__INSOValidateReceipt_CFDateCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_FYFXWABLASZB, 249, 16))
#define INSOValidateReceipt_FYFXWABLASZB_015F00EA ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_FYFXWABLASZB, 127, 16))
#define INSOValidateReceipt_OJYHTERGBWXP_004C01AF ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_OJYHTERGBWXP, 204, 16))
#define INSOValidateReceipt_OJYHTERGBWXP_00B100B0 ((__INSOValidateReceipt_CC_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_OJYHTERGBWXP, 131, 16))
#define INSOValidateReceipt_OJYHTERGBWXP_00DF00CA ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_OJYHTERGBWXP, 145, 21))
#define INSOValidateReceipt_OJYHTERGBWXP_015F00FB ((__INSOValidateReceipt_CFDateFormatterCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_OJYHTERGBWXP, 182, 22))
#define INSOValidateReceipt_OJYHTERGBWXP_015F0172 ((__INSOValidateReceipt_CFDateCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_OJYHTERGBWXP, 143, 16))
#define INSOValidateReceipt_HZQFHDXHSEOJ_00DF0116 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_HZQFHDXHSEOJ, 9, 16))
#define INSOValidateReceipt_HZQFHDXHSEOJ_00DF01AA ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_HZQFHDXHSEOJ, 225, 20))
#define INSOValidateReceipt_HZQFHDXHSEOJ_015F0008 ((__INSOValidateReceipt_CFArrayCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_HZQFHDXHSEOJ, 34, 21))
#define INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_HZQFHDXHSEOJ, 62, 18))
#define INSOValidateReceipt_HZQFHDXHSEOJ_015F012B ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_HZQFHDXHSEOJ, 18, 16))
#define INSOValidateReceipt_HZQFHDXHSEOJ_015F019E ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_HZQFHDXHSEOJ, 183, 16))
#define INSOValidateReceipt_DOYXHHGPPYBR_004C008C ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_DOYXHHGPPYBR, 226, 16))
#define INSOValidateReceipt_DOYXHHGPPYBR_004C01BF ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_DOYXHHGPPYBR, 205, 17))
#define INSOValidateReceipt_DOYXHHGPPYBR_00DF00A4 ((__INSOValidateReceipt_CFReadStreamRead) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_DOYXHHGPPYBR, 169, 17))
#define INSOValidateReceipt_DOYXHHGPPYBR_015F008C ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_DOYXHHGPPYBR, 226, 16))
#define INSOValidateReceipt_DOYXHHGPPYBR_015F00CA ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_DOYXHHGPPYBR, 145, 21))
#define INSOValidateReceipt_FHYWANPGOPLF_004C018D ((__INSOValidateReceipt_CFArrayGetValueAtIndex) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_FHYWANPGOPLF, 125, 23))
#define INSOValidateReceipt_FHYWANPGOPLF_00B10043 ((__INSOValidateReceipt_CC_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_FHYWANPGOPLF, 44, 16))
#define INSOValidateReceipt_FHYWANPGOPLF_00DF01AF ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_FHYWANPGOPLF, 204, 16))
#define INSOValidateReceipt_YMOOQXBSEWVK_004C0035 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_YMOOQXBSEWVK, 159, 21))
#define INSOValidateReceipt_YMOOQXBSEWVK_004C00ED ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_YMOOQXBSEWVK, 151, 16))
#define INSOValidateReceipt_YMOOQXBSEWVK_004C0125 ((__INSOValidateReceipt_CFReadStreamClose) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_YMOOQXBSEWVK, 79, 18))
#define INSOValidateReceipt_YMOOQXBSEWVK_004C0139 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_YMOOQXBSEWVK, 60, 16))
#define INSOValidateReceipt_YMOOQXBSEWVK_00DF000A ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_YMOOQXBSEWVK, 201, 37))
#define INSOValidateReceipt_YMOOQXBSEWVK_015F017E ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_YMOOQXBSEWVK, 194, 21))
#define INSOValidateReceipt_kCFBundleIdentifierKey_004C0143 ((__INSOValidateReceipt_kCFBundleIdentifierKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction009, 323, 99, 23))
#define INSOValidateReceipt_kCFDateFormatterTimeZone_00DF012C ((__INSOValidateReceipt_kCFDateFormatterTimeZone) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction008, 300, 249, 33))
#define INSOValidateReceipt_kCFTypeArrayCallBacks_004C0171 ((__INSOValidateReceipt_kCFTypeArrayCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 76, 241, 67, INSOValidateReceipt_ObfuscationFunction00A, 369, 68, 22))
#define INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_015F0197 ((__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 351, 105, 67, INSOValidateReceipt_ObfuscationFunction00B, 407, 112, 38))
#define INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00DF00C2 ((__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 223, 99, 67, INSOValidateReceipt_ObfuscationFunction006, 194, 7, 32))
#define INSOValidateReceipt_longjmp_00B1007E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction005, 126, 205, 16))
#define INSOValidateReceipt_longjmp_00B100A9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 177, 7, 33, INSOValidateReceipt_ObfuscationFunction00C, 169, 187, 16))
#define INSOValidateReceipt_longjmp_00CD007E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction005, 126, 205, 16))
#define INSOValidateReceipt_longjmp_00CD00A9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction00C, 169, 187, 16))
#define INSOValidateReceipt_longjmp_00CD0129 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 205, 49, 33, INSOValidateReceipt_ObfuscationFunction003, 297, 198, 16))
#define INSOValidateReceipt_longjmp_017C00A9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 380, 157, 33, INSOValidateReceipt_ObfuscationFunction00C, 169, 187, 16))
#define INSOValidateReceipt_longjmp_017C0129 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 380, 157, 33, INSOValidateReceipt_ObfuscationFunction003, 297, 198, 16))
#define INSOValidateReceipt_OBJ_txt2obj_012A01DB ((__INSOValidateReceipt_OBJ_txt2obj) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction00A, 475, 126, 16))
#define INSOValidateReceipt_objc_getClass_011D007F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction003, 127, 40, 16))
#define INSOValidateReceipt_objc_getClass_011D0086 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction007, 134, 231, 16))
#define INSOValidateReceipt_objc_getClass_011D01A0 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction009, 416, 177, 16))
#define INSOValidateReceipt_objc_getClass_015A0086 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction007, 134, 231, 16))
#define INSOValidateReceipt_objc_getClass_015A01A0 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction009, 416, 177, 16))
#define INSOValidateReceipt_objc_getClass_01C5007F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction003, 127, 40, 16))
#define INSOValidateReceipt_objc_getClass_01C50086 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction007, 134, 231, 16))
#define INSOValidateReceipt_objc_getClass_01C501A0 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction009, 416, 177, 16))
#define INSOValidateReceipt_objc_lookUpClass_011D0047 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction005, 71, 90, 17))
#define INSOValidateReceipt_objc_lookUpClass_011D0144 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction008, 324, 63, 17))
#define INSOValidateReceipt_objc_msgSend_011D007B ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction005, 123, 202, 16))
#define INSOValidateReceipt_objc_msgSend_011D00BC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction00C, 188, 217, 16))
#define INSOValidateReceipt_objc_msgSend_015A007B ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction005, 123, 202, 16))
#define INSOValidateReceipt_objc_msgSend_015A00BC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction00C, 188, 217, 16))
#define INSOValidateReceipt_objc_msgSend_015A01DA ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction003, 474, 66, 16))
#define INSOValidateReceipt_objc_msgSend_01C5007B ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction005, 123, 202, 16))
#define INSOValidateReceipt_objc_msgSend_01C500BC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction00C, 188, 217, 16))
#define INSOValidateReceipt_objc_msgSend_01C501DA ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction003, 474, 66, 16))
#define INSOValidateReceipt_OpenSSL_add_all_digests_005B01B4 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00B, 436, 153, 32))
#define INSOValidateReceipt_OpenSSL_add_all_digests_0165003E ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction007, 62, 221, 32))
#define INSOValidateReceipt_PKCS7_free_012A0146 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction003, 326, 32, 16))
#define INSOValidateReceipt_PKCS7_free_01650146 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction003, 326, 32, 16))
#define INSOValidateReceipt_PKCS7_get0_signers_012A012F ((__INSOValidateReceipt_PKCS7_get0_signers) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction00C, 303, 249, 19))
#define INSOValidateReceipt_PKCS7_verify_005B01C0 ((__INSOValidateReceipt_PKCS7_verify) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction004, 448, 235, 16))
#define INSOValidateReceipt_sel_registerName_011D0004 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction009, 4, 75, 17))
#define INSOValidateReceipt_sel_registerName_011D00C7 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 285, 243, 23, INSOValidateReceipt_ObfuscationFunction00C, 199, 120, 17))
#define INSOValidateReceipt_sel_registerName_015A0004 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction009, 4, 75, 17))
#define INSOValidateReceipt_sel_registerName_015A00C7 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction00C, 199, 120, 17))
#define INSOValidateReceipt_sel_registerName_015A0153 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 346, 40, 23, INSOValidateReceipt_ObfuscationFunction00A, 339, 48, 17))
#define INSOValidateReceipt_sel_registerName_01C500C7 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction00C, 199, 120, 17))
#define INSOValidateReceipt_sel_registerName_01C50153 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 453, 154, 23, INSOValidateReceipt_ObfuscationFunction00A, 339, 48, 17))
#define INSOValidateReceipt_setjmp_017C0098 ((__INSOValidateReceipt_setjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 380, 157, 33, INSOValidateReceipt_ObfuscationFunction004, 152, 227, 16))
#define INSOValidateReceipt_SHA1_012A0018 ((__INSOValidateReceipt_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction008, 24, 159, 16))
#define INSOValidateReceipt_SHA1_Final_005B0007 ((__INSOValidateReceipt_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction008, 7, 53, 16))
#define INSOValidateReceipt_SHA1_Init_016500E7 ((__INSOValidateReceipt_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction007, 231, 108, 16))
#define INSOValidateReceipt_SHA1_Update_0165000C ((__INSOValidateReceipt_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction005, 12, 125, 16))
#define INSOValidateReceipt_sk_free_012A0041 ((__INSOValidateReceipt_sk_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 298, 169, 16, INSOValidateReceipt_ObfuscationFunction004, 65, 197, 16))
#define INSOValidateReceipt_sk_num_005B0013 ((__INSOValidateReceipt_sk_num) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction006, 19, 157, 16))
#define INSOValidateReceipt_sk_value_005B000B ((__INSOValidateReceipt_sk_value) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00C, 11, 142, 16))
#define INSOValidateReceipt_X509_digest_005B00F5 ((__INSOValidateReceipt_X509_digest) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction005, 245, 73, 16))
#define INSOValidateReceipt_X509_free_016500E1 ((__INSOValidateReceipt_X509_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 357, 36, 16, INSOValidateReceipt_ObfuscationFunction005, 225, 87, 16))
#define INSOValidateReceipt_X509_get_ext_by_OBJ_005B0081 ((__INSOValidateReceipt_X509_get_ext_by_OBJ) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00B, 129, 194, 20))
#define INSOValidateReceipt_X509_NAME_get_text_by_NID_005B01E2 ((__INSOValidateReceipt_X509_NAME_get_text_by_NID) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction00A, 482, 122, 34))
#define INSOValidateReceipt_X509_STORE_add_cert_005B0092 ((__INSOValidateReceipt_X509_STORE_add_cert) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction008, 146, 45, 20))
#define INSOValidateReceipt_X509_STORE_free_005B01DD ((__INSOValidateReceipt_X509_STORE_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction004, 477, 76, 16))
#define INSOValidateReceipt_X509_STORE_new_005B0187 ((__INSOValidateReceipt_X509_STORE_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 91, 237, 16, INSOValidateReceipt_ObfuscationFunction006, 391, 101, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction003(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction003CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction003(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[45])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction004(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction004CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction004(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[255])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction005(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction005CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction005(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[427])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction006(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction006CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction006(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[255])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction007(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction007CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction007(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[427])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction008(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction008CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction008(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[255])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction009(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction009CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction009(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[151])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction00A(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00ACF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00A(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[255])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00B(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00BCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction00B(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[151])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00C(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00CCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00C(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[442])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_decrypt INSOValidateReceipt_func1, int INSOValidateReceipt_index1, int INSOValidateReceipt_val1, int INSOValidateReceipt_len1, INSOValidateReceipt_decrypt INSOValidateReceipt_func2, int INSOValidateReceipt_index2, int INSOValidateReceipt_val2, int INSOValidateReceipt_len2) {
        char INSOValidateReceipt_tmp1[483], INSOValidateReceipt_tmp2[483];
        // Load the library if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] == NULL) {
            INSOValidateReceipt_func1(INSOValidateReceipt_Strings[INSOValidateReceipt_index1], INSOValidateReceipt_tmp1, INSOValidateReceipt_val1, INSOValidateReceipt_len1);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] = ((__INSOValidateReceipt_dlopen) INSOValidateReceipt_Pointers[144])(INSOValidateReceipt_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] == NULL) {
            INSOValidateReceipt_func2(INSOValidateReceipt_Strings[INSOValidateReceipt_index2], INSOValidateReceipt_tmp2, INSOValidateReceipt_val2, INSOValidateReceipt_len2);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] = ((__INSOValidateReceipt_dlsym) INSOValidateReceipt_Pointers[478])(INSOValidateReceipt_Pointers[INSOValidateReceipt_index1], INSOValidateReceipt_tmp2);
        }
        return INSOValidateReceipt_Pointers[INSOValidateReceipt_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle");
        // Retrieve the main bundle
        CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_004C00C9();
        if (!INSOValidateReceipt_bundle) {
            // Dead code
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_bundle);
            INSOValidateReceipt_CFBundleUnloadExecutable_00DF0198((CFBundleRef) INSOValidateReceipt_bundle);
        }
        INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle;
        // Global variables computation
        // Set to 368
        INSOValidateReceipt_BPOAOWMCKONW = 368;
        // Set to 51
        INSOValidateReceipt_QNPNWLBOFZHK = 51;
        // Set to 105
        INSOValidateReceipt_FYFXWABLASZB = 105;
        // Set to 426
        INSOValidateReceipt_HZQFHDXHSEOJ = 426;
        // Set to 164
        INSOValidateReceipt_DOYXHHGPPYBR = 164;
        // Set to 293
        INSOValidateReceipt_YMOOQXBSEWVK = 293;
    }
#else
#define INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle"); \
CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_004C00C9(); \
if (!INSOValidateReceipt_bundle) { \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_bundle); \
INSOValidateReceipt_CFBundleUnloadExecutable_00DF0198((CFBundleRef) INSOValidateReceipt_bundle); \
} \
INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle; \
INSOValidateReceipt_BPOAOWMCKONW = 368; \
INSOValidateReceipt_QNPNWLBOFZHK = 51; \
INSOValidateReceipt_FYFXWABLASZB = 105; \
INSOValidateReceipt_HZQFHDXHSEOJ = 426; \
INSOValidateReceipt_DOYXHHGPPYBR = 164; \
INSOValidateReceipt_YMOOQXBSEWVK = 293; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void INSOValidateReceipt_LoadReceipt042(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle;
        CFURLRef INSOValidateReceipt_url1;
        CFReadStreamRef INSOValidateReceipt_stream;
        CFMutableDataRef INSOValidateReceipt_data;
        CFIndex INSOValidateReceipt_count;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3;
        uint8_t INSOValidateReceipt_buffer[483];
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt");
        // Get NSBundle class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[289]), INSOValidateReceipt_str1_, 172, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_015A01A0(INSOValidateReceipt_str1);
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[75]), INSOValidateReceipt_str2_, 49, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_011D0004(INSOValidateReceipt_str2);
        INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2);
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[396]), INSOValidateReceipt_str3_, 2, 19);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_011D0004(INSOValidateReceipt_str3);
        INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3));
        // Create a stream from the receipt file
        INSOValidateReceipt_stream = INSOValidateReceipt_FYFXWABLASZB_00DF0069(kCFAllocatorDefault, INSOValidateReceipt_url1);
        if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_BPOAOWMCKONW_004C0170(INSOValidateReceipt_stream)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD007E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_url1);
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1);
            goto INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail;
        }
        // Create the data object that will contains receipt data
        INSOValidateReceipt_data = INSOValidateReceipt_HZQFHDXHSEOJ_00DF01AA(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            INSOValidateReceipt_count = INSOValidateReceipt_DOYXHHGPPYBR_00DF00A4(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483);
            if (INSOValidateReceipt_count > 0) {
                INSOValidateReceipt_QNPNWLBOFZHK_015F0033(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count);
            }
        } while (INSOValidateReceipt_count > 0);
        // Close the stream
        INSOValidateReceipt_YMOOQXBSEWVK_004C0125(INSOValidateReceipt_stream);
        if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_ctx->receipt_data);
        INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data;
        // Global variables computation
        // From 105 to 234
        INSOValidateReceipt_FYFXWABLASZB -= 47; INSOValidateReceipt_FYFXWABLASZB *= 4; INSOValidateReceipt_FYFXWABLASZB += 2;
    INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_stream);
    }
#else
#define INSOValidateReceipt_LoadReceipt042(INSOValidateReceipt_ctx) { \
id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle; \
CFURLRef INSOValidateReceipt_url1; \
CFReadStreamRef INSOValidateReceipt_stream; \
CFMutableDataRef INSOValidateReceipt_data; \
CFIndex INSOValidateReceipt_count; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3; \
uint8_t INSOValidateReceipt_buffer[483]; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[289]), INSOValidateReceipt_str1_, 172, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_015A01A0(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[75]), INSOValidateReceipt_str2_, 49, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_011D0004(INSOValidateReceipt_str2); \
INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[396]), INSOValidateReceipt_str3_, 2, 19); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_011D0004(INSOValidateReceipt_str3); \
INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3)); \
INSOValidateReceipt_stream = INSOValidateReceipt_FYFXWABLASZB_00DF0069(kCFAllocatorDefault, INSOValidateReceipt_url1); \
if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_BPOAOWMCKONW_004C0170(INSOValidateReceipt_stream)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD007E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_url1); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1); \
goto INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_data = INSOValidateReceipt_HZQFHDXHSEOJ_00DF01AA(kCFAllocatorDefault, 0); \
do { \
INSOValidateReceipt_count = INSOValidateReceipt_DOYXHHGPPYBR_00DF00A4(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483); \
if (INSOValidateReceipt_count > 0) { \
INSOValidateReceipt_QNPNWLBOFZHK_015F0033(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count); \
} \
} while (INSOValidateReceipt_count > 0); \
INSOValidateReceipt_YMOOQXBSEWVK_004C0125(INSOValidateReceipt_stream); \
if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data; \
INSOValidateReceipt_FYFXWABLASZB -= 47; INSOValidateReceipt_FYFXWABLASZB *= 4; INSOValidateReceipt_FYFXWABLASZB += 2;  \
INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetGUID04E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        Class INSOValidateReceipt_deviceClass;
        id INSOValidateReceipt_device, INSOValidateReceipt_identifier;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4;
        uuid_t INSOValidateReceipt_uuid;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier");
        // Get the UIDevice class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[136]), INSOValidateReceipt_str1_, 148, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_getClass_011D007F(INSOValidateReceipt_str1);
        // Call [UIDevice currentDevice]
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[180]), INSOValidateReceipt_str2_, 121, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str2);
        INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2);
        // Call [device identifierForVendor]
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[118]), INSOValidateReceipt_str3_, 145, 20);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str3);
        INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3);
        // Call [identifier getUUIDBytes:INSOValidateReceipt_uuid]
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[422]), INSOValidateReceipt_str4_, 133, 16);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid);
        if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_00DF0071(INSOValidateReceipt_ctx->guid_data);
        volatile int INSOValidateReceipt_size = 2; INSOValidateReceipt_size -= 1; INSOValidateReceipt_size *= 10; INSOValidateReceipt_size += 6;
        INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_FYFXWABLASZB_015F00EA(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size);
        // Global variables computation
        // From 368 to 108
        INSOValidateReceipt_BPOAOWMCKONW += 172; INSOValidateReceipt_BPOAOWMCKONW /= 5;
        // Set to 299
        INSOValidateReceipt_QNPNWLBOFZHK = 299;
        // From 293 to 10
        INSOValidateReceipt_YMOOQXBSEWVK += 17; INSOValidateReceipt_YMOOQXBSEWVK /= 31;
    }
#else
#define INSOValidateReceipt_GetGUID04E(INSOValidateReceipt_ctx) { \
Class INSOValidateReceipt_deviceClass; \
id INSOValidateReceipt_device, INSOValidateReceipt_identifier; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4; \
uuid_t INSOValidateReceipt_uuid; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[136]), INSOValidateReceipt_str1_, 148, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_getClass_011D007F(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[180]), INSOValidateReceipt_str2_, 121, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str2); \
INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[118]), INSOValidateReceipt_str3_, 145, 20); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str3); \
INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3); \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[422]), INSOValidateReceipt_str4_, 133, 16); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01C50153(INSOValidateReceipt_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid); \
if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_00DF0071(INSOValidateReceipt_ctx->guid_data); \
volatile int INSOValidateReceipt_size = 2; INSOValidateReceipt_size -= 1; INSOValidateReceipt_size *= 10; INSOValidateReceipt_size += 6;  \
INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_FYFXWABLASZB_015F00EA(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size); \
INSOValidateReceipt_BPOAOWMCKONW += 172; INSOValidateReceipt_BPOAOWMCKONW /= 5;  \
INSOValidateReceipt_QNPNWLBOFZHK = 299; \
INSOValidateReceipt_YMOOQXBSEWVK += 17; INSOValidateReceipt_YMOOQXBSEWVK /= 31;  \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[250]), 37, 49);
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier");
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction005CF((INSOValidateReceipt_Strings[178]), 83, 19);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_YMOOQXBSEWVK_00DF000A((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_QNPNWLBOFZHK_00DF012B(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_017C00A9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1);
        }
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str2);
        // Global variables computation
        // From 108 to 363
        INSOValidateReceipt_BPOAOWMCKONW -= 36; INSOValidateReceipt_BPOAOWMCKONW *= 5; INSOValidateReceipt_BPOAOWMCKONW += 3;
        // From 234 to 213
        INSOValidateReceipt_FYFXWABLASZB += 192; INSOValidateReceipt_FYFXWABLASZB /= 2;
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_ctx) { \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[250]), 37, 49); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier"); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction005CF((INSOValidateReceipt_Strings[178]), 83, 19); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_YMOOQXBSEWVK_00DF000A((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_QNPNWLBOFZHK_00DF012B(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_017C00A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str2); \
INSOValidateReceipt_BPOAOWMCKONW -= 36; INSOValidateReceipt_BPOAOWMCKONW *= 5; INSOValidateReceipt_BPOAOWMCKONW += 3;  \
INSOValidateReceipt_FYFXWABLASZB += 192; INSOValidateReceipt_FYFXWABLASZB /= 2;  \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleVersion05F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version");
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[238]), 171, 16);
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction006CF((INSOValidateReceipt_Strings[230]), 176, 16);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_BPOAOWMCKONW_004C016B((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_FYFXWABLASZB_00DF00D5(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00B100A9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2);
        }
        // Global variables computation
        // From 363 to 1
        INSOValidateReceipt_BPOAOWMCKONW += 2; INSOValidateReceipt_BPOAOWMCKONW /= 365;
        // From 299 to 259
        INSOValidateReceipt_QNPNWLBOFZHK += 219; INSOValidateReceipt_QNPNWLBOFZHK /= 2;
        // From 213 to 63
        INSOValidateReceipt_FYFXWABLASZB += 102; INSOValidateReceipt_FYFXWABLASZB /= 5;
        // Set to 251
        INSOValidateReceipt_OJYHTERGBWXP = 251;
        // From 426 to 8
        INSOValidateReceipt_HZQFHDXHSEOJ += 14; INSOValidateReceipt_HZQFHDXHSEOJ /= 55;
        // From 164 to 140
        INSOValidateReceipt_DOYXHHGPPYBR += 116; INSOValidateReceipt_DOYXHHGPPYBR /= 2;
        // Set to 431
        INSOValidateReceipt_FHYWANPGOPLF = 431;
        // From 10 to 382
        INSOValidateReceipt_YMOOQXBSEWVK -= 1; INSOValidateReceipt_YMOOQXBSEWVK *= 40; INSOValidateReceipt_YMOOQXBSEWVK += 22;
        INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2);
        INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleVersion05F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version"); \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[238]), 171, 16); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction006CF((INSOValidateReceipt_Strings[230]), 176, 16); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_BPOAOWMCKONW_004C016B((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_FYFXWABLASZB_00DF00D5(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B100A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2); \
} \
INSOValidateReceipt_BPOAOWMCKONW += 2; INSOValidateReceipt_BPOAOWMCKONW /= 365;  \
INSOValidateReceipt_QNPNWLBOFZHK += 219; INSOValidateReceipt_QNPNWLBOFZHK /= 2;  \
INSOValidateReceipt_FYFXWABLASZB += 102; INSOValidateReceipt_FYFXWABLASZB /= 5;  \
INSOValidateReceipt_OJYHTERGBWXP = 251; \
INSOValidateReceipt_HZQFHDXHSEOJ += 14; INSOValidateReceipt_HZQFHDXHSEOJ /= 55;  \
INSOValidateReceipt_DOYXHHGPPYBR += 116; INSOValidateReceipt_DOYXHHGPPYBR /= 2;  \
INSOValidateReceipt_FHYWANPGOPLF = 431; \
INSOValidateReceipt_YMOOQXBSEWVK -= 1; INSOValidateReceipt_YMOOQXBSEWVK *= 40; INSOValidateReceipt_YMOOQXBSEWVK += 22;  \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetReceiptInformation063(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context;
        INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context;
        CFNumberRef INSOValidateReceipt_key;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2;
        int INSOValidateReceipt_type;
        int INSOValidateReceipt_xclass;
        long INSOValidateReceipt_length;
        CFDateFormatterRef INSOValidateReceipt_formatter = NULL;
        CFTimeZoneRef INSOValidateReceipt_tz = NULL;
        BIO *INSOValidateReceipt_bio_p7;
        PKCS7 *INSOValidateReceipt_pkcs7;
        ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content;
        ASN1_INTEGER *INSOValidateReceipt_value;
        const unsigned char *INSOValidateReceipt_seq_end;
        long INSOValidateReceipt_attr_type;
        long INSOValidateReceipt_attr_version;
        int INSOValidateReceipt_str_type;
        long INSOValidateReceipt_str_length;
        const unsigned char *INSOValidateReceipt_str_ptr;
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context;
        long INSOValidateReceipt_number;
        int INSOValidateReceipt_num_type;
        long INSOValidateReceipt_num_length;
        const unsigned char *INSOValidateReceipt_num_ptr;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_016501D0(INSOValidateReceipt_BIO_s_mem_016500E4());
        INSOValidateReceipt_BIO_write_012A00AC(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_FYFXWABLASZB_015F003F((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_00DF001A((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_005B0114(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        INSOValidateReceipt_formatter = INSOValidateReceipt_OJYHTERGBWXP_015F00FB(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[73]), 49, 33);
        INSOValidateReceipt_CFDateFormatterSetFormat_004C01C9(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1);
        INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1);
        INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_015F00C3(NULL, 0.0);
        INSOValidateReceipt_QNPNWLBOFZHK_004C0103(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00DF012C, INSOValidateReceipt_tz);
        INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_tz);
        // Initial context
        INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data;
        INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data;
        INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length;
        INSOValidateReceipt_receipt_context.parent = NULL;
        INSOValidateReceipt_receipt_context.dictionary = NULL;
        INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context;
        while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
            if (!INSOValidateReceipt_current_context->dictionary) {
                // Create the target dictionary
                INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_00DF00B8(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_015F0197, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00DF00C2);
                // Decode payload from ASN.1
                INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SET) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
            }
            // Iterate over attributes
            while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
                // Parse attribute sequence
                INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length;
                INSOValidateReceipt_attr_type = 0;
                INSOValidateReceipt_attr_version = 0;
                // Parse the attribute type
                INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value);
                // Parse the attribute version
                INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value);
                // Check the attribute value
                INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2));
                INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2) + 1);
                INSOValidateReceipt_value1 = NULL;
                INSOValidateReceipt_value2 = NULL;
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type);
                switch (INSOValidateReceipt_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleId:
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion:
                    case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion:
                    case INSOValidateReceipt_InAppAttributeTypeProductIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[45])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false);
                        INSOValidateReceipt_value2 = INSOValidateReceipt_DOYXHHGPPYBR_015F008C(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate:
                    case INSOValidateReceipt_InAppAttributeTypeCancellationDate:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypePurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[45])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_004C0133(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case INSOValidateReceipt_InAppAttributeTypeQuantity:
                    case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId:
                    {
                        INSOValidateReceipt_num_type = 0;
                        INSOValidateReceipt_num_length = 0;
                        INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr);
                        if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length);
                        INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value);
                        INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberLongType, &INSOValidateReceipt_number);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue:
                    case INSOValidateReceipt_ReceiptAttributeTypeHash:
                    {
                        INSOValidateReceipt_value1 = INSOValidateReceipt_DOYXHHGPPYBR_015F008C(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_00DF001A((CFDataRef) INSOValidateReceipt_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length;
                        INSOValidateReceipt_inapp_context.dictionary = NULL;
                        INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context;
                        INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context;
                        goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key;
                    }
                    default:
                        break;
                }
                if (INSOValidateReceipt_value1) {
                    INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                    INSOValidateReceipt_CFDictionaryAddValue_004C01BC((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1);
                }
                if (INSOValidateReceipt_value2) {
                    INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFDictionaryAddValue_004C01BC((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2);
                    INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value2);
                }
                // Move past the attribute
                INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length;
            }
        INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key:
            // If the current context is a new one, continue parsing
            if (!INSOValidateReceipt_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (INSOValidateReceipt_current_context->parent) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase");
                INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
                INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                INSOValidateReceipt_value1 = INSOValidateReceipt_YMOOQXBSEWVK_015F017E((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key);
                if (!INSOValidateReceipt_value1) {
                    INSOValidateReceipt_value1 = INSOValidateReceipt_HZQFHDXHSEOJ_015F0008(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_004C0171);
                    INSOValidateReceipt_CFDictionarySetValue_004C00A7((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1);
                }
                INSOValidateReceipt_CFArrayAppendValue_004C005A((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
                // Switch to parent context
                INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent;
                // Move past the child context
                INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end;
            }
        }
        if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_ctx->receipt_dict);
        INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary;
        // Global variables computation
        // From 8 to 278
        INSOValidateReceipt_HZQFHDXHSEOJ -= 1; INSOValidateReceipt_HZQFHDXHSEOJ *= 36; INSOValidateReceipt_HZQFHDXHSEOJ += 26;
        // From 140 to 447
        INSOValidateReceipt_DOYXHHGPPYBR -= 51; INSOValidateReceipt_DOYXHHGPPYBR *= 5; INSOValidateReceipt_DOYXHHGPPYBR += 2;
    INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_012A0146(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_016500B7(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_formatter);
    }
#else
#define INSOValidateReceipt_GetReceiptInformation063(INSOValidateReceipt_ctx) { \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context; \
INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context; \
CFNumberRef INSOValidateReceipt_key; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2; \
int INSOValidateReceipt_type; \
int INSOValidateReceipt_xclass; \
long INSOValidateReceipt_length; \
CFDateFormatterRef INSOValidateReceipt_formatter = NULL; \
CFTimeZoneRef INSOValidateReceipt_tz = NULL; \
BIO *INSOValidateReceipt_bio_p7; \
PKCS7 *INSOValidateReceipt_pkcs7; \
ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content; \
ASN1_INTEGER *INSOValidateReceipt_value; \
const unsigned char *INSOValidateReceipt_seq_end; \
long INSOValidateReceipt_attr_type; \
long INSOValidateReceipt_attr_version; \
int INSOValidateReceipt_str_type; \
long INSOValidateReceipt_str_length; \
const unsigned char *INSOValidateReceipt_str_ptr; \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context; \
long INSOValidateReceipt_number; \
int INSOValidateReceipt_num_type; \
long INSOValidateReceipt_num_length; \
const unsigned char *INSOValidateReceipt_num_ptr; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_016501D0(INSOValidateReceipt_BIO_s_mem_016500E4()); \
INSOValidateReceipt_BIO_write_012A00AC(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_FYFXWABLASZB_015F003F((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_00DF001A((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_005B0114(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_formatter = INSOValidateReceipt_OJYHTERGBWXP_015F00FB(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[73]), 49, 33); \
INSOValidateReceipt_CFDateFormatterSetFormat_004C01C9(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1); \
INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_015F00C3(NULL, 0.0); \
INSOValidateReceipt_QNPNWLBOFZHK_004C0103(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00DF012C, INSOValidateReceipt_tz); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_tz); \
INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data; \
INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data; \
INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length; \
INSOValidateReceipt_receipt_context.parent = NULL; \
INSOValidateReceipt_receipt_context.dictionary = NULL; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context; \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
if (!INSOValidateReceipt_current_context->dictionary) { \
INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_00DF00B8(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_015F0197, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00DF00C2); \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SET) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
} \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_attr_type = 0; \
INSOValidateReceipt_attr_version = 0; \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2)); \
INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2) + 1); \
INSOValidateReceipt_value1 = NULL; \
INSOValidateReceipt_value2 = NULL; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type); \
switch (INSOValidateReceipt_attr_type) { \
case INSOValidateReceipt_ReceiptAttributeTypeBundleId: \
case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion: \
case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion: \
case INSOValidateReceipt_InAppAttributeTypeProductIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[45])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false); \
INSOValidateReceipt_value2 = INSOValidateReceipt_DOYXHHGPPYBR_015F008C(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate: \
case INSOValidateReceipt_InAppAttributeTypeCancellationDate: \
case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypePurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[45])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_004C0133(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_InAppAttributeTypeQuantity: \
case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId: \
{ \
INSOValidateReceipt_num_type = 0; \
INSOValidateReceipt_num_length = 0; \
INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_016500F0(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr); \
if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B1007E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_005B0110(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length); \
INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_005B0017(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_012A0108(INSOValidateReceipt_value); \
INSOValidateReceipt_value1 = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberLongType, &INSOValidateReceipt_number); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue: \
case INSOValidateReceipt_ReceiptAttributeTypeHash: \
{ \
INSOValidateReceipt_value1 = INSOValidateReceipt_DOYXHHGPPYBR_015F008C(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_00DF001A((CFDataRef) INSOValidateReceipt_value1)); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase: \
{ \
INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_inapp_context.dictionary = NULL; \
INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key; \
} \
default: \
break; \
} \
if (INSOValidateReceipt_value1) { \
INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_CFDictionaryAddValue_004C01BC((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1); \
} \
if (INSOValidateReceipt_value2) { \
INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key2); \
INSOValidateReceipt_CFDictionaryAddValue_004C01BC((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value2); \
} \
INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length; \
} \
INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key: \
if (!INSOValidateReceipt_current_context->dictionary) { \
continue; \
} \
if (INSOValidateReceipt_current_context->parent) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
INSOValidateReceipt_key = INSOValidateReceipt_FHYWANPGOPLF_00DF01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_value1 = INSOValidateReceipt_YMOOQXBSEWVK_015F017E((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key); \
if (!INSOValidateReceipt_value1) { \
INSOValidateReceipt_value1 = INSOValidateReceipt_HZQFHDXHSEOJ_015F0008(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_004C0171); \
INSOValidateReceipt_CFDictionarySetValue_004C00A7((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_value1); \
} \
INSOValidateReceipt_CFArrayAppendValue_004C005A((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent; \
INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end; \
} \
} \
if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary; \
INSOValidateReceipt_HZQFHDXHSEOJ -= 1; INSOValidateReceipt_HZQFHDXHSEOJ *= 36; INSOValidateReceipt_HZQFHDXHSEOJ += 26;  \
INSOValidateReceipt_DOYXHHGPPYBR -= 51; INSOValidateReceipt_DOYXHHGPPYBR *= 5; INSOValidateReceipt_DOYXHHGPPYBR += 2;  \
INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_012A0146(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_016500B7(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptSignature06E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        BIO *INSOValidateReceipt_bio_p7 = NULL;
        PKCS7 *INSOValidateReceipt_pkcs7 = NULL;
        STACK_OF(X509) *INSOValidateReceipt_certificates = NULL;
        X509 *INSOValidateReceipt_certificate = NULL;
        int INSOValidateReceipt_count, INSOValidateReceipt_index1;
        unsigned int INSOValidateReceipt_index2;
        ASN1_OBJECT *INSOValidateReceipt_oid = NULL;
        char *INSOValidateReceipt_str1;
        char *INSOValidateReceipt_str2;
        char *INSOValidateReceipt_str3;
        char *INSOValidateReceipt_str4;
        char *INSOValidateReceipt_str5;
        int INSOValidateReceipt_verify, INSOValidateReceipt_status;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01650085(INSOValidateReceipt_BIO_s_mem_016500F2());
        INSOValidateReceipt_BIO_write_012A01A7(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_DOYXHHGPPYBR_004C01BF((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HZQFHDXHSEOJ_00DF0116((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_012A0158(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_OpenSSL_add_all_digests_0165003E();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        INSOValidateReceipt_verify = 0;
        INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert;
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_005B0013((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_005B000B((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            char INSOValidateReceipt_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_005B01E2(NULL, NID_commonName, INSOValidateReceipt_common_name, 420);
            if (INSOValidateReceipt_status > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
            }
            // Retrieve the common name
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_005B01E2(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483);
            if (INSOValidateReceipt_status <= 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
            }
            volatile unsigned int INSOValidateReceipt_digest_length = 17; INSOValidateReceipt_digest_length -= 11; INSOValidateReceipt_digest_length *= 3; INSOValidateReceipt_digest_length += 2;
            char INSOValidateReceipt_str2_[483];
            INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[466]), INSOValidateReceipt_str2_, 62, 16);
            INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
            const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_005B0048(INSOValidateReceipt_str2);
            unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE];
            unsigned int INSOValidateReceipt_len = 0;
            // Check that the X509_digest function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_005B00F5(NULL, NULL, NULL, &INSOValidateReceipt_len) * 141;
            if (INSOValidateReceipt_status == 141 || INSOValidateReceipt_len > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
            }
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_005B00F5(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 141;
            if (INSOValidateReceipt_status != 141 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
            }
            char INSOValidateReceipt_fingerprint[483];
            volatile unsigned int INSOValidateReceipt_increment = 2; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 3;
            for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) {
                snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02x:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]);
            }
            char INSOValidateReceipt_str3_[483];
            INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[321]), INSOValidateReceipt_str3_, 232, 68);
            INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
            // Check the common name and the fingerprint
            char INSOValidateReceipt_str1_[483];
            INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[112]), INSOValidateReceipt_str1_, 159, 16);
            INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
            volatile size_t INSOValidateReceipt_num = 2; INSOValidateReceipt_num -= 1; INSOValidateReceipt_num *= 8; INSOValidateReceipt_num += 5;
            if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[229])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[229])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) {
                INSOValidateReceipt_verify = 141;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 141) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[16]), INSOValidateReceipt_str4_, 147, 34);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_012A01DB(INSOValidateReceipt_str4, 0);
        INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_005B0081(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
        INSOValidateReceipt_ASN1_OBJECT_free_016501C8(INSOValidateReceipt_oid);
        if (INSOValidateReceipt_verify >= 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char INSOValidateReceipt_str5_[483];
        INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[16]), INSOValidateReceipt_str5_, 147, 34);
        INSOValidateReceipt_str5 = INSOValidateReceipt_str5_;
        INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_012A012F(INSOValidateReceipt_pkcs7, NULL, 0);
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_005B0013((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_005B000B((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_012A01DB(INSOValidateReceipt_str5, 0);
            INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_005B0081(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
            INSOValidateReceipt_ASN1_OBJECT_free_016501C8(INSOValidateReceipt_oid);
            if (INSOValidateReceipt_verify == -1) {
                sk_X509_free (INSOValidateReceipt_certificates);
                INSOValidateReceipt_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail;
        }
        // Global variables computation
        // From 259 to 202
        INSOValidateReceipt_QNPNWLBOFZHK += 145; INSOValidateReceipt_QNPNWLBOFZHK /= 2;
        // Set to 431
        INSOValidateReceipt_OJYHTERGBWXP = 431;
        // From 382 to 313
        INSOValidateReceipt_YMOOQXBSEWVK += 244; INSOValidateReceipt_YMOOQXBSEWVK /= 2;
    INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_01650051(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01650146(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates);
    }
#else
#define INSOValidateReceipt_CheckReceiptSignature06E(INSOValidateReceipt_ctx) { \
BIO *INSOValidateReceipt_bio_p7 = NULL; \
PKCS7 *INSOValidateReceipt_pkcs7 = NULL; \
STACK_OF(X509) *INSOValidateReceipt_certificates = NULL; \
X509 *INSOValidateReceipt_certificate = NULL; \
int INSOValidateReceipt_count, INSOValidateReceipt_index1; \
unsigned int INSOValidateReceipt_index2; \
ASN1_OBJECT *INSOValidateReceipt_oid = NULL; \
char *INSOValidateReceipt_str1; \
char *INSOValidateReceipt_str2; \
char *INSOValidateReceipt_str3; \
char *INSOValidateReceipt_str4; \
char *INSOValidateReceipt_str5; \
int INSOValidateReceipt_verify, INSOValidateReceipt_status; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01650085(INSOValidateReceipt_BIO_s_mem_016500F2()); \
INSOValidateReceipt_BIO_write_012A01A7(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_DOYXHHGPPYBR_004C01BF((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HZQFHDXHSEOJ_00DF0116((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_012A0158(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_OpenSSL_add_all_digests_0165003E(); \
INSOValidateReceipt_verify = 0; \
INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert; \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_005B0013((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_005B000B((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
char INSOValidateReceipt_common_name[483]; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_005B01E2(NULL, NID_commonName, INSOValidateReceipt_common_name, 420); \
if (INSOValidateReceipt_status > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_005B01E2(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483); \
if (INSOValidateReceipt_status <= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
volatile unsigned int INSOValidateReceipt_digest_length = 17; INSOValidateReceipt_digest_length -= 11; INSOValidateReceipt_digest_length *= 3; INSOValidateReceipt_digest_length += 2;  \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[466]), INSOValidateReceipt_str2_, 62, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_005B0048(INSOValidateReceipt_str2); \
unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE]; \
unsigned int INSOValidateReceipt_len = 0; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_005B00F5(NULL, NULL, NULL, &INSOValidateReceipt_len) * 141; \
if (INSOValidateReceipt_status == 141 || INSOValidateReceipt_len > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_005B00F5(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 141; \
if (INSOValidateReceipt_status != 141 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_fingerprint[483]; \
volatile unsigned int INSOValidateReceipt_increment = 2; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 3;  \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) { \
snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02x:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]); \
} \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[321]), INSOValidateReceipt_str3_, 232, 68); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[112]), INSOValidateReceipt_str1_, 159, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
volatile size_t INSOValidateReceipt_num = 2; INSOValidateReceipt_num -= 1; INSOValidateReceipt_num *= 8; INSOValidateReceipt_num += 5;  \
if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[229])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[229])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) { \
INSOValidateReceipt_verify = 141; \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 141) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[16]), INSOValidateReceipt_str4_, 147, 34); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_012A01DB(INSOValidateReceipt_str4, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_005B0081(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_016501C8(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify >= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str5_[483]; \
INSOValidateReceipt_ObfuscationFunction00C((INSOValidateReceipt_Strings[16]), INSOValidateReceipt_str5_, 147, 34); \
INSOValidateReceipt_str5 = INSOValidateReceipt_str5_; \
INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_012A012F(INSOValidateReceipt_pkcs7, NULL, 0); \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_005B0013((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_005B000B((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_012A01DB(INSOValidateReceipt_str5, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_005B0081(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_016501C8(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify == -1) { \
sk_X509_free (INSOValidateReceipt_certificates); \
INSOValidateReceipt_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_QNPNWLBOFZHK += 145; INSOValidateReceipt_QNPNWLBOFZHK /= 2;  \
INSOValidateReceipt_OJYHTERGBWXP = 431; \
INSOValidateReceipt_YMOOQXBSEWVK += 244; INSOValidateReceipt_YMOOQXBSEWVK /= 2;  \
INSOValidateReceipt_CheckReceiptSignature06E_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_01650051(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01650146(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[361]), 139, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_OJYHTERGBWXP_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QNPNWLBOFZHK_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
        if (INSOValidateReceipt_YMOOQXBSEWVK_004C0139(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_017C0129(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 1 to 237
        INSOValidateReceipt_BPOAOWMCKONW -= 1; INSOValidateReceipt_BPOAOWMCKONW *= 239; INSOValidateReceipt_BPOAOWMCKONW += 237;
        // From 202 to 299
        INSOValidateReceipt_QNPNWLBOFZHK -= 103; INSOValidateReceipt_QNPNWLBOFZHK *= 3; INSOValidateReceipt_QNPNWLBOFZHK += 2;
        // Set to 202
        INSOValidateReceipt_DOYXHHGPPYBR = 202;
        INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[361]), 139, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_OJYHTERGBWXP_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QNPNWLBOFZHK_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
if (INSOValidateReceipt_YMOOQXBSEWVK_004C0139(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_017C0129(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_BPOAOWMCKONW -= 1; INSOValidateReceipt_BPOAOWMCKONW *= 239; INSOValidateReceipt_BPOAOWMCKONW += 237;  \
INSOValidateReceipt_QNPNWLBOFZHK -= 103; INSOValidateReceipt_QNPNWLBOFZHK *= 3; INSOValidateReceipt_QNPNWLBOFZHK += 2;  \
INSOValidateReceipt_DOYXHHGPPYBR = 202; \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[222]), 193, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_OJYHTERGBWXP_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QNPNWLBOFZHK_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key);
        if (INSOValidateReceipt_YMOOQXBSEWVK_004C0139(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 1 to 237
        INSOValidateReceipt_BPOAOWMCKONW -= 1; INSOValidateReceipt_BPOAOWMCKONW *= 239; INSOValidateReceipt_BPOAOWMCKONW += 237;
        // From 202 to 299
        INSOValidateReceipt_QNPNWLBOFZHK -= 103; INSOValidateReceipt_QNPNWLBOFZHK *= 3; INSOValidateReceipt_QNPNWLBOFZHK += 2;
        // Set to 202
        INSOValidateReceipt_DOYXHHGPPYBR = 202;
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[222]), 193, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_OJYHTERGBWXP_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QNPNWLBOFZHK_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key); \
if (INSOValidateReceipt_YMOOQXBSEWVK_004C0139(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_BPOAOWMCKONW -= 1; INSOValidateReceipt_BPOAOWMCKONW *= 239; INSOValidateReceipt_BPOAOWMCKONW += 237;  \
INSOValidateReceipt_QNPNWLBOFZHK -= 103; INSOValidateReceipt_QNPNWLBOFZHK *= 3; INSOValidateReceipt_QNPNWLBOFZHK += 2;  \
INSOValidateReceipt_DOYXHHGPPYBR = 202; \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion080(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00ACF((INSOValidateReceipt_Strings[111]), 33, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BPOAOWMCKONW_015F00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_DOYXHHGPPYBR_015F00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
        if (INSOValidateReceipt_QNPNWLBOFZHK_004C012B(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_017C0129(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 237 to 318
        INSOValidateReceipt_BPOAOWMCKONW -= 131; INSOValidateReceipt_BPOAOWMCKONW *= 3;
        // From 299 to 63
        INSOValidateReceipt_QNPNWLBOFZHK += 79; INSOValidateReceipt_QNPNWLBOFZHK /= 6;
        // Set to 431
        INSOValidateReceipt_FYFXWABLASZB = 431;
        // From 431 to 176
        INSOValidateReceipt_OJYHTERGBWXP += 273; INSOValidateReceipt_OJYHTERGBWXP /= 4;
        // From 278 to 248
        INSOValidateReceipt_HZQFHDXHSEOJ += 218; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;
        // Set to 140
        INSOValidateReceipt_DOYXHHGPPYBR = 140;
        // From 431 to 67
        INSOValidateReceipt_FHYWANPGOPLF += 105; INSOValidateReceipt_FHYWANPGOPLF /= 8;
        // Set to 53
        INSOValidateReceipt_YMOOQXBSEWVK = 53;
        INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion080(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00ACF((INSOValidateReceipt_Strings[111]), 33, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BPOAOWMCKONW_015F00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_DOYXHHGPPYBR_015F00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
if (INSOValidateReceipt_QNPNWLBOFZHK_004C012B(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_017C0129(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_BPOAOWMCKONW -= 131; INSOValidateReceipt_BPOAOWMCKONW *= 3;  \
INSOValidateReceipt_QNPNWLBOFZHK += 79; INSOValidateReceipt_QNPNWLBOFZHK /= 6;  \
INSOValidateReceipt_FYFXWABLASZB = 431; \
INSOValidateReceipt_OJYHTERGBWXP += 273; INSOValidateReceipt_OJYHTERGBWXP /= 4;  \
INSOValidateReceipt_HZQFHDXHSEOJ += 218; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;  \
INSOValidateReceipt_DOYXHHGPPYBR = 140; \
INSOValidateReceipt_FHYWANPGOPLF += 105; INSOValidateReceipt_FHYWANPGOPLF /= 8;  \
INSOValidateReceipt_YMOOQXBSEWVK = 53; \
INSOValidateReceipt_CFRelease_004C01DC(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion080(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00ACF((INSOValidateReceipt_Strings[111]), 33, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BPOAOWMCKONW_015F00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_DOYXHHGPPYBR_015F00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_key);
        if (INSOValidateReceipt_QNPNWLBOFZHK_004C012B(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 237 to 318
        INSOValidateReceipt_BPOAOWMCKONW -= 131; INSOValidateReceipt_BPOAOWMCKONW *= 3;
        // From 299 to 63
        INSOValidateReceipt_QNPNWLBOFZHK += 79; INSOValidateReceipt_QNPNWLBOFZHK /= 6;
        // Set to 431
        INSOValidateReceipt_FYFXWABLASZB = 431;
        // From 431 to 176
        INSOValidateReceipt_OJYHTERGBWXP += 273; INSOValidateReceipt_OJYHTERGBWXP /= 4;
        // From 278 to 248
        INSOValidateReceipt_HZQFHDXHSEOJ += 218; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;
        // Set to 140
        INSOValidateReceipt_DOYXHHGPPYBR = 140;
        // From 431 to 67
        INSOValidateReceipt_FHYWANPGOPLF += 105; INSOValidateReceipt_FHYWANPGOPLF /= 8;
        // Set to 53
        INSOValidateReceipt_YMOOQXBSEWVK = 53;
        INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion080(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00ACF((INSOValidateReceipt_Strings[111]), 33, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BPOAOWMCKONW_015F00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_DOYXHHGPPYBR_015F00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_key); \
if (INSOValidateReceipt_QNPNWLBOFZHK_004C012B(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_BPOAOWMCKONW -= 131; INSOValidateReceipt_BPOAOWMCKONW *= 3;  \
INSOValidateReceipt_QNPNWLBOFZHK += 79; INSOValidateReceipt_QNPNWLBOFZHK /= 6;  \
INSOValidateReceipt_FYFXWABLASZB = 431; \
INSOValidateReceipt_OJYHTERGBWXP += 273; INSOValidateReceipt_OJYHTERGBWXP /= 4;  \
INSOValidateReceipt_HZQFHDXHSEOJ += 218; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;  \
INSOValidateReceipt_DOYXHHGPPYBR = 140; \
INSOValidateReceipt_FHYWANPGOPLF += 105; INSOValidateReceipt_FHYWANPGOPLF /= 8;  \
INSOValidateReceipt_YMOOQXBSEWVK = 53; \
INSOValidateReceipt_CFRelease_004C0130(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptHash09B(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3;
        CFMutableDataRef INSOValidateReceipt_data4;
        unsigned char INSOValidateReceipt_digest[483];
        volatile int INSOValidateReceipt_counter = 10; INSOValidateReceipt_counter -= 5; INSOValidateReceipt_counter *= 4;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value;
        CFNumberRef INSOValidateReceipt_key;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash");
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue;
        INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData;
        INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash;
        INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key);
        INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_00DF01AA(NULL, INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1) + INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2));
        INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1));
        INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2));
        CC_SHA1_CTX INSOValidateReceipt_hashctx1;
        INSOValidateReceipt_CC_SHA1_Init_00CD00D0(&INSOValidateReceipt_hashctx1);
        INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1));
        INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2));
        INSOValidateReceipt_FHYWANPGOPLF_00B10043(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1);
        SHA_CTX INSOValidateReceipt_hashctx2;
        INSOValidateReceipt_SHA1_Init_016500E7(&INSOValidateReceipt_hashctx2);
        INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1));
        INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2));
        INSOValidateReceipt_SHA1_Final_005B0007(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2);
        CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_DOYXHHGPPYBR_004C008C(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter);
        if (!INSOValidateReceipt_BPOAOWMCKONW_004C013E(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid");
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5);
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data1);
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data2);
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data4);
            INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5);
            goto INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5);
        // Global variables computation
        // From 63 to 345
        INSOValidateReceipt_QNPNWLBOFZHK -= 14; INSOValidateReceipt_QNPNWLBOFZHK *= 7; INSOValidateReceipt_QNPNWLBOFZHK += 2;
        // From 431 to 106
        INSOValidateReceipt_FYFXWABLASZB += 205; INSOValidateReceipt_FYFXWABLASZB /= 6;
        // From 176 to 370
        INSOValidateReceipt_OJYHTERGBWXP -= 84; INSOValidateReceipt_OJYHTERGBWXP *= 4; INSOValidateReceipt_OJYHTERGBWXP += 2;
        // From 248 to 414
        INSOValidateReceipt_HZQFHDXHSEOJ -= 110; INSOValidateReceipt_HZQFHDXHSEOJ *= 3;
        // From 53 to 382
        INSOValidateReceipt_YMOOQXBSEWVK -= 11; INSOValidateReceipt_YMOOQXBSEWVK *= 9; INSOValidateReceipt_YMOOQXBSEWVK += 4;
    INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail:
        INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data4);
    }
#else
#define INSOValidateReceipt_CheckReceiptHash09B(INSOValidateReceipt_ctx) { \
CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3; \
CFMutableDataRef INSOValidateReceipt_data4; \
unsigned char INSOValidateReceipt_digest[483]; \
volatile int INSOValidateReceipt_counter = 10; INSOValidateReceipt_counter -= 5; INSOValidateReceipt_counter *= 4;  \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value; \
CFNumberRef INSOValidateReceipt_key; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash"); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue; \
INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData; \
INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash; \
INSOValidateReceipt_key = INSOValidateReceipt_FYFXWABLASZB_004C01AF(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_YMOOQXBSEWVK_004C0035((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_key); \
INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_00DF01AA(NULL, INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1) + INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2)); \
INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1)); \
INSOValidateReceipt_HZQFHDXHSEOJ_015F00F8(INSOValidateReceipt_data4, INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2)); \
CC_SHA1_CTX INSOValidateReceipt_hashctx1; \
INSOValidateReceipt_CC_SHA1_Init_00CD00D0(&INSOValidateReceipt_hashctx1); \
INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1)); \
INSOValidateReceipt_CC_SHA1_Update_00CD0003(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2)); \
INSOValidateReceipt_FHYWANPGOPLF_00B10043(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1); \
SHA_CTX INSOValidateReceipt_hashctx2; \
INSOValidateReceipt_SHA1_Init_016500E7(&INSOValidateReceipt_hashctx2); \
INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data1)); \
INSOValidateReceipt_SHA1_Update_0165000C(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QNPNWLBOFZHK_00DF003F(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_015F0116(INSOValidateReceipt_data2)); \
INSOValidateReceipt_SHA1_Final_005B0007(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2); \
CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_DOYXHHGPPYBR_004C008C(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter); \
if (!INSOValidateReceipt_BPOAOWMCKONW_004C013E(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid"); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00CD00A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data1); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data2); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data4); \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5); \
goto INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data5); \
INSOValidateReceipt_QNPNWLBOFZHK -= 14; INSOValidateReceipt_QNPNWLBOFZHK *= 7; INSOValidateReceipt_QNPNWLBOFZHK += 2;  \
INSOValidateReceipt_FYFXWABLASZB += 205; INSOValidateReceipt_FYFXWABLASZB /= 6;  \
INSOValidateReceipt_OJYHTERGBWXP -= 84; INSOValidateReceipt_OJYHTERGBWXP *= 4; INSOValidateReceipt_OJYHTERGBWXP += 2;  \
INSOValidateReceipt_HZQFHDXHSEOJ -= 110; INSOValidateReceipt_HZQFHDXHSEOJ *= 3;  \
INSOValidateReceipt_YMOOQXBSEWVK -= 11; INSOValidateReceipt_YMOOQXBSEWVK *= 9; INSOValidateReceipt_YMOOQXBSEWVK += 4;  \
INSOValidateReceipt_CheckReceiptHash09B_INSOValidateReceipt_bail: \
INSOValidateReceipt_CFRelease_015F0071(INSOValidateReceipt_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_FYFXWABLASZB_015F006A(NULL, INSOValidateReceipt_QNPNWLBOFZHK_015F0159());
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_HZQFHDXHSEOJ_015F019E(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_YMOOQXBSEWVK_015F017E((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
        if (INSOValidateReceipt_date2 && INSOValidateReceipt_OJYHTERGBWXP_015F0172(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00B100A9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1);
            INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1);
        }
        // Global variables computation
        // From 106 to 227
        INSOValidateReceipt_FYFXWABLASZB -= 50; INSOValidateReceipt_FYFXWABLASZB *= 4; INSOValidateReceipt_FYFXWABLASZB += 3;
        // From 370 to 202
        INSOValidateReceipt_OJYHTERGBWXP += 236; INSOValidateReceipt_OJYHTERGBWXP /= 3;
        // From 414 to 299
        INSOValidateReceipt_HZQFHDXHSEOJ += 184; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;
        // From 67 to 397
        INSOValidateReceipt_FHYWANPGOPLF -= 11; INSOValidateReceipt_FHYWANPGOPLF *= 7; INSOValidateReceipt_FHYWANPGOPLF += 5;
        // From 382 to 237
        INSOValidateReceipt_YMOOQXBSEWVK += 329; INSOValidateReceipt_YMOOQXBSEWVK /= 3;
        INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1);
    }
#else
#define INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_FYFXWABLASZB_015F006A(NULL, INSOValidateReceipt_QNPNWLBOFZHK_015F0159()); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_HZQFHDXHSEOJ_015F019E(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_YMOOQXBSEWVK_015F017E((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
if (INSOValidateReceipt_date2 && INSOValidateReceipt_OJYHTERGBWXP_015F0172(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00B100A9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1); \
} \
INSOValidateReceipt_FYFXWABLASZB -= 50; INSOValidateReceipt_FYFXWABLASZB *= 4; INSOValidateReceipt_FYFXWABLASZB += 3;  \
INSOValidateReceipt_OJYHTERGBWXP += 236; INSOValidateReceipt_OJYHTERGBWXP /= 3;  \
INSOValidateReceipt_HZQFHDXHSEOJ += 184; INSOValidateReceipt_HZQFHDXHSEOJ /= 2;  \
INSOValidateReceipt_FHYWANPGOPLF -= 11; INSOValidateReceipt_FHYWANPGOPLF *= 7; INSOValidateReceipt_FHYWANPGOPLF += 5;  \
INSOValidateReceipt_YMOOQXBSEWVK += 329; INSOValidateReceipt_YMOOQXBSEWVK /= 3;  \
INSOValidateReceipt_CFRelease_004C0071(INSOValidateReceipt_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2;
        CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases");
        INSOValidateReceipt_key1 = INSOValidateReceipt_YMOOQXBSEWVK_004C00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        // Extract InApp Purchase
        CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers;
        CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_OJYHTERGBWXP_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1);
        if (INSOValidateReceipt_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                Boolean INSOValidateReceipt_found = false;
                // Iterate over the purchases
                for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) {
                    CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_purchases, INSOValidateReceipt_index2);
                    INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer;
                    INSOValidateReceipt_key2 = INSOValidateReceipt_YMOOQXBSEWVK_004C00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
                    CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_OJYHTERGBWXP_00DF00CA(INSOValidateReceipt_purchase, INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFRelease_00DF01DC(INSOValidateReceipt_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (INSOValidateReceipt_HZQFHDXHSEOJ_015F012B(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) {
                        INSOValidateReceipt_found |= true;
                        (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!INSOValidateReceipt_found) {
                    (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the INSOValidateReceipt_idents and call the block back
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
            }
        }
        INSOValidateReceipt_CFRelease_00DF01DC(INSOValidateReceipt_key1);
    }
#else
#define INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_ctx) { \
CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2; \
CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_YMOOQXBSEWVK_004C00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers; \
CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_OJYHTERGBWXP_00DF00CA((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1); \
if (INSOValidateReceipt_purchases) { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
Boolean INSOValidateReceipt_found = false; \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) { \
CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_purchases, INSOValidateReceipt_index2); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer; \
INSOValidateReceipt_key2 = INSOValidateReceipt_YMOOQXBSEWVK_004C00ED(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_OJYHTERGBWXP_00DF00CA(INSOValidateReceipt_purchase, INSOValidateReceipt_key2); \
INSOValidateReceipt_CFRelease_00DF01DC(INSOValidateReceipt_key2); \
if (INSOValidateReceipt_HZQFHDXHSEOJ_015F012B(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) { \
INSOValidateReceipt_found |= true; \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase)); \
} \
} \
if (!INSOValidateReceipt_found) { \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
} else { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_FYFXWABLASZB_004C00E3(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_FHYWANPGOPLF_004C018D(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
INSOValidateReceipt_CFRelease_00DF01DC(INSOValidateReceipt_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up");
        CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data };
        if (INSOValidateReceipt_references[0]) {
            INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[0]);
            INSOValidateReceipt_references[0] = NULL;
        }
        if (INSOValidateReceipt_references[1]) {
            INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[1]);
            INSOValidateReceipt_references[1] = NULL;
        }
        if (INSOValidateReceipt_references[2]) {
            INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[2]);
            INSOValidateReceipt_references[2] = NULL;
        }
        if (INSOValidateReceipt_references[3]) {
            INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[3]);
            INSOValidateReceipt_references[3] = NULL;
        }
    }
#else
#define INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up"); \
CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data }; \
if (INSOValidateReceipt_references[0]) { \
INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[0]); \
INSOValidateReceipt_references[0] = NULL; \
} \
if (INSOValidateReceipt_references[1]) { \
INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[1]); \
INSOValidateReceipt_references[1] = NULL; \
} \
if (INSOValidateReceipt_references[2]) { \
INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[2]); \
INSOValidateReceipt_references[2] = NULL; \
} \
if (INSOValidateReceipt_references[3]) { \
INSOValidateReceipt_CFRelease_015F0130(INSOValidateReceipt_references[3]); \
INSOValidateReceipt_references[3] = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckInAppPurchases(NSArray *_inapp_identifiers, INSOValidateReceipt_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point");
        // Create contexts
        INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block);
        if (!INSOValidateReceipt_setjmp_017C0098(INSOValidateReceipt_JumpBuf)) {
            // Call each step
            INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_LoadReceipt042((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_GetGUID04E((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckBundleVersion05F((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_GetReceiptInformation063((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptSignature06E((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptVersion080((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptHash09B((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1));
            INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1));
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define INSOValidateReceipt_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point"); \
INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block); \
if (!INSOValidateReceipt_setjmp_017C0098(INSOValidateReceipt_JumpBuf)) { \
INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_LoadReceipt042((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_GetGUID04E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckBundleVersion05F((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_GetReceiptInformation063((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptSignature06E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptVersion080((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptHash09B((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1)); \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

