//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.intangiblesoftware.menslacrossestats
// CFBundleVersion            : 5
// Prefix                     : INSOValidateReceipt
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 1
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __INSOValidateReceipt_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*INSOValidateReceipt_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^INSOValidateReceipt_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _INSOValidateReceipt_ReceiptAttributeType {
        
        // Bundle identifier
        INSOValidateReceipt_ReceiptAttributeTypeBundleId = 2,
        // Application version
        INSOValidateReceipt_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        INSOValidateReceipt_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        INSOValidateReceipt_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        INSOValidateReceipt_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        INSOValidateReceipt_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        INSOValidateReceipt_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        INSOValidateReceipt_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        INSOValidateReceipt_StoreNone = 264,
        // Bundle identifier
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2) + 1,
        // Application version
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleVersion << 2),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersionData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 2) + 1,
        // Opaque value
        INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue << 2),
        // Hash value
        INSOValidateReceipt_StoreReceiptAttributeTypeHash = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeHash << 2),
        // In-app purchase receipt
        INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase << 2),
        // Original Application Version
        INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion << 2),
        // Receipt Expiration Date
        INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeExpirationDate << 2),
        // Quantity
        INSOValidateReceipt_StoreInAppAttributeTypeQuantity = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeQuantity << 2),
        // Product identifier
        INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeProductIdentifer << 2),
        // Transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer << 2),
        // Purchase date
        INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypePurchaseDate << 2),
        // Original transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer << 2),
        // Original purchase date
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate << 2),
        // Subscription Expiration Date
        INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate << 2),
        // Web Order Line Item ID
        INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId << 2),
        // Cancellation Date
        INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeCancellationDate << 2)
        
    } INSOValidateReceipt_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleId]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeQuantity]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _INSOValidateReceipt_CheckingContext {
        CFTypeRef dummy0002;
        CFTypeRef dummy0005;
        CFTypeRef ca_data;
        CFTypeRef dummy0009;
        CFTypeRef inapp_identifiers;
        CFTypeRef receipt_dict;
        CFTypeRef inapp_block;
        CFTypeRef dummy0008;
        CFTypeRef receipt_data;
        CFTypeRef dummy0000;
        CFTypeRef guid_data;
        CFTypeRef dummy0004;
        CFTypeRef dummy0006;
        CFTypeRef dummy0007;
        CFTypeRef dummy0003;
        CFTypeRef main_bundle;
        CFTypeRef dummy0001;
    } INSOValidateReceipt_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _INSOValidateReceipt_ParsingContext {
        CFTypeRef dictionary;
        CFTypeRef dummy0003;
        const unsigned char * ptr;
        CFTypeRef dummy0000;
        CFTypeRef dummy0004;
        struct _INSOValidateReceipt_ParsingContext * parent;
        const unsigned char * end;
        CFTypeRef dummy0002;
        CFTypeRef dummy0001;
    } INSOValidateReceipt_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__INSOValidateReceipt_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__INSOValidateReceipt_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__INSOValidateReceipt_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__INSOValidateReceipt_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__INSOValidateReceipt_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__INSOValidateReceipt_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__INSOValidateReceipt_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__INSOValidateReceipt_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__INSOValidateReceipt_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__INSOValidateReceipt_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__INSOValidateReceipt_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__INSOValidateReceipt_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__INSOValidateReceipt_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__INSOValidateReceipt_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__INSOValidateReceipt_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__INSOValidateReceipt_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__INSOValidateReceipt_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__INSOValidateReceipt_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__INSOValidateReceipt_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__INSOValidateReceipt_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__INSOValidateReceipt_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__INSOValidateReceipt_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__INSOValidateReceipt_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__INSOValidateReceipt_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__INSOValidateReceipt_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__INSOValidateReceipt_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__INSOValidateReceipt_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__INSOValidateReceipt_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__INSOValidateReceipt_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__INSOValidateReceipt_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__INSOValidateReceipt_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__INSOValidateReceipt_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__INSOValidateReceipt_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__INSOValidateReceipt_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__INSOValidateReceipt_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__INSOValidateReceipt_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__INSOValidateReceipt_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__INSOValidateReceipt_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__INSOValidateReceipt_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__INSOValidateReceipt_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__INSOValidateReceipt_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__INSOValidateReceipt_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__INSOValidateReceipt_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__INSOValidateReceipt_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__INSOValidateReceipt_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__INSOValidateReceipt_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__INSOValidateReceipt_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__INSOValidateReceipt_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__INSOValidateReceipt_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__INSOValidateReceipt_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__INSOValidateReceipt_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__INSOValidateReceipt_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__INSOValidateReceipt_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__INSOValidateReceipt_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__INSOValidateReceipt_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__INSOValidateReceipt_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__INSOValidateReceipt_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__INSOValidateReceipt_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__INSOValidateReceipt_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__INSOValidateReceipt_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__INSOValidateReceipt_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__INSOValidateReceipt_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__INSOValidateReceipt_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__INSOValidateReceipt_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__INSOValidateReceipt_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__INSOValidateReceipt_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__INSOValidateReceipt_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__INSOValidateReceipt_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__INSOValidateReceipt_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__INSOValidateReceipt_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__INSOValidateReceipt_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__INSOValidateReceipt_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__INSOValidateReceipt_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__INSOValidateReceipt_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__INSOValidateReceipt_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__INSOValidateReceipt_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__INSOValidateReceipt_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__INSOValidateReceipt_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__INSOValidateReceipt_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__INSOValidateReceipt_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *INSOValidateReceipt_Strings[483] = {
        // "CFBundleUnloadExecutable" / M(Xor3) / S(221) / L(24)
        "\xbd\xb8\xbc\x8b\x90\x9a\x92\x9b\xab\x90\x92\x91\x9f\x9a\xbb\x86\x9b\x9d\x8b\x8a\x9f\x9c\x92\x9b\xfe\xe3\xe8\x0d\x12\xb7\x0e\xf5\xe7",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(93) / L(25)
        "\x19\x1c\x1e\x33\x39\x2e\x33\x35\x34\x3b\x28\x23\x19\x28\x3f\x3b\x2e\x3f\x17\x2f\x2e\x3b\x38\x36\x3f\x5a\xb1\xcb\x7f\x10\x10\x73\x25\x10",
        // "UIDevice" / M(Rot) / S(132) / L(8)
        "\xd9\xcd\xc8\xe9\xfa\xed\xe7\xe9\x84\x15\x8d\x91\xa9\xeb\xe1\xad",
        // "SHA1" / M(Xor3) / S(118) / L(4)
        "\xd5\xce\xc7\xb7\x86\x0d\xd7\x2f\x92\x8b\xf2\x7a\x0f\x91\x2a\xa2",
        // "ASN1_get_object" / M(Xor3) / S(153) / L(15)
        "\xe8\xfa\xe7\x98\xf6\xce\xcc\xdd\xf6\xc6\xcb\xc3\xcc\xca\xdd\xa9",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(127) / L(31)
        "\x14\x3c\x39\x2b\x06\x0f\x1a\x3b\x16\x1c\x0b\x16\x10\x11\x1e\x0d\x06\x29\x1e\x13\x0a\x1a\x3c\x1e\x13\x13\x3d\x1e\x1c\x14\x0c\x7f",
        // "ASN1_INTEGER_get" / M(Xor1) / S(20) / L(16)
        "\x55\x47\x5a\x25\x4b\x5d\x5a\x40\x51\x53\x51\x46\x4b\x73\x71\x60\x14",
        // "CFDataCreate" / M(Xor1) / S(198) / L(12)
        "\x85\x80\x82\xa7\xb2\xa7\x85\xb4\xa3\xa7\xb2\xa3\xc6\x51\x11\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x9c\xc5\x7f\x8b\xd6\xa6\x91\x7e\x6f\xa6\xe0\x2e\x99\xa1\x40\xe3\x56\x11\x69\x4d\x92\x6e\x01\x13\xb0\x8b\x9e\x46\x23\xc7\x90\x39",
        // "CC_SHA1_Update" / M(Xor1) / S(155) / L(14)
        "\xd8\xd8\xc4\xc8\xd3\xda\xaa\xc4\xce\xeb\xff\xfa\xef\xfe\x9b\x9e",
        // "" / M(None) / S(0) / L(0)
        "\x25\x15\xfc\xc3\x3e\x6d\xd4\x69\x7f\x7b\xfe\x63\x45\x8c\x8d\x7b\xbd\xf2\x2c\xaf\x91\x5f\x67\x88\x52\x8a\x9c\x55\x5f\xd3\x7e\xd5",
        // "CFReadStreamRead" / M(Xor1) / S(92) / L(16)
        "\x1f\x1a\x0e\x39\x3d\x38\x0f\x28\x2e\x39\x3d\x31\x0e\x39\x3d\x38\x5c",
        // "" / M(None) / S(0) / L(0)
        "\xef\x72\x5b\xe2\x4b\x23\x0d\x0c\x2d\xe9\x63\x78\x1f\x19\xd8\x47\x80\xf4\xae\x7a\xbf\xdc\x82\xa8\x3f\x52\xdc\x35\x1b\x32\x46\xc8",
        // "ASN1_INTEGER_get" / M(Rot) / S(195) / L(16)
        "\x04\x16\x11\xf4\x22\x0c\x11\x17\x08\x0a\x08\x15\x22\x2a\x28\x37\xc3",
        // "X509_STORE_add_cert" / M(Rot) / S(39) / L(19)
        "\x7f\x5c\x57\x60\x86\x7a\x7b\x76\x79\x6c\x86\x88\x8b\x8b\x86\x8a\x8c\x99\x9b\x27",
        // "CFDictionaryAddValue" / M(Rot) / S(240) / L(20)
        "\x33\x36\x34\x59\x53\x64\x59\x5f\x5e\x51\x62\x69\x31\x54\x54\x46\x51\x5c\x65\x55\xf0",
        // "X509_digest" / M(Xor2) / S(214) / L(11)
        "\x9e\xf3\xf6\xff\x99\xa2\xaf\xa1\xa3\xb5\xb2\xc6\xf8\x0b\x1d\xc1",
        // "CFStringCreateWithCString" / M(Xor4) / S(241) / L(25)
        "\x41\x44\x51\x76\x70\x6b\x6c\x65\x41\x70\x67\x63\x76\x67\x55\x6b\x76\x6a\x41\x51\x76\x70\x6b\x6c\x65\x02\x9e\xc5\xb4\xd1\x75\x6b\xf3\x2c",
        // "" / M(None) / S(0) / L(0)
        "\xfc\xa8\x4e\x48\x87\x78\x05\x1f\x34\xef\x4d\x00\xd0\x9f\x15\x3a\xb1\x44\x80\x13\x86\xd0\xd6\xf7\x21\xe1\x91\x16\x46\x6c\x0c\xc6",
        // "init" / M(Xor3) / S(166) / L(4)
        "\xdf\xd8\xdf\xc2\xb6\xf9\x68\xdc\x03\xbf\x09\x2a\x86\x22\x89\xfd",
        // "objc_getClass" / M(Xor1) / S(151) / L(13)
        "\xf8\xf5\xfd\xf4\xc8\xf0\xf2\xe3\xd4\xfb\xf6\xe4\xe4\x97\x41\x7f",
        // "sha1" / M(Xor4) / S(15) / L(4)
        "\x83\x98\x91\xc1\xf0\x17\x64\x76\x1f\x28\xa1\x79\xea\x50\x8e\xdd",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor2) / S(196) / L(29)
        "\x89\xa1\xa4\xb6\x9b\x92\x87\xa6\x8b\x81\x96\x8b\x8d\x8c\x83\x90\x9b\xa9\x87\x9b\xa1\x83\x8e\x8e\xa0\x83\x81\x89\x91\xe2\x27\xd0\x08\x70\x72\x9c\x00\xfd",
        // "" / M(None) / S(0) / L(0)
        "\x9c\x64\x96\x5f\x41\xe0\xd7\x57\xf3\xf6\xeb\x22\x54\xcb\x72\xb4\x20\xff\x9e\x55\x9e\x78\xba\x3c\x3f\x3b\xf3\x9f\xe7\x54\x36\x04",
        // "SHA1_Update" / M(Xor1) / S(38) / L(11)
        "\x75\x6e\x67\x17\x79\x73\x56\x42\x47\x52\x43\x26\x18\x34\x47\xd9",
        // "" / M(None) / S(0) / L(0)
        "\x98\xf7\x44\xa1\x74\x24\xb1\x24\xe7\x86\x12\x9e\xda\x18\x76\xbf\x16\x48\x68\xc6\x04\x70\xd6\xfa\x1b\x9b\xe0\xf0\x36\x90\xa4\x9a",
        // "" / M(None) / S(0) / L(0)
        "\xce\x28\xdd\x06\x29\x33\xa3\xbb\xe2\x5b\x23\x27\x1a\xdf\x6d\xf9\x51\xec\xc6\xbf\x28\xc4\x5f\x52\x0b\x8b\x00\xe1\x48\x9a\x08\x15",
        // "CFStringCreateWithCString" / M(Xor2) / S(176) / L(25)
        "\xd1\xd4\xc1\xe6\xe0\xfb\xfc\xf5\xd1\xe0\xf7\xf3\xe6\xf7\xc5\xfb\xe6\xfa\xd1\xc1\xe6\xe0\xfb\xfc\xf5\x92\x6f\xf5\x34\x6e\x18\x55\xc6\x9b",
        // "" / M(None) / S(0) / L(0)
        "\xc3\x8c\x29\x69\x1c\xf6\xed\x61\x30\x6e\xfc\x68\xe2\x11\xde\x05\x7c\xd1\x43\x53\x88\xce\xe3\xad\x0c\x3e\xd2\xf3\xa0\xbd\xb1\x7a",
        // "UIDevice" / M(Xor3) / S(19) / L(8)
        "\x76\x6a\x67\x46\x55\x4a\x40\x46\x23\x70\x39\x52\xc5\x23\xa8\x9b",
        // "BIO_free" / M(Xor1) / S(131) / L(8)
        "\xc1\xca\xcc\xdc\xe5\xf1\xe6\xe6\x83\x47\x25\x5f\x8b\x77\xc3\x75",
        // "dlopen" / M(Xor4) / S(193) / L(6)
        "\x74\x7c\x7f\x60\x75\x7e\x10\x07\xd1\x48\x97\xe9\x8d\x72\x4a\x29",
        // "" / M(None) / S(0) / L(0)
        "\x54\x8f\x50\xeb\x8e\xf6\xe9\x53\x60\x00\xf8\x69\x98\x49\x87\xb2\x02\x9e\xcc\x39\xf2\x1d\x17\xe7\x82\x47\x29\x7c\xa3\xc9\xc6\x6a",
        // "CFDataGetLength" / M(Xor2) / S(4) / L(15)
        "\x57\x52\x50\x75\x60\x75\x53\x71\x60\x58\x71\x7a\x73\x60\x7c\x14",
        // "BIO_s_mem" / M(Rot) / S(122) / L(9)
        "\xbc\xc3\xc9\xd9\xed\xd9\xe7\xdf\xe7\x7a\x17\xb6\x7f\x30\x4b\xf3",
        // "" / M(None) / S(0) / L(0)
        "\xff\x25\xa6\xfe\x30\xd2\xc3\x95\xb5\xae\x60\xa3\x4f\xb4\xb3\x2a\xf7\x3c\xc8\xa9\x97\x16\x83\x68\x38\xe8\xec\xa6\xb5\x96\x8b\xd8",
        // "CFDictionaryGetValue" / M(Xor2) / S(182) / L(20)
        "\xe0\xe5\xe7\xca\xc0\xd7\xca\xcc\xcd\xc2\xd1\xda\xe4\xc6\xd7\xf5\xc2\xcf\xd6\xc6\xa3",
        // "RTLD_MAIN_ONLY" / M(Xor4) / S(75) / L(14)
        "\xe2\xe4\xfc\xf4\xef\xfd\xf1\xf9\xfe\xef\xff\xfe\xfc\xe9\xb0\x86",
        // "sk_free" / M(Xor2) / S(103) / L(7)
        "\x04\x1c\x28\x11\x05\x12\x12\x77\x2a\x72\x95\xd8\x61\x41\x2d\x71",
        // "" / M(None) / S(0) / L(0)
        "\x92\xb9\x66\x91\xde\x4b\x67\xf1\x19\x9c\xc2\xf9\x41\x7f\xeb\x1d\xbe\xd8\x6f\x69\x8b\x2a\x3a\x19\x6e\xb7\xb9\xd1\x9f\x02\x87\x71",
        // "CFArrayGetCount" / M(Xor2) / S(246) / L(15)
        "\xa5\xa0\xa7\x94\x94\x87\x9f\xa1\x83\x92\xa5\x89\x93\x88\x92\xe6",
        // "" / M(None) / S(0) / L(0)
        "\xdc\x05\xff\xc0\x0d\xc5\xa0\x65\xe1\xb5\x07\x68\x33\x66\xef\x85\x66\x66\x83\x62\x76\x96\x1e\x06\x38\x41\xa1\x7f\x60\x9b\x5c\x4e",
        // "" / M(None) / S(0) / L(0)
        "\x50\x8f\xcd\xc5\x39\xd6\x15\x30\x07\xff\xec\xe5\xa5\x2d\xa2\x8f\xb9\x33\x7c\xc2\xc6\xcb\x52\xbb\xf4\x1d\x34\x26\xd8\x9b\xde\x0b",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Rot) / S(40) / L(59)
        "\x5e\x59\x62\x59\x6d\x62\x5d\x6a\x62\x5e\x5e\x62\x5a\x6b\x62\x5d\x61\x62\x5b\x69\x62\x58\x60\x62\x6e\x6e\x62\x5d\x60\x62\x6c\x59\x62\x5c\x69\x62\x6d\x5a\x62\x5a\x5c\x62\x5d\x5a\x62\x6c\x59\x62\x61\x60\x62\x6c\x6e\x62\x5e\x6b\x62\x5e\x58\x28\x03\x22\x98\x3a\x66\x7a\x27\x3f",
        // "identifierForVendor" / M(Xor3) / S(154) / L(19)
        "\xc7\xca\xcb\xc0\xda\xc7\xc8\xc7\xcb\xdc\xe8\xc1\xdc\xf8\xcb\xc0\xca\xc1\xdc\xae",
        // "appStoreReceiptURL" / M(Xor1) / S(243) / L(18)
        "\x92\x83\x83\xa0\x87\x9c\x81\x96\xa1\x96\x90\x96\x9a\x83\x87\xa6\xa1\xbf\xf3",
        // "sk_value" / M(Xor2) / S(47) / L(8)
        "\x4c\x54\x60\x49\x5e\x53\x4a\x5a\x3f\xf0\x5c\x24\x7b\xcc\x7d\x90",
        // "longjmp" / M(Xor1) / S(2) / L(7)
        "\x6e\x6d\x6c\x65\x68\x6f\x72\x02\x6a\xc8\xff\xf7\x24\x46\x73\xc8",
        // "X509_get_ext_by_OBJ" / M(Rot) / S(90) / L(19)
        "\xb2\x8f\x8a\x93\xb9\xc1\xbf\xce\xb9\xbf\xd2\xce\xb9\xbc\xd3\xb9\xa9\x9c\xa4\x5a",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(74) / L(21)
        "\x37\x1f\x1a\x08\x25\x2c\x39\x1d\x2e\x2e\x3d\x25\x1f\x3d\x30\x30\x1e\x3d\x3f\x37\x2f\x5c",
        // "X509_STORE_new" / M(Rot) / S(94) / L(14)
        "\xb6\x93\x8e\x97\xbd\xb1\xb2\xad\xb0\xa3\xbd\xcc\xc3\xd5\x5e\x51",
        // "kCFBundleIdentifierKey" / M(Xor1) / S(139) / L(22)
        "\xe0\xc8\xcd\xc9\xfe\xe5\xef\xe7\xee\xc2\xef\xee\xe5\xff\xe2\xed\xe2\xee\xf9\xc0\xee\xf2\x8b",
        // "ASN1_get_object" / M(Xor1) / S(97) / L(15)
        "\x20\x32\x2f\x50\x3e\x06\x04\x15\x3e\x0e\x03\x0b\x04\x02\x15\x61",
        // "X509_digest" / M(Xor3) / S(66) / L(11)
        "\x0a\x67\x62\x6b\x0d\x36\x3b\x35\x37\x21\x26\x52\x53\x45\x7a\x01",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(79) / L(66)
        "\x7e\xa2\xc8\xc2\xc3\xb4\xbc\x7e\x9b\xb8\xb1\xc1\xb0\xc1\xc8\x7e\x95\xc1\xb0\xbc\xb4\xc6\xbe\xc1\xba\xc2\x7e\x92\xbe\xc1\xb4\x95\xbe\xc4\xbd\xb3\xb0\xc3\xb8\xbe\xbd\x7d\xb5\xc1\xb0\xbc\xb4\xc6\xbe\xc1\xba\x7e\x92\xbe\xc1\xb4\x95\xbe\xc4\xbd\xb3\xb0\xc3\xb8\xbe\xbd\x4f",
        // "" / M(None) / S(0) / L(0)
        "\x5e\x16\x69\xa2\x00\x01\xd8\x29\xee\x66\x37\xae\xa2\x37\x67\x06\x4b\x32\x76\xbb\xc4\xf0\xae\xc5\xc0\x70\x31\x6c\xcf\x4d\xcb\x72",
        // "CFStringCompare" / M(Xor3) / S(176) / L(15)
        "\x83\x86\x93\xb4\xb2\xa9\xae\xa7\x83\xaf\xad\xb0\xa1\xb2\xa5\xc0",
        // "OBJ_txt2obj" / M(Rot) / S(50) / L(11)
        "\x81\x74\x7c\x91\xa6\xaa\xa6\x64\xa1\x94\x9c\x32\x68\x37\x8d\x6e",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(84) / L(39)
        "\x97\x9a\xa8\xbd\xc1\xb9\xae\xc3\xc2\xb9\x97\xc6\xb9\xb5\xc8\xb9\xab\xbd\xc8\xbc\xa8\xbd\xc1\xb9\x9d\xc2\xc8\xb9\xc6\xca\xb5\xc0\x9a\xc6\xc3\xc1\x9b\xa1\xa8\x54\x54\x15\x28\x35\xae\x18\xe3\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x25\xd8\x25\xa8\x84\xcd\xbc\xdd\x16\xb3\x95\x74\x28\xe4\xce\x03\x50\x11\x73\xad\x68\x54\x26\x43\xc7\xfb\xcf\x44\xc5\xb0\x9f\x5c",
        // "sk_num" / M(Rot) / S(244) / L(6)
        "\x67\x5f\x53\x62\x69\x61\xf4\x31\x9e\xdc\x10\x56\x75\x35\xef\x30",
        // "EVP_get_digestbyname" / M(Xor2) / S(197) / L(20)
        "\x95\x86\x80\x8f\xb7\xb5\xa4\x8f\xb4\xb9\xb7\xb5\xa3\xa4\xb2\xa9\xbe\xb1\xbd\xb5\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x24\x54\xb3\xb1\xb6\x17\x25\x60\x23\xa3\x9b\x82\xad\x37\xf6\xb5\x89\x99\x11\x09\x32\xe0\x4d\xe4\xdb\xf9\x11\x2d\xb4\x61\x78\xeb",
        // "CFDataCreateMutable" / M(Xor1) / S(87) / L(19)
        "\x14\x11\x13\x36\x23\x36\x14\x25\x32\x36\x23\x32\x1a\x22\x23\x36\x35\x3b\x32\x57",
        // "kCFBundleIdentifierKey" / M(Rot) / S(240) / L(22)
        "\x5b\x33\x36\x32\x65\x5e\x54\x5c\x55\x39\x54\x55\x5e\x64\x59\x56\x59\x55\x62\x3b\x55\x69\xf0",
        // "CFDictionaryCreateMutable" / M(Xor1) / S(137) / L(25)
        "\xca\xcf\xcd\xe0\xea\xfd\xe0\xe6\xe7\xe8\xfb\xf0\xca\xfb\xec\xe8\xfd\xec\xc4\xfc\xfd\xe8\xeb\xe5\xec\x89\x78\xa7\xb2\xac\x23\x9f\xb8\x3b",
        // "CFDateFormatterCreate" / M(Xor4) / S(243) / L(21)
        "\xa1\xa4\xa6\x83\x96\x87\xa4\x8d\x90\x8f\x83\x96\x96\x87\x90\xa1\x90\x87\x83\x96\x87\xe2",
        // "" / M(None) / S(0) / L(0)
        "\x4d\xf8\x88\xdc\x18\xa9\xa4\x82\x2c\x77\x9b\x6c\x13\x03\x0f\x43\xde\xcd\x45\x04\x41\xda\xbe\x5e\x4c\x8b\xed\xa6\x57\x8e\x53\x1d",
        // "CFBundleGetIdentifier" / M(Rot) / S(179) / L(21)
        "\xf6\xf9\xf5\x28\x21\x17\x1f\x18\xfa\x18\x27\xfc\x17\x18\x21\x27\x1c\x19\x1c\x18\x25\xb3",
        // "" / M(None) / S(0) / L(0)
        "\xb4\x86\x42\x7f\x1d\xc3\x12\x32\x52\xe0\xab\x8e\xea\xf0\x5c\x37\xa3\x70\xd2\xb3\xb8\x57\x4b\xe4\x2d\xe8\xc8\x41\x27\xea\xe4\x21",
        // "" / M(None) / S(0) / L(0)
        "\x38\xeb\x56\x1a\x67\x1b\x6f\x10\xee\x1d\xd2\x0e\xc5\xc0\xe0\x01\x71\xd2\xfc\x43\xff\xbc\xa1\xe8\x57\xd2\xc0\xb1\x16\x94\xed\x0f",
        // "start" / M(Xor2) / S(221) / L(5)
        "\xbe\xb9\xac\xbf\xb9\xcd\x01\x7a\x1d\x04\xeb\x52\xaf\x01\x47\xf9",
        // "EVP_MD_CTX_init" / M(Xor2) / S(240) / L(15)
        "\xa5\xb6\xb0\xbf\xad\xa4\xbf\xa3\xb4\xb8\xbf\x89\x8e\x89\x94\xe0",
        // "" / M(None) / S(0) / L(0)
        "\xe6\x6d\x30\xeb\x78\x9b\x9b\xb2\xc1\x31\x4a\xdc\x79\x42\x22\x10\xf6\x03\x39\x41\x63\xe7\xfe\xc1\x19\xb8\x5f\x0a\x49\x9f\x3f\x98",
        // "objc_msgSend" / M(Xor2) / S(251) / L(12)
        "\x84\x89\x81\x88\xb4\x86\x98\x8c\xb8\x8e\x85\x8f\xeb\x73\xaa\xca",
        // "CFArrayGetCount" / M(Xor2) / S(30) / L(15)
        "\x4d\x48\x4f\x7c\x7c\x6f\x77\x49\x6b\x7a\x4d\x61\x7b\x60\x7a\x0e",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor3) / S(68) / L(36)
        "\x2a\x2f\x2b\x1c\x07\x0d\x05\x0c\x2e\x0c\x1d\x3f\x08\x05\x1c\x0c\x2f\x06\x1b\x20\x07\x0f\x06\x2d\x00\x0a\x1d\x00\x06\x07\x08\x1b\x10\x22\x0c\x10\x69",
        // "" / M(None) / S(0) / L(0)
        "\x39\xe1\xf0\x17\x50\x13\xfd\x00\x93\x2e\x2e\x3b\xa2\xa9\xe7\x10\xaf\x06\xdf\x43\x04\xea\x99\x4d\x17\xae\x12\xe2\xa3\xbc\x87\xd0",
        // "d2i_PKCS7_bio" / M(Rot) / S(177) / L(13)
        "\x15\xe3\x1a\x10\x01\xfc\xf4\x04\xe8\x10\x13\x1a\x20\xb1\x3c\x71",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(77) / L(26)
        "\x2d\x28\x3c\x0b\x0f\x0a\x3d\x1a\x1c\x0b\x0f\x03\x2d\x1c\x0b\x0f\x1a\x0b\x39\x07\x1a\x06\x28\x07\x02\x0b\x6e\xf2\x30\x16\x6c\xcd\xd2\xe5\x88",
        // "SHA1_Final" / M(Xor2) / S(189) / L(10)
        "\xfe\xe5\xec\x9c\xf2\xeb\xc4\xc3\xcc\xc1\xad\x3b\x7a\xca\x2b\x8b",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(157) / L(36)
        "\xf2\xf7\xf3\xc4\xdf\xd5\xdd\xd4\xf6\xd4\xc5\xe7\xd0\xdd\xc4\xd4\xf7\xde\xc3\xf8\xdf\xd7\xde\xf5\xd8\xd2\xc5\xd8\xde\xdf\xd0\xc3\xc8\xfa\xd4\xc8\xb1",
        // "EVP_DigestUpdate" / M(Rot) / S(232) / L(16)
        "\x2d\x3e\x38\x47\x2c\x51\x4f\x4d\x5b\x5c\x3d\x58\x4c\x49\x5c\x4d\xe8",
        // "objc_msgSend" / M(Xor1) / S(46) / L(12)
        "\x41\x4c\x44\x4d\x71\x43\x5d\x49\x7d\x4b\x40\x4a\x2e\x19\x0e\xb1",
        // "" / M(None) / S(0) / L(0)
        "\xff\xe9\x1c\x02\x81\xdb\x7a\x7d\xab\x0d\xcf\xfd\xbe\x75\xaf\x96\x63\x9e\x1e\xb1\xf2\xf8\x15\x41\xde\x07\x8a\x60\x79\x03\x99\x95",
        // "BIO_new" / M(Xor4) / S(229) / L(7)
        "\x12\x19\x1f\x0f\x3e\x35\x27\x50\x87\xdd\xc2\x76\x1b\x53\x75\x45",
        // "UIDevice" / M(Xor1) / S(101) / L(8)
        "\x30\x2c\x21\x00\x13\x0c\x06\x00\x65\xdd\xf9\x88\x9a\x91\xa0\x3e",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(50) / L(22)
        "\x51\x0b\x0d\x0c\x51\x12\x17\x1c\x51\x12\x17\x1c\x11\x1c\x14\x1d\x50\x1a\x07\x12\x17\x1c\x7e",
        // "SHA1_Init" / M(Xor1) / S(177) / L(9)
        "\xe2\xf9\xf0\x80\xee\xf8\xdf\xd8\xc5\xb1\x92\x38\x22\x8c\xac\x23",
        // "" / M(None) / S(0) / L(0)
        "\xb2\x7e\xc2\x1c\x5b\xe9\x55\x5c\x77\xb5\x45\xea\x48\x4b\xe7\x83\xcb\x7e\xdc\x41\x16\x1a\x37\x9f\x29\x28\x65\x46\xeb\x7f\x12\x5a",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(254) / L(23)
        "\xb1\x8e\x9b\x90\xad\xad\xb2\xa1\x9f\x9a\x9a\xa1\x9f\x92\x92\xa1\x9a\x97\x99\x9b\x8d\x8a\x8d\xfe\x6f\xf7\xf9\x2a\xa4\x7d\x98\x59",
        // "" / M(None) / S(0) / L(0)
        "\x55\x3a\xa2\xf7\x11\xbb\x42\xa1\xd6\xe7\x09\x31\x55\xe2\x5c\xea\xdd\x85\x4a\xe1\xb8\x30\x4c\x35\x85\x99\x8d\x46\x62\x6e\x84\x1a",
        // "" / M(None) / S(0) / L(0)
        "\xd5\x34\xbb\x0d\x82\x5d\x0e\x16\xfe\x23\xf4\x2b\xd0\x0d\x54\x5d\xb5\xed\xeb\x2c\x79\x6b\x3b\xba\x1c\x98\x7a\x25\x4a\x71\xba\xb0",
        // "dlsym" / M(Xor2) / S(237) / L(5)
        "\x99\x91\x8e\x84\x90\xfd\x31\x66\xa5\x79\x11\x02\xae\x5a\xd6\x7a",
        // "CFDictionarySetValue" / M(Rot) / S(108) / L(20)
        "\xaf\xb2\xb0\xd5\xcf\xe0\xd5\xdb\xda\xcd\xde\xe5\xbf\xd1\xe0\xc2\xcd\xd8\xe1\xd1\x6c",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(25) / L(26)
        "\x28\x2d\x39\x0e\x0a\x0f\x38\x1f\x19\x0e\x0a\x06\x28\x19\x0e\x0a\x1f\x0e\x3c\x02\x1f\x03\x2d\x02\x07\x0e\x6b\xba\x1c\xd9\x8f\x5b\xa9\x02\xf8",
        // "" / M(None) / S(0) / L(0)
        "\xa5\xe4\x7b\x47\x93\xfa\x8b\x13\x5d\xbf\xb8\x73\x3d\x63\xa0\x68\xfa\xde\x5f\xa1\x5c\x8a\xc8\x9b\xe3\x48\x4a\xcb\x63\x75\x1c\x1a",
        // "" / M(None) / S(0) / L(0)
        "\xab\x4e\xdf\xfb\xad\xe9\xe5\xfb\x89\xd2\x3d\x7f\xc1\xbb\xf9\xd3\x0f\xdb\xd7\xf1\x1c\x86\x27\xca\xaa\xbb\xc0\x65\xa8\xaf\x8e\x56",
        // "CFEqual" / M(Xor2) / S(251) / L(7)
        "\xa8\xad\xae\x9a\x9e\x8a\x87\xeb\xd6\xad\x72\x06\x8a\x93\xa4\xc0",
        // "CFBundleGetIdentifier" / M(Xor3) / S(139) / L(21)
        "\xe2\xe7\xe3\xd4\xcf\xc5\xcd\xc4\xe6\xc4\xd5\xe8\xc5\xc4\xcf\xd5\xc8\xc7\xc8\xc4\xd3\xa1",
        // "X509_STORE_new" / M(Xor1) / S(110) / L(14)
        "\x36\x5b\x5e\x57\x31\x3d\x3a\x21\x3c\x2b\x31\x00\x0b\x19\x6e\x6c",
        // "SHA1_Final" / M(Xor3) / S(116) / L(10)
        "\xd7\xcc\xc5\xb5\xdb\xc2\xed\xea\xe5\xe8\x84\xad\x7e\x78\xb1\xad",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(238) / L(40)
        "\xe9\xee\xee\x9a\xea\x9d\xe9\xe9\xed\x9c\xea\xe6\xec\x9e\xef\xe7\x99\x99\xea\xe7\x9b\xee\xeb\x9e\x9a\xed\xed\xeb\xea\xed\x9b\xee\xe6\xe7\x9b\x99\xe9\x9c\xe9\xef\xdf\x5f\x8d\x34\x8d\xf6\x0c\xb3\xbb",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(169) / L(29)
        "\xc2\xea\xef\xfd\xd0\xd9\xcc\xed\xc0\xca\xdd\xc0\xc6\xc7\xc8\xdb\xd0\xe2\xcc\xd0\xea\xc8\xc5\xc5\xeb\xc8\xca\xc2\xda\xa9\x69\x1e\x0c\x11\xd7\x99\x3f\xf4",
        // "" / M(None) / S(0) / L(0)
        "\x08\x84\xd6\x5b\x5e\x0c\xb4\x7e\xff\x00\x8b\xd8\xac\x48\x07\xb4\x37\xfb\x07\x22\x3e\xf1\x7d\x1c\x38\xcb\x9c\x0f\x4d\x03\xab\x3a",
        // "PKCS7_get0_signers" / M(Xor1) / S(41) / L(18)
        "\x79\x62\x6a\x7a\x1e\x76\x4e\x4c\x5d\x19\x76\x5a\x40\x4e\x47\x4c\x5b\x5a\x29",
        // "CFDateFormatterSetProperty" / M(Xor3) / S(188) / L(26)
        "\x9c\x99\x9b\xbe\xab\xba\x99\xb0\xad\xb2\xbe\xab\xab\xba\xad\x8c\xba\xab\x8f\xad\xb0\xaf\xba\xad\xab\xa6\xdf\x1c\x5e\x99\x37\xc8\x55\xc7\x2c",
        // "%02x" / M(Xor4) / S(101) / L(4)
        "\x75\x60\x62\x28\x50\x18\x23\x9c\x27\xeb\x79\xd3\x4f\x9d\x9a\x7c",
        // "BIO_free" / M(Xor1) / S(68) / L(8)
        "\x06\x0d\x0b\x1b\x22\x36\x21\x21\x44\x88\x87\x74\xd7\xef\xef\x18",
        // "" / M(None) / S(0) / L(0)
        "\xe6\xd9\xe4\x30\x77\xa4\x98\xc6\xa2\x30\x40\x32\xb0\x35\xc9\x54\xb1\xff\x7b\x9c\x16\xf1\x00\xac\x21\x54\x9b\xbc\x8a\x17\x62\x15",
        // "strlen" / M(Xor4) / S(240) / L(6)
        "\x73\x74\x72\x6c\x65\x6e\x00\xc8\xb0\xdc\x77\x01\x09\x1e\x63\x10",
        // "init" / M(Xor2) / S(252) / L(4)
        "\x85\x82\x85\x98\xec\x44\x5c\xbc\xf3\xda\x46\x88\x14\xed\x4d\x06",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(185) / L(24)
        "\xf5\xaf\xa9\xa8\xf5\xb6\xb3\xb8\xf5\xb6\xb3\xb8\x89\xa3\xa9\xae\xbf\xb7\xf4\xbe\xa3\xb6\xb3\xb8\xda\x58\xa6\x2b\x6b\xa5\x53\x6b\xf5",
        // "" / M(None) / S(0) / L(0)
        "\x49\x3f\x2c\x8d\x5a\xfa\xbc\xda\xd9\xfb\xbe\x3d\x7e\xe7\xe1\xcc\x67\x3e\xaf\xb7\x8c\x88\x8b\x5d\x17\x39\x8e\x1d\xbd\xb9\xe7\x38",
        // "Apple Root CA" / M(Rot) / S(35) / L(13)
        "\x64\x93\x93\x8f\x88\x43\x75\x92\x92\x97\x43\x66\x64\x23\xbd\x51",
        // "" / M(None) / S(0) / L(0)
        "\x3f\xe4\x3b\x23\x97\x67\x40\x78\x4c\x7f\x08\x48\x09\xfe\x7b\xb0\xff\x15\x66\xc3\xa5\xe6\x9a\x24\x8a\x70\xd7\xd7\xcb\xf8\x8a\x89",
        // "" / M(None) / S(0) / L(0)
        "\x95\x47\xfa\xcd\xe5\x7d\x46\x50\xd2\xaf\xdc\x00\xb1\x5f\xae\xa1\xb5\x47\x0e\xe9\x32\xb3\xfd\x46\xf2\xfb\xc1\xc6\x38\xd0\x3e\xcd",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(155) / L(26)
        "\xfb\xfe\xea\xdd\xd9\xdc\xeb\xcc\xca\xdd\xd9\xd5\xfb\xca\xdd\xd9\xcc\xdd\xef\xd1\xcc\xd0\xfe\xd1\xd4\xdd\xb8\xde\x3f\xf7\x15\x7f\x4c\x75\x15",
        // "CFDictionaryAddValue" / M(Xor4) / S(138) / L(20)
        "\x11\x14\x16\x3b\x31\x26\x3b\x3d\x3c\x33\x20\x2b\x13\x36\x36\x04\x33\x3e\x27\x37\x52",
        // "EVP_DigestFinal" / M(Xor4) / S(121) / L(15)
        "\xd5\xc6\xc0\xcf\xd4\xf9\xf7\xf5\xe3\xe4\xd6\xf9\xfe\xf1\xfc\x90",
        // "" / M(None) / S(0) / L(0)
        "\xf1\x30\xe5\x54\x23\x87\x87\x35\x5a\x2a\x68\xef\x88\x6a\x83\x44\x9c\x6a\x6e\x47\x89\xe4\x90\x84\x4c\xfe\xe7\x5a\xbd\xb8\x35\xba",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x04\x2e\x02\xab\x36\x01\x17\x69\x2e\xde\xde\x7c\x6c\x0d\x5c\xdb\x91\x7c\x10\xfb\x73\x62\x12\xc7\x1b\x37\x19\x2b\x2f\x92\x42",
        // "" / M(None) / S(0) / L(0)
        "\xfd\x0e\x5c\x6b\x42\x4f\xe8\x13\xc5\xcd\xae\x65\x02\x0d\xf2\x12\xe6\xb8\x7a\xd8\x08\x05\x76\x16\x78\x8e\xed\x8b\xe0\x32\xd7\x4f",
        // "EVP_DigestUpdate" / M(Xor3) / S(181) / L(16)
        "\x83\x90\x96\x99\x82\xaf\xa1\xa3\xb5\xb2\x93\xb6\xa2\xa7\xb2\xa3\xc6",
        // "CFReadStreamOpen" / M(Xor2) / S(100) / L(16)
        "\x36\x33\x27\x10\x14\x11\x26\x01\x07\x10\x14\x18\x3a\x05\x10\x1b\x75",
        // "alloc" / M(Xor2) / S(47) / L(5)
        "\x5e\x53\x53\x50\x5c\x3f\x4f\x10\x34\x7c\xd6\xb9\x5b\x17\x51\xd4",
        // "sha1" / M(Xor1) / S(127) / L(4)
        "\x0c\x17\x1e\x4e\x7f\x39\xf1\x29\xab\xe8\x3e\x3b\x1d\xc9\x07\xf7",
        // "EVP_DigestUpdate" / M(Xor3) / S(165) / L(16)
        "\xf3\xe0\xe6\xe9\xf2\xdf\xd1\xd3\xc5\xc2\xe3\xc6\xd2\xd7\xc2\xd3\xb6",
        // "" / M(None) / S(0) / L(0)
        "\x89\xd3\x06\x83\x80\x5f\xfe\x74\xfc\x25\xb6\xf1\x7a\x04\x8f\xf3\x39\x53\xae\xe7\x88\x98\x02\x41\xb3\xb0\xc0\xd2\xa6\x57\xb1\x7f",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(247) / L(29)
        "\x9c\xb4\xb1\xa3\x8e\x87\x92\xb3\x9e\x94\x83\x9e\x98\x99\x96\x85\x8e\xbc\x92\x8e\xb4\x96\x9b\x9b\xb5\x96\x94\x9c\x84\xf7\xee\xad\xa2\x46\x39\x16\x7b\x64",
        // "%02X" / M(Xor1) / S(119) / L(4)
        "\x52\x47\x45\x2f\x77\xaa\x04\x1b\x43\x52\xa9\x8e\x95\x94\x26\x3d",
        // "alloc" / M(Xor3) / S(45) / L(5)
        "\x5c\x51\x51\x52\x5e\x3d\xb2\x65\xea\xba\xba\xa8\x49\x23\xea\x8f",
        // "identifierForVendor" / M(Xor2) / S(145) / L(19)
        "\xec\xe1\xe0\xeb\xf1\xec\xe3\xec\xe0\xf7\xc3\xea\xf7\xd3\xe0\xeb\xe1\xea\xf7\x85",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(179) / L(32)
        "\xad\xad\xad\xad\xf3\xf9\xf3\x99\x99\xf3\xf9\xf3\xb0\xb0\xf3\x80\xf3\x9c\x9c\xf3\xee\xf3\xb9\xb9\xf3\xee\xf3\xa7\xa7\xf3\x8e\xf3\xd4",
        // "NSBundle" / M(Xor2) / S(243) / L(8)
        "\xad\xb0\xa1\x96\x8d\x87\x8f\x86\xe3\x29\x99\x1f\xbe\xee\xf6\xfa",
        // "" / M(None) / S(0) / L(0)
        "\x69\x6c\xfa\x76\x4c\xb5\x62\x85\x08\xde\x39\xfc\x27\x16\x83\xff\x3f\x21\x50\x3c\x97\x2a\x5e\xa1\x9b\xcf\x94\xc7\xbf\x16\xe1\x17",
        // "CFBundleShortVersionString" / M(Xor4) / S(17) / L(26)
        "\x10\x15\x11\x26\x3d\x37\x3f\x36\x00\x3b\x3c\x21\x27\x05\x36\x21\x20\x3a\x3c\x3d\x00\x27\x21\x3a\x3d\x34\x53\xf7\xa2\xac\x54\xb0\xdd\x80\x60",
        // "dlsym" / M(Xor2) / S(212) / L(5)
        "\xa0\xa8\xb7\xbd\xa9\xc4\xdb\x3d\x57\xe5\x13\x29\x9b\x4c\x6b\xf6",
        // "strncmp" / M(Xor2) / S(141) / L(7)
        "\xee\xe9\xef\xf3\xfe\xf0\xed\x9d\xa2\xfd\xbd\x7a\x5e\x64\x27\x76",
        // "CFDateFormatterCreate" / M(Rot) / S(235) / L(21)
        "\x2e\x31\x2f\x4c\x5f\x50\x31\x5a\x5d\x58\x4c\x5f\x5f\x50\x5d\x2e\x5d\x50\x4c\x5f\x50\xeb",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(194) / L(66)
        "\xed\x91\xbb\xb1\xb6\xa7\xaf\xed\x8e\xab\xa0\xb0\xa3\xb0\xbb\xed\x84\xb0\xa3\xaf\xa7\xb5\xad\xb0\xa9\xb1\xed\x81\xad\xb0\xa7\x84\xad\xb7\xac\xa6\xa3\xb6\xab\xad\xac\xec\xa4\xb0\xa3\xaf\xa7\xb5\xad\xb0\xa9\xed\x81\xad\xb0\xa7\x84\xad\xb7\xac\xa6\xa3\xb6\xab\xad\xac\xc2",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(113) / L(31)
        "\x1a\x32\x37\x25\x08\x01\x14\x35\x18\x12\x05\x18\x1e\x1f\x10\x03\x08\x27\x10\x1d\x04\x14\x32\x10\x1d\x1d\x33\x10\x12\x1a\x02\x71",
        // "SHA1" / M(Xor2) / S(183) / L(4)
        "\xf4\xef\xe6\x96\xa7\x24\x7e\x13\x55\x6f\x82\x63\x3d\xc0\xa5\x33",
        // "CFDateFormatterCreateDateFromString" / M(Xor2) / S(83) / L(35)
        "\x34\x31\x33\x16\x03\x12\x31\x18\x05\x1a\x16\x03\x03\x12\x05\x34\x05\x12\x16\x03\x12\x33\x16\x03\x12\x31\x05\x18\x1a\x24\x03\x05\x1e\x19\x10\x77",
        // "" / M(None) / S(0) / L(0)
        "\x61\x82\xcf\xbc\xcf\x9b\xf7\x42\x90\x9c\xa2\x9c\xab\x5c\x99\x02\x1e\xa0\x40\x0a\x76\x04\x72\xc6\xe2\x86\x8d\x05\x39\x41\x5c\xc9",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xae\xf1\x79\xff\x88\xa4\x4a\xce\x43\x4b\x5f\xe4\x8b\x3b\x17\x86\xd0\x5c\x89\xbb\x15\xa1\x11\xf3\xe6\xa6\x0b\xe7\x9c\xfe\x61",
        // "CFDateFormatterCreate" / M(Rot) / S(33) / L(21)
        "\x64\x67\x65\x82\x95\x86\x67\x90\x93\x8e\x82\x95\x95\x86\x93\x64\x93\x86\x82\x95\x86\x21",
        // "" / M(None) / S(0) / L(0)
        "\x6f\x2e\x4e\x54\x39\xe4\x63\xe2\xa8\xcb\x60\xe5\xc1\x06\x35\x96\x0c\xf0\x22\x5a\xf6\x7a\x2b\xda\xee\x46\x87\xe7\x4b\x74\xf5\x9b",
        // "CFDateCompare" / M(Xor4) / S(211) / L(13)
        "\x73\x76\x74\x51\x44\x55\x73\x5f\x5d\x40\x51\x42\x55\x30\x2c\x2c",
        // "" / M(None) / S(0) / L(0)
        "\xad\x26\xe0\xb6\xe5\x1f\xed\x33\x28\x52\x0a\x89\x2e\x57\xdb\x29\x48\x95\xc7\x28\xe0\x71\x21\x9e\xff\x14\xe1\xdd\x00\x43\x64\x2b",
        // "CFDateFormatterSetFormat" / M(Rot) / S(107) / L(24)
        "\xae\xb1\xaf\xcc\xdf\xd0\xb1\xda\xdd\xd8\xcc\xdf\xdf\xd0\xdd\xbe\xd0\xdf\xb1\xda\xdd\xd8\xcc\xdf\x6b\xc8\x8a\x7c\xb7\x62\x71\xc0\x95",
        // "" / M(None) / S(0) / L(0)
        "\x91\xea\x0c\xce\xfd\x6c\x24\xc6\xb5\xae\x39\x26\x8e\xa9\x7b\x3b\x6f\x3c\x26\x1a\x5a\x69\x9e\xf7\x4a\x61\x77\x7d\x1c\x43\x52\x90",
        // "" / M(None) / S(0) / L(0)
        "\xe5\x01\xe7\x01\xff\x1e\x55\x5b\xb5\x32\x12\x3e\x86\x23\x12\x1e\xd2\x9a\xe4\x57\x5d\x82\xfd\x46\x68\xd2\xfb\xbb\x52\x1b\x4f\xd2",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(180) / L(26)
        "\xd4\xd1\xd3\xf6\xe3\xf2\xd1\xf8\xe5\xfa\xf6\xe3\xe3\xf2\xe5\xc4\xf2\xe3\xc7\xe5\xf8\xe7\xf2\xe5\xe3\xee\x97\xf9\x37\xa4\xdd\x8a\x55\xa4\x77",
        // "objc_lookUpClass" / M(Rot) / S(184) / L(16)
        "\x27\x1a\x22\x1b\x17\x24\x27\x27\x23\x0d\x28\xfb\x24\x19\x2b\x2b\xb8",
        // "" / M(None) / S(0) / L(0)
        "\xf9\x1b\xe4\x75\x11\x04\x9e\xe9\x60\xb0\x62\xe9\x93\xea\x79\x2a\xc4\xb1\xfc\x45\x0a\x2d\x85\x22\x73\xcb\xef\xc9\xd4\x94\xda\x53",
        // "CFDataAppendBytes" / M(Xor1) / S(245) / L(17)
        "\xb6\xb3\xb1\x94\x81\x94\xb4\x85\x85\x90\x9b\x91\xb7\x8c\x81\x90\x86\xf5",
        // "%02X:" / M(Rot) / S(127) / L(5)
        "\xa4\xaf\xb1\xd7\xb9\x7f\x87\xca\x3c\x29\x29\x32\xeb\xe5\x24\x59",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x36\x31\xf1\x04\x51\xd1\x03\xa3\xfa\x8c\xe7\x8b\xfb\xe4\xaf\xfd\x1f\xf1\xe3\x76\x4e\x8a\x57\xd6\x10\x1e\xe8\xf2\x6b\xba\x71",
        // "CC_SHA1_Final" / M(Rot) / S(61) / L(13)
        "\x80\x80\x9c\x90\x85\x7e\x6e\x9c\x83\xa6\xab\x9e\xa9\x3d\x6f\x46",
        // "CFStringCreateWithCString" / M(Xor1) / S(154) / L(25)
        "\xd9\xdc\xc9\xee\xe8\xf3\xf4\xfd\xd9\xe8\xff\xfb\xee\xff\xcd\xf3\xee\xf2\xd9\xc9\xee\xe8\xf3\xf4\xfd\x9a\x89\x54\xe2\xf0\x9b\x7a\x57\x9c",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(80) / L(40)
        "\x86\x81\x81\xb5\x85\xb2\x86\x86\x82\xb3\x85\x89\x83\xb1\x80\x88\xb6\xb6\x85\x88\xb4\x81\x84\xb1\xb5\x82\x82\x84\x85\x82\xb4\x81\x89\x88\xb4\xb6\x86\xb3\x86\x80\x50\xbb\x81\x82\x61\x75\x0c\xc9\x60",
        // "mainBundle" / M(Xor4) / S(85) / L(10)
        "\x3d\x31\x39\x3e\x12\x25\x3e\x34\x3c\x35\x50\xee\xb2\x84\xb7\xd7",
        // "" / M(None) / S(0) / L(0)
        "\xbb\xeb\xa5\x76\xe0\x13\x58\x03\x3e\xcb\x10\x90\x78\x29\xdd\x3b\x58\x0e\xbc\x74\x7b\x4f\x91\xc7\x0d\xb1\x3a\xa2\x3b\xfb\xde\xea",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor2) / S(105) / L(31)
        "\x22\x0a\x0f\x1d\x30\x39\x2c\x0d\x20\x2a\x3d\x20\x26\x27\x28\x3b\x30\x1f\x28\x25\x3c\x2c\x0a\x28\x25\x25\x0b\x28\x2a\x22\x3a\x49",
        // "exit" / M(Xor2) / S(204) / L(4)
        "\xb9\xa4\xb5\xa8\xdc\xb6\x7c\x7f\x0b\x35\xcb\x14\x5e\xb4\x54\x9f",
        // "CFBundleUnloadExecutable" / M(Xor3) / S(151) / L(24)
        "\xfb\xfe\xfa\xcd\xd6\xdc\xd4\xdd\xed\xd6\xd4\xd7\xd9\xdc\xfd\xc0\xdd\xdb\xcd\xcc\xd9\xda\xd4\xdd\xb8\xfe\xec\xf7\x1a\x4a\x72\xa1\xa3",
        // "PKCS7_free" / M(Xor3) / S(40) / L(10)
        "\x68\x73\x7b\x6b\x0f\x67\x5e\x4a\x5d\x5d\x38\x4b\x9d\xc1\x56\x38",
        // "setjmp" / M(Xor1) / S(30) / L(6)
        "\x6d\x7b\x6a\x74\x73\x6e\x1e\x98\x13\x92\xa6\x74\x32\x6d\x0f\xfe",
        // "ASN1_OBJECT_free" / M(Xor2) / S(37) / L(16)
        "\x75\x67\x7a\x05\x6b\x7b\x76\x7e\x71\x77\x60\x6b\x52\x46\x51\x51\x34",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(117) / L(40)
        "\x53\x54\x54\x20\x50\x27\x53\x53\x57\x26\x50\x5c\x56\x24\x55\x5d\x23\x23\x50\x5d\x21\x54\x51\x24\x20\x57\x57\x51\x50\x57\x21\x54\x5c\x5d\x21\x23\x53\x26\x53\x55\x65\xc1\x42\xcd\x2e\xa3\xfc\x58\xaa",
        // "SHA1_Final" / M(Xor2) / S(130) / L(10)
        "\xc1\xda\xd3\xa3\xcd\xd4\xfb\xfc\xf3\xfe\x92\x10\xb2\xdc\x84\x9c",
        // "CC_SHA1_Init" / M(Rot) / S(175) / L(12)
        "\xf2\xf2\x0e\x02\xf7\xf0\xe0\x0e\xf8\x1d\x18\x23\xaf\xe6\x2d\x5e",
        // "" / M(None) / S(0) / L(0)
        "\xe8\x64\x1b\xb1\x2d\x1f\xed\x44\xae\x57\x0a\x22\x4f\x8f\xee\xa9\x8c\x8d\x29\xc7\x56\x6d\xe6\xec\xe7\x4f\x56\x05\x1e\x0d\x3c\xb0",
        // "" / M(None) / S(0) / L(0)
        "\xc0\x15\x39\x9f\xca\xf8\x7b\x79\xa4\x1c\x01\x0c\x6d\x2e\x31\x35\x3f\x28\x13\x22\x63\x13\x3b\xf3\xb5\x39\xe2\xdc\x15\xc8\x1b\x3e",
        // "" / M(None) / S(0) / L(0)
        "\xad\xcb\xdb\x00\xdd\x79\x5b\x77\x8d\x42\xc0\xb0\x36\x51\x12\xf3\x8d\x20\xf3\x73\x8f\x58\x88\xa2\x3e\x3d\xf9\x66\x38\xdb\xcd\xd5",
        // "" / M(None) / S(0) / L(0)
        "\x9a\x84\x5e\x20\xbe\x81\x2a\xb4\x55\x1c\x3a\xde\x07\x5c\x6f\xd5\x05\xe3\x20\x2f\xf8\x80\xaf\x12\x71\x9f\xc1\xd1\xdd\x77\x8d\x6a",
        // "CFArrayGetCount" / M(Rot) / S(191) / L(15)
        "\x02\x05\x00\x31\x31\x20\x38\x06\x24\x33\x02\x2e\x34\x2d\x33\xbf",
        // "CFReadStreamOpen" / M(Xor3) / S(210) / L(16)
        "\xa0\xa5\xb1\x86\x82\x87\xb0\x97\x91\x86\x82\x8e\xac\x93\x86\x8d\xe3",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor3) / S(222) / L(59)
        "\x14\x13\x18\x13\x47\x18\x17\x40\x18\x14\x14\x18\x10\x41\x18\x17\x1b\x18\x11\x43\x18\x12\x1a\x18\x44\x44\x18\x17\x1a\x18\x46\x13\x18\x16\x43\x18\x47\x10\x18\x10\x16\x18\x17\x10\x18\x46\x13\x18\x1b\x1a\x18\x46\x44\x18\x14\x41\x18\x14\x12\x22\x44\xa0\x5b\x68\xb0\x54\x91\x3d",
        // "EVP_DigestInit" / M(Xor3) / S(52) / L(14)
        "\x01\x12\x14\x1b\x00\x2d\x23\x21\x37\x30\x0d\x2a\x2d\x30\x44\xfc",
        // "objc_getClass" / M(Xor4) / S(150) / L(13)
        "\x0f\x02\x0a\x03\x3f\x07\x05\x14\x23\x0c\x01\x13\x13\x60\x49\x2d",
        // "" / M(None) / S(0) / L(0)
        "\xe2\xfd\xc9\xb1\x04\x86\x3f\x18\x4b\x21\xcb\xf6\xd7\x21\x21\x5d\x90\x05\xdb\x7c\xc6\xd0\x58\x6b\xed\x81\x9b\x9c\xec\xdb\x0c\x79",
        // "X509_STORE_add_cert" / M(Xor1) / S(10) / L(19)
        "\x52\x3f\x3a\x33\x55\x59\x5e\x45\x58\x4f\x55\x6b\x6e\x6e\x55\x69\x6f\x78\x7e\x0a",
        // "CC_SHA1_Update" / M(Xor3) / S(114) / L(14)
        "\xc1\xc1\xdd\xd1\xca\xc3\xb3\xdd\xd7\xf2\xe6\xe3\xf6\xe7\x82\x15",
        // "EVP_MD_CTX_init" / M(Rot) / S(203) / L(15)
        "\x10\x21\x1b\x2a\x18\x0f\x2a\x0e\x1f\x23\x2a\x34\x39\x34\x3f\xcb",
        // "" / M(None) / S(0) / L(0)
        "\x38\x10\xbe\xb4\x2b\xf8\xcf\xe2\xa2\xeb\xd2\xbc\xa5\x5e\x6b\x79\x7e\xbd\x06\xd2\x99\xa0\xf3\xfb\xdd\xa1\xe2\xc1\xc6\xc9\x26\x8e",
        // "PKCS7_verify" / M(Rot) / S(96) / L(12)
        "\xb0\xab\xa3\xb3\x97\xbf\xd6\xc5\xd2\xc9\xc6\xd9\x60\xea\x48\x0f",
        // "" / M(None) / S(0) / L(0)
        "\x32\x4a\x54\xa4\x5c\xa1\x90\x6c\x54\x14\xf1\xf6\x92\x67\x5d\xcc\x2c\x62\x5a\x71\x11\x2d\x3b\x21\xea\xda\x31\xa8\x6e\x85\x30\xee",
        // "%02x" / M(Xor2) / S(173) / L(4)
        "\x98\x8d\x8f\xc5\xbd\x1a\xdf\x50\x93\x0c\xbe\xbe\x69\xc0\x78\xe4",
        // "" / M(None) / S(0) / L(0)
        "\xd8\xb4\x60\x23\x46\x76\x89\xae\x1e\x82\x1f\x3b\xc2\xb2\xdb\xbc\xda\xd6\x19\xe5\x35\x72\xf2\x61\x83\x69\x94\x38\x34\x77\xd0\x18",
        // "SHA1_Update" / M(Xor2) / S(131) / L(11)
        "\xc0\xdb\xd2\xa2\xcc\xc6\xe3\xf7\xf2\xe7\xf6\x93\x60\xe5\x9f\x71",
        // "PKCS7_free" / M(Xor3) / S(150) / L(10)
        "\xf6\xed\xe5\xf5\x91\xf9\xc0\xd4\xc3\xc3\xa6\x4e\x87\xf1\x1b\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x55\x74\x71\x72\x15\xd4\x0f\x19\x51\xb7\x86\x0b\x44\x58\xea\x9a\x5c\x80\xec\x7b\x7e\x1b\x29\xf0\x73\xa8\x23\x76\x5a\xa9\xb0\x8f",
        // "%02x:" / M(Xor4) / S(202) / L(5)
        "\x85\x90\x92\xd8\x9a\xa0\x75\x86\xf9\xb3\xff\x9e\x49\xa4\x23\x19",
        // "sha1" / M(Xor1) / S(234) / L(4)
        "\x99\x82\x8b\xdb\xea\xcd\xdb\xa3\xb5\x63\x14\xea\xb5\xc3\xbc\x9e",
        // "" / M(None) / S(0) / L(0)
        "\xb0\x60\xf5\x36\x07\x23\x8a\x45\xdf\x6e\x6a\x18\x24\xfc\x36\x2c\x5c\x26\x6a\x39\xa0\x05\x20\x7d\x85\x04\x42\xd2\x55\xb2\xb2\xe8",
        // "" / M(None) / S(0) / L(0)
        "\xf6\x73\xac\x84\x8e\x33\x73\xe8\x7d\xdb\xde\x71\x3f\x0b\xb4\xcd\xf3\xa7\xc1\x14\x3f\x08\x0a\x92\x7e\x69\x3a\xb1\x29\x2d\x5b\x43",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(5) / L(25)
        "\x7f\x12\x17\x1e\x78\x69\x66\x6a\x62\x78\x40\x42\x53\x78\x53\x42\x5f\x53\x78\x45\x5e\x78\x69\x6e\x63\x27\x8e\xef\x0f\x5d\x9d\xd5\x23\x9d",
        // "CFDateCompare" / M(Xor4) / S(230) / L(13)
        "\x23\x26\x24\x01\x14\x05\x23\x0f\x0d\x10\x01\x12\x05\x60\x0b\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x38\x4f\xf6\x35\xd2\xb7\xe0\x3c\x81\x2b\x02\x6b\xf1\x87\xa8\xc3\xb4\x99\x96\xca\xa8\x73\x99\xc3\xca\x5b\xf0\x12\x27\xc1\x67\xdb",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(134) / L(23)
        "\xf5\xed\xf4\xc3\xc5\xc3\xcf\xd6\xd2\xf4\xc3\xc0\xd4\xc3\xd5\xce\xf4\xc3\xd7\xd3\xc3\xd5\xd2\xa6\xc6\xa0\x2e\x4c\xe9\x0d\x26\x03",
        // "X509_STORE_new" / M(Xor3) / S(170) / L(14)
        "\xe2\x8f\x8a\x83\xe5\xe9\xee\xf5\xe8\xff\xe5\xd4\xdf\xcd\xba\xaf",
        // "strlen" / M(Xor3) / S(166) / L(6)
        "\xc5\xc2\xc4\xda\xd3\xd8\xb6\x33\xce\xd7\xc3\x0e\x23\xc6\xf9\xdb",
        // "X509_digest" / M(Xor3) / S(212) / L(11)
        "\xbc\xd1\xd4\xdd\xbb\x80\x8d\x83\x81\x97\x90\xe4\x3e\xee\xa9\x53",
        // "" / M(None) / S(0) / L(0)
        "\x0e\x3d\xb4\x32\x6d\xc7\x4e\x4b\x64\x81\xc3\x44\xc5\xd8\xd5\x0d\xf9\x28\x8f\xa3\x93\x92\xb8\x4b\x4a\x68\xfe\xb6\x11\x37\x17\xc3",
        // "X509_free" / M(Xor4) / S(253) / L(9)
        "\x88\xe5\xe0\xe9\x8f\xb6\xa2\xb5\xb5\xd0\x11\x4f\x53\x6e\xc2\x23",
        // "BIO_free" / M(Xor4) / S(143) / L(8)
        "\xb2\xb9\xbf\xaf\x96\x82\x95\x95\xf0\x04\x0c\xe7\x0f\xc3\x87\x14",
        // "ASN1_INTEGER_free" / M(Xor2) / S(172) / L(17)
        "\xff\xed\xf0\x8f\xe1\xf7\xf0\xea\xfb\xf9\xfb\xec\xe1\xd8\xcc\xdb\xdb\xbe",
        // "CFDictionarySetValue" / M(Xor1) / S(39) / L(20)
        "\x64\x61\x63\x4e\x44\x53\x4e\x48\x49\x46\x55\x5e\x74\x42\x53\x71\x46\x4b\x52\x42\x27",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(239) / L(25)
        "\x20\x1d\x21\x1d\x27\x23\x1f\x1d\x20\x20\x22\x25\x22\x24\x1d\x20\x1f\x1f\x1d\x25\x1d\x20\x20\x1d\x20\xef\xc5\x55\xba\x4a\x27\xdd\x33\x4f",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(213) / L(22)
        "\x96\x93\x94\xa7\xa7\xb4\xac\x92\xb0\xa1\x83\xb4\xb9\xa0\xb0\x94\xa1\x9c\xbb\xb1\xb0\xad\xd5",
        // "" / M(None) / S(0) / L(0)
        "\xfb\x83\x95\x81\x58\x16\xc3\xc6\x71\x56\x5e\x7f\x67\x94\x59\x97\x5f\xa9\x7b\x97\x40\x44\xef\x0a\x7a\xa9\xb0\x34\x7f\x52\x20\xaa",
        // "CFDataCreate" / M(Rot) / S(178) / L(12)
        "\xf5\xf8\xf6\x13\x26\x13\xf5\x24\x17\x13\x26\x17\xb2\x2e\xe0\x94",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(138) / L(22)
        "\xb9\xff\xfd\xfc\xb9\xf6\xf3\xec\xb9\xf6\xf3\xec\xf9\xec\xf4\xed\xb8\xee\x03\xf6\xf3\xec\x8a",
        // "X509_NAME_get_text_by_NID" / M(Xor3) / S(244) / L(25)
        "\x4e\x23\x26\x2f\x49\x58\x57\x5b\x53\x49\x71\x73\x62\x49\x62\x73\x6e\x62\x49\x74\x6f\x49\x58\x5f\x52\x16\xd0\x8b\x45\x3d\xe6\xeb\x69\xae",
        // "sk_num" / M(Xor4) / S(132) / L(6)
        "\x33\x2b\x1f\x2e\x35\x2d\x40\x35\x3d\x01\xbf\xfc\x60\x79\xc6\x71",
        // "kCFTypeArrayCallBacks" / M(Rot) / S(205) / L(21)
        "\x38\x10\x13\x21\x46\x3d\x32\x0e\x3f\x3f\x2e\x46\x10\x2e\x39\x39\x0f\x2e\x30\x38\x40\xcd",
        // "longjmp" / M(Xor4) / S(176) / L(7)
        "\x6c\x6f\x6e\x67\x6a\x6d\x70\x00\xde\xba\x2e\xd3\x89\x3b\x78\x38",
        // "1.2.840.113635.100.6.11.1" / M(Xor3) / S(168) / L(25)
        "\xfb\xe4\xf8\xe4\xf2\xfe\xfa\xe4\xfb\xfb\xf9\xfc\xf9\xff\xe4\xfb\xfa\xfa\xe4\xfc\xe4\xfb\xfb\xe4\xfb\xca\x2f\xa8\x54\x6b\xd3\x70\xd4\xd2",
        // "CFDataGetBytePtr" / M(Xor1) / S(64) / L(16)
        "\x03\x06\x04\x21\x34\x21\x07\x25\x34\x02\x39\x34\x25\x10\x34\x32\x40",
        // "%02x:" / M(Xor4) / S(239) / L(5)
        "\xd5\xc0\xc2\x88\xca\xf0\xb2\xe5\x8c\x1a\x62\x9f\xab\xbf\xab\x98",
        // "" / M(None) / S(0) / L(0)
        "\xf4\xb3\x02\x04\x29\x24\xde\x83\x6b\x8a\xf2\x64\x11\x0f\x5a\x44\xd1\xe8\xc1\xf5\x3d\x81\xd2\xdc\x05\x04\x54\x98\xd8\xa7\x18\x84",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(175) / L(16)
        "\xdd\x8c\xd7\xe1\xff\xed\xf0\x8f\xe1\xf7\xf0\xea\xfb\xf9\xfb\xec\xbe",
        // "BIO_write" / M(Rot) / S(244) / L(9)
        "\x36\x3d\x43\x53\x6b\x66\x5d\x68\x59\xf4\x78\x60\xc0\xae\x7b\x95",
        // "ASN1_OBJECT_free" / M(Xor4) / S(9) / L(16)
        "\xd8\xca\xd7\xa8\xc6\xd6\xdb\xd3\xdc\xda\xcd\xc6\xff\xeb\xfc\xfc\x99",
        // "CFArrayAppendValue" / M(Rot) / S(35) / L(18)
        "\x66\x69\x64\x95\x95\x84\x9c\x64\x93\x93\x88\x91\x87\x79\x84\x8f\x98\x88\x23",
        // "appStoreReceiptURL" / M(Xor2) / S(86) / L(18)
        "\x24\x35\x35\x16\x31\x2a\x37\x20\x17\x20\x26\x20\x2c\x35\x31\x10\x17\x09\x45",
        // "Apple Root CA" / M(Rot) / S(206) / L(13)
        "\x0f\x3e\x3e\x3a\x33\xee\x20\x3d\x3d\x42\xee\x11\x0f\xce\x8d\xb0",
        // "objc_getClass" / M(Rot) / S(32) / L(13)
        "\x8f\x82\x8a\x83\x7f\x87\x85\x94\x63\x8c\x81\x93\x93\x20\x89\xf3",
        // "CFReadStreamClose" / M(Xor2) / S(119) / L(17)
        "\x26\x23\x37\x00\x04\x01\x36\x11\x17\x00\x04\x08\x26\x09\x0a\x16\x00\x65",
        // "d2i_X509_bio" / M(Xor2) / S(185) / L(12)
        "\xcd\x9b\xc0\xf6\xf1\x9c\x99\x90\xf6\xcb\xc0\xc6\xa9\x7c\xce\x3c",
        // "" / M(None) / S(0) / L(0)
        "\x25\x24\xfc\x8c\x22\xcb\x0f\x31\xf8\x0c\xf6\x32\x1c\x12\x64\xca\x07\x9a\x4b\xf0\x55\xc7\x8a\xb8\xcc\xab\xa2\xe6\x4d\x9f\x16\x57",
        // "sel_registerName" / M(Xor3) / S(176) / L(16)
        "\xb2\xa4\xad\x9e\xb3\xa4\xa6\xa8\xb2\xb5\xa4\xb3\x8f\xa0\xac\xa4\xc1",
        // "CFDataCreate" / M(Xor2) / S(110) / L(12)
        "\x3d\x38\x3a\x1f\x0a\x1f\x3d\x0c\x1b\x1f\x0a\x1b\x7e\xba\xe6\xa6",
        // "appStoreReceiptURL" / M(Xor3) / S(169) / L(18)
        "\xdd\xcc\xcc\xef\xc8\xd3\xce\xd9\xee\xd9\xdf\xd9\xd5\xcc\xc8\xe9\xee\xf0\xbc",
        // "." / M(Rot) / S(72) / L(1)
        "\x76\x48\x7a\x78\xbf\xb7\x21\x05\x48\x2e\xf9\xed\xb6\xcc\xc5\xda",
        // "CFDateFormatterSetFormat" / M(Xor2) / S(217) / L(24)
        "\xbb\xbe\xbc\x99\x8c\x9d\xbe\x97\x8a\x95\x99\x8c\x8c\x9d\x8a\xab\x9d\x8c\xbe\x97\x8a\x95\x99\x8c\xf8\x05\x0c\x41\x07\xe9\xea\x69\xbd",
        // "" / M(None) / S(0) / L(0)
        "\x74\x58\xad\xf4\x17\xa5\x10\x67\xa9\xd4\x29\x0f\xbb\xbf\x41\xfa\x6b\x07\x8a\x58\x22\xd1\x3a\x3e\x4f\x31\x16\xaf\xf4\x13\xe4\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x6c\xc3\x98\x20\x1e\x66\x16\xd8\x74\x9e\x8a\xc6\x4f\x86\x65\xae\x04\x96\x2a\x92\x01\xcf\xe9\xd8\xf2\xa4\x54\x13\x12\xb7\x9b\x4e",
        // "%02X:" / M(Xor3) / S(220) / L(5)
        "\xc9\xdc\xde\xb4\xd6\xec\xdb\xbe\x57\xb6\xb1\x3e\xcd\x0f\x6d\xb7",
        // "CFStringCreateWithBytes" / M(Xor2) / S(119) / L(23)
        "\x14\x11\x04\x23\x25\x3e\x39\x30\x14\x25\x32\x36\x23\x32\x00\x3e\x23\x3f\x15\x2e\x23\x32\x24\x57\xbf\xa0\x7f\x2e\x42\xd4\x40\xd9",
        // "CFRelease" / M(Xor2) / S(224) / L(9)
        "\xb3\xb6\xa2\x95\x9c\x95\x91\x83\x95\xf0\xe5\x4e\x2a\xc7\x6d\x5c",
        // "" / M(None) / S(0) / L(0)
        "\xd3\x65\xc9\x47\xa9\x53\xc3\xaa\xdd\xa9\xc9\x79\x34\x83\x10\x58\x8f\x5f\xde\xd8\x41\x93\x98\xff\x18\x4b\x75\xcd\xe4\x95\xed\xe3",
        // "" / M(None) / S(0) / L(0)
        "\x41\xb6\xfc\x2e\x4b\x45\xf5\x00\x5c\x69\xeb\x59\x3b\xb7\x98\xc3\x6f\xdd\xd7\x15\x8c\x30\xfd\x98\x2e\x69\x91\xb6\x99\xbf\x79\x59",
        // "ASN1_INTEGER_free" / M(Xor3) / S(196) / L(17)
        "\x97\x85\x98\xe7\x89\x9f\x98\x82\x93\x91\x93\x84\x89\xb0\xa4\xb3\xb3\xd6",
        // "CFAbsoluteTimeGetCurrent" / M(Xor4) / S(224) / L(24)
        "\xa3\xa6\xa1\x82\x93\x8f\x8c\x95\x94\x85\xb4\x89\x8d\x85\xa7\x85\x94\xa3\x95\x92\x92\x85\x8e\x94\xe0\xef\x70\x39\xf5\x11\x9b\x13\xf5",
        // "currentDevice" / M(Xor2) / S(38) / L(13)
        "\x55\x43\x44\x44\x53\x58\x42\x72\x53\x40\x5f\x55\x53\x36\x0f\x61",
        // "CFDataGetBytePtr" / M(Xor1) / S(147) / L(16)
        "\xd0\xd5\xd7\xf2\xe7\xf2\xd4\xf6\xe7\xd1\xea\xe7\xf6\xc3\xe7\xe1\x93",
        // "/usr/lib/libSystem.dylib" / M(Xor4) / S(151) / L(24)
        "\x58\x02\x04\x05\x58\x1b\x1e\x15\x58\x1b\x1e\x15\x24\x0e\x04\x03\x12\x1a\x59\x13\x0e\x1b\x1e\x15\x77\x35\x65\x7a\xae\x90\xeb\x7d\x2f",
        // "%02x:" / M(Rot) / S(137) / L(5)
        "\xae\xb9\xbb\x01\xc3\x89\x6d\x55\xca\x71\xf0\xdb\x60\xa1\x5e\xa2",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(93) / L(24)
        "\x36\x1e\x1b\x19\x3c\x29\x38\x1b\x32\x2f\x30\x3c\x29\x29\x38\x2f\x09\x34\x30\x38\x07\x32\x33\x38\x5d\x9e\xdd\xcc\x47\x67\xfb\x08\x0f",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(5) / L(24)
        "\x4d\x65\x60\x62\x47\x52\x43\x60\x49\x54\x4b\x47\x52\x52\x43\x54\x72\x4f\x4b\x43\x7c\x49\x48\x43\x26\xc8\x7f\x1a\x0e\xe9\x16\xb0\x4f",
        // "BIO_write" / M(Xor3) / S(252) / L(9)
        "\x4e\x45\x43\x53\x7b\x7e\x65\x78\x69\x0c\xdc\x9b\x03\x64\x13\x0e",
        // "CFDateCompare" / M(Xor2) / S(78) / L(13)
        "\x1d\x18\x1a\x3f\x2a\x3b\x1d\x31\x33\x2e\x3f\x2c\x3b\x5e\x5e\xe6",
        // "BIO_new" / M(Xor3) / S(212) / L(7)
        "\xa6\xad\xab\xbb\x8a\x81\x93\xe4\x2f\x92\xf1\xe7\x9b\x73\xc5\x9e",
        // "CFBundleGetMainBundle" / M(Xor3) / S(171) / L(21)
        "\x82\x87\x83\xb4\xaf\xa5\xad\xa4\x86\xa4\xb5\x8c\xa0\xa8\xaf\x83\xb4\xaf\xa5\xad\xa4\xc1",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(55) / L(40)
        "\x5e\x59\x59\x0d\x5d\x0a\x5e\x5e\x5a\x0b\x5d\x51\x5b\x09\x58\x50\x0e\x0e\x5d\x50\x0c\x59\x5c\x09\x0d\x5a\x5a\x5c\x5d\x5a\x0c\x59\x51\x50\x0c\x0e\x5e\x0b\x5e\x58\x68\x1d\x20\x02\xb5\xe3\xec\x41\x44",
        // "currentDevice" / M(Xor2) / S(29) / L(13)
        "\x6e\x78\x7f\x7f\x68\x63\x79\x49\x68\x7b\x64\x6e\x68\x0d\xec\x93",
        // "CFNumberCreate" / M(Xor1) / S(112) / L(14)
        "\x33\x36\x3e\x05\x1d\x12\x15\x02\x33\x02\x15\x11\x04\x15\x70\x94",
        // "setDelegate:" / M(Xor3) / S(29) / L(12)
        "\x5e\x48\x59\x69\x48\x41\x48\x4a\x4c\x59\x48\x17\x2d\xa4\xed\xc4",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(245) / L(40)
        "\x58\x64\x62\x23\x5e\x63\x69\x56\x63\x5c\x5e\x57\x61\x5a\x68\x64\x5b\x69\x6c\x56\x67\x5a\x23\x62\x5a\x63\x68\x61\x56\x58\x67\x64\x68\x68\x5a\x68\x69\x56\x69\x68\xf5\x30\xe9\x1a\xe7\x4b\x4d\x30\x26",
        // "X509_STORE_free" / M(Xor4) / S(9) / L(15)
        "\xc8\xa5\xa0\xa9\xcf\xc3\xc4\xdf\xc2\xd5\xcf\xf6\xe2\xf5\xf5\x90",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(74) / L(66)
        "\xa2\xde\xf4\xfe\xf9\xe8\xe0\xa2\xc1\xe4\xef\xff\xec\xff\xf4\xa2\xcb\xff\xec\xe0\xe8\xfa\xe2\xff\xe6\xfe\xa2\xce\xe2\xff\xe8\xcb\xe2\xf8\xe3\xe9\xec\xf9\xe4\xe2\xe3\xa3\xeb\xff\xec\xe0\xe8\xfa\xe2\xff\xe6\xa2\xce\xe2\xff\xe8\xcb\xe2\xf8\xe3\xe9\xec\xf9\xe4\xe2\xe3\x8d",
        // "start" / M(Xor1) / S(164) / L(5)
        "\xd7\xd0\xc5\xd6\xd0\xa4\x6f\x1d\x8d\xae\x8a\x56\x5d\xa0\xea\x85",
        // "CFDataCreateMutable" / M(Xor1) / S(139) / L(19)
        "\xc8\xcd\xcf\xea\xff\xea\xc8\xf9\xee\xea\xff\xee\xc6\xfe\xff\xea\xe9\xe7\xee\x8b",
        // "OBJ_txt2obj" / M(Xor3) / S(248) / L(11)
        "\x47\x4a\x42\x57\x7c\x70\x7c\x3a\x67\x6a\x62\x08\x2d\x3b\x19\x5b",
        // "CC_SHA1_Init" / M(Xor1) / S(122) / L(12)
        "\x39\x39\x25\x29\x32\x3b\x4b\x25\x33\x14\x13\x0e\x7a\xd7\x80\x92",
        // "CFBundleIdentifier" / M(Xor2) / S(142) / L(18)
        "\xde\xdb\xdf\xe8\xf3\xf9\xf1\xf8\xd4\xf9\xf8\xf3\xe9\xf4\xfb\xf4\xf8\xef\x9d",
        // "ASN1_get_object" / M(Xor1) / S(37) / L(15)
        "\x64\x76\x6b\x14\x7a\x42\x40\x51\x7a\x4a\x47\x4f\x40\x46\x51\x25",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Rot) / S(255) / L(59)
        "\x35\x30\x39\x30\x64\x39\x34\x61\x39\x35\x35\x39\x31\x62\x39\x34\x38\x39\x32\x60\x39\x2f\x37\x39\x65\x65\x39\x34\x37\x39\x63\x30\x39\x33\x60\x39\x64\x31\x39\x31\x33\x39\x34\x31\x39\x63\x30\x39\x38\x37\x39\x63\x65\x39\x35\x62\x39\x35\x2f\xff\x31\xae\xa1\xff\x62\xbe\x34\xf6",
        // "objc_msgSend" / M(Xor1) / S(197) / L(12)
        "\xaa\xa7\xaf\xa6\x9a\xa8\xb6\xa2\x96\xa0\xab\xa1\xc5\x90\x1b\x19",
        // "CFBundleIdentifier" / M(Xor4) / S(250) / L(18)
        "\xcd\xc8\xcc\xfb\xe0\xea\xe2\xeb\xc7\xea\xeb\xe0\xfa\xe7\xe8\xe7\xeb\xfc\x8e",
        // "" / M(None) / S(0) / L(0)
        "\xa9\x13\x1c\x8d\xba\x61\xac\x71\xa6\x4e\x65\x01\x3c\x9b\xa2\x2c\x09\x3c\x33\xbf\xc9\xc0\xcb\x6d\x0e\x47\xac\xea\x76\x5d\x6e\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x00\x00\xb6\x02\x4a\x67\xc6\x66\x42\xa3\x3e\x2a\xa0\x68\xd0\x14\x68\x89\xea\xdf\x24\x81\x53\x27\x81\xfb\x10\xf4\x59\x45\xa7\xe8",
        // "CFDataCreateMutable" / M(Xor2) / S(135) / L(19)
        "\xd0\xd5\xd7\xf2\xe7\xf2\xd0\xe1\xf6\xf2\xe7\xf6\xde\xe6\xe7\xf2\xf1\xff\xf6\x93",
        // "CC_SHA1" / M(Xor3) / S(122) / L(7)
        "\xc9\xc9\xd5\xd9\xc2\xcb\xbb\x8a\x07\x87\xa4\x05\x05\x79\x8e\xb9",
        // "kCFBundleIdentifierKey" / M(Rot) / S(204) / L(22)
        "\x37\x0f\x12\x0e\x41\x3a\x30\x38\x31\x15\x30\x31\x3a\x40\x35\x32\x35\x31\x3e\x17\x31\x45\xcc",
        // "" / M(None) / S(0) / L(0)
        "\xcc\x0f\x5c\x65\x57\xb7\xfa\xd1\x9a\x71\xec\x7b\xbf\x6a\x4c\x2a\xe7\xfe\x08\xc6\x23\x19\xeb\x81\x0f\x09\x11\x18\xd1\x6b\xb9\x84",
        // "sk_value" / M(Xor2) / S(182) / L(8)
        "\xd5\xcd\xf9\xd0\xc7\xca\xd3\xc3\xa6\x91\x3c\x0f\x58\x16\x6c\xdf",
        // "" / M(None) / S(0) / L(0)
        "\xce\x6d\x56\xaa\x68\x78\x82\x7f\x4d\x96\x8c\xc4\xfd\xd7\xba\x3a\xfe\x2f\x2b\xa1\x48\x36\x79\xb2\xd1\xd8\x49\x75\xf5\xec\x90\x42",
        // "SHA1" / M(Xor3) / S(99) / L(4)
        "\x20\x3b\x32\x42\x73\x52\xb6\xee\x09\xfc\x35\xab\x39\xdb\x3d\x05",
        // "objc_lookUpClass" / M(Rot) / S(139) / L(16)
        "\xfa\xed\xf5\xee\xea\xf7\xfa\xfa\xf6\xe0\xfb\xce\xf7\xec\xfe\xfe\x8b",
        // "CFBundleGetMainBundle" / M(Xor2) / S(154) / L(21)
        "\xcf\xca\xce\xf9\xe2\xe8\xe0\xe9\xcb\xe9\xf8\xc1\xed\xe5\xe2\xce\xf9\xe2\xe8\xe0\xe9\x8c",
        // "kCFDateFormatterTimeZone" / M(Xor2) / S(74) / L(24)
        "\x00\x28\x2d\x2f\x0a\x1f\x0e\x2d\x04\x19\x06\x0a\x1f\x1f\x0e\x19\x3f\x02\x06\x0e\x31\x04\x05\x0e\x6b\xfb\x01\xc3\x9e\x80\x21\x50\xcd",
        // "" / M(None) / S(0) / L(0)
        "\xbb\x25\x3e\x61\x34\xd4\xe8\xb6\xa8\x23\x03\x70\x74\x93\x29\x09\x00\xb4\xff\xdc\x12\xf6\x2b\xa5\xe8\x5b\xad\x7b\x72\x02\xca\x88",
        // "CFDictionaryCreateMutable" / M(Xor4) / S(34) / L(25)
        "\xc7\xc2\xc0\xed\xe7\xf0\xed\xeb\xea\xe5\xf6\xfd\xc7\xf6\xe1\xe5\xf0\xe1\xc9\xf1\xf0\xe5\xe6\xe8\xe1\x84\xac\xb2\x12\x7c\x7b\x56\x0d\xb4",
        // "PKCS7_verify" / M(Xor4) / S(114) / L(12)
        "\x70\x6b\x63\x73\x17\x7f\x56\x45\x52\x49\x46\x59\x20\xf2\x79\xb2",
        // "" / M(None) / S(0) / L(0)
        "\x30\xea\x1f\x97\xdf\xbf\xc1\xcd\x94\x65\xc9\xce\x97\x76\x88\xe0\x70\x1f\xc8\x50\x66\x29\x5b\x9e\x86\x3c\x76\x5b\xc4\x08\x34\x7e",
        // "" / M(None) / S(0) / L(0)
        "\x07\x6b\xe0\x6c\x9c\x66\x1a\xc1\x8d\x0f\x71\x7e\xe7\x2b\x3f\xd6\x23\x87\xf6\x51\x6b\xde\xf3\xc5\x27\x92\xaf\xc2\xf4\xf4\x4a\x70",
        // "d2i_PKCS7_bio" / M(Xor3) / S(187) / L(13)
        "\xaf\xf9\xa2\x94\x9b\x80\x88\x98\xfc\x94\xa9\xa2\xa4\xcb\xba\x69",
        // "BIO_new" / M(Rot) / S(244) / L(7)
        "\x36\x3d\x43\x53\x62\x59\x6b\xf4\xbf\x16\x88\x67\x11\x0f\x36\x67",
        // "CFBundleShortVersionString" / M(Xor3) / S(193) / L(26)
        "\xa7\xa2\xa6\x91\x8a\x80\x88\x81\xb7\x8c\x8b\x96\x90\xb2\x81\x96\x97\x8d\x8b\x8a\xb7\x90\x96\x8d\x8a\x83\xe4\xb4\x78\x04\x65\x55\xf5\xbf\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x1a\x55\xb3\xc4\x3c\x7d\xd4\xec\x40\xf7\xad\xb3\xd6\x8d\xd6\x32\x2c\x18\x1f\x5c\xe7\x37\xab\x1e\x1f\x1c\x52\xb4\x52\xbd\xb7\xdc",
        // "d2i_X509_bio" / M(Xor2) / S(247) / L(12)
        "\x83\xd5\x8e\xb8\xbf\xd2\xd7\xde\xb8\x85\x8e\x88\xe7\xd5\x1f\x1e",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(161) / L(22)
        "\xf5\xf0\xf7\xc4\xc4\xd7\xcf\xf1\xd3\xc2\xe0\xd7\xda\xc3\xd3\xf7\xc2\xff\xd8\xd2\xd3\xce\xb6",
        // "CFDateCreate" / M(Xor3) / S(60) / L(12)
        "\x0f\x0a\x08\x2d\x38\x29\x0f\x3e\x29\x2d\x38\x29\x4c\x30\xfd\x71",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor4) / S(138) / L(40)
        "\x09\x05\x07\x44\x03\x04\x1e\x0b\x04\x0d\x03\x08\x06\x0f\x19\x05\x0c\x1e\x1d\x0b\x18\x0f\x44\x07\x0f\x04\x19\x06\x0b\x09\x18\x05\x19\x19\x0f\x19\x1e\x0b\x1e\x19\x6a\x8c\xb1\xd3\xb1\x81\xce\xfb\x30",
        // "EVP_get_digestbyname" / M(Xor4) / S(67) / L(20)
        "\x3a\x29\x2f\x20\x18\x1a\x0b\x20\x1b\x16\x18\x1a\x0c\x0b\x1d\x06\x11\x1e\x12\x1a\x7f",
        // "EVP_DigestInit" / M(Xor3) / S(238) / L(14)
        "\xbb\xa8\xae\xa1\xba\x97\x99\x9b\x8d\x8a\xb7\x90\x97\x8a\xfe\x4d",
        // "CFDictionaryGetValue" / M(Xor3) / S(196) / L(20)
        "\x9a\x9f\x9d\xb0\xba\xad\xb0\xb6\xb7\xb8\xab\xa0\x9e\xbc\xad\x8f\xb8\xb5\xac\xbc\xd9",
        // "identifierForVendor" / M(Xor1) / S(177) / L(19)
        "\xd8\xd5\xd4\xdf\xc5\xd8\xd7\xd8\xd4\xc3\xf7\xde\xc3\xe7\xd4\xdf\xd5\xde\xc3\xb1",
        // "mainBundle" / M(Xor1) / S(172) / L(10)
        "\xc1\xcd\xc5\xc2\xee\xd9\xc2\xc8\xc0\xc9\xac\x8e\x71\xac\xce\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x8a\x69\x95\x3f\x35\x21\x8d\xde\x40\x71\x3a\xd2\xa9\xc7\xbe\x14\xdb\xa6\xc1\x65\xe9\xe5\x60\x14\xab\x44\xd7\x8a\xdd\xde\x90\x03",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(242) / L(24)
        "\x90\x95\x91\xa6\xbd\xb7\xbf\xb6\x86\xbd\xbf\xbc\xb2\xb7\x96\xab\xb6\xb0\xa6\xa7\xb2\xb1\xbf\xb6\xd3\xe6\x35\x47\x72\xd0\xf0\x8c\x66",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(208) / L(23)
        "\xa3\xbb\xa2\x95\x93\x95\x99\x80\x84\xa2\x95\x96\x82\x95\x83\x98\xa2\x95\x81\x85\x95\x83\x84\xf0\xc5\xd1\x54\x96\x87\x31\x9c\x0b",
        // "CFBundleGetMainBundle" / M(Xor3) / S(5) / L(21)
        "\x58\x5d\x59\x6e\x75\x7f\x77\x7e\x5c\x7e\x6f\x56\x7a\x72\x75\x59\x6e\x75\x7f\x77\x7e\x1b",
        // "5" / M(Rot) / S(8) / L(1)
        "\x3d\x08\xce\x57\x27\x7c\x15\x16\xbf\x5c\x58\x72\x4a\xb7\x2f\x1f",
        // "" / M(None) / S(0) / L(0)
        "\xf3\xf3\xbc\xe6\x28\xd0\x5c\x74\x6b\x7b\xfc\xba\x1e\x4c\xcf\x94\x1a\xbf\x31\xf7\x17\x1b\x86\x57\x13\xa4\x67\x17\xdd\x4c\x1e\x03",
        // "dlopen" / M(Xor1) / S(184) / L(6)
        "\xdc\xd4\xd7\xc8\xdd\xd6\xb8\x00\x91\x51\x1a\xac\x80\x47\x75\x68",
        // "CFArrayCreateMutable" / M(Xor2) / S(18) / L(20)
        "\x44\x41\x46\x75\x75\x66\x7e\x44\x75\x62\x66\x73\x62\x4a\x72\x73\x66\x65\x6b\x62\x07",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(103) / L(59)
        "\x15\x12\x19\x12\x66\x19\x16\x61\x19\x15\x15\x19\x11\x60\x19\x16\x1a\x19\x10\x62\x19\x13\x1b\x19\x65\x65\x19\x16\x1b\x19\x67\x12\x19\x17\x62\x19\x66\x11\x19\x11\x17\x19\x16\x11\x19\x67\x12\x19\x1a\x1b\x19\x67\x65\x19\x15\x60\x19\x15\x13\x23\x08\x1f\xc4\xfa\x2e\x58\xd6\x4c",
        // "CFDataGetLength" / M(Rot) / S(111) / L(15)
        "\xb2\xb5\xb3\xd0\xe3\xd0\xb6\xd4\xe3\xbb\xd4\xdd\xd6\xe3\xd7\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x8e\x0a\xba\x9c\x1a\xb6\xb8\x04\xaa\xca\x85\xac\x7a\x54\x26\x7e\x3f\x54\x6a\xed\x5b\xff\x1b\xcf\x5d\xc6\x5d\x97\xfa\x1b\xef\x5f",
        // "PKCS7_verify" / M(Xor2) / S(213) / L(12)
        "\x95\x8e\x86\x96\xf2\x9a\xb3\xa0\xb7\xac\xa3\xbc\xc5\xc1\x74\xea",
        // "" / M(None) / S(0) / L(0)
        "\x68\x4e\xbd\xf4\xf4\x76\x82\xbf\x0c\xb2\x7b\xe6\x66\xf8\x35\x7f\xa0\xff\xd7\x99\xa1\xc8\x48\xa3\xca\x2d\xfb\xcb\xa9\x99\x84\x5e",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor2) / S(26) / L(40)
        "\x48\x44\x46\x05\x42\x45\x5f\x4a\x45\x4c\x42\x49\x47\x4e\x58\x44\x4d\x5f\x5c\x4a\x59\x4e\x05\x46\x4e\x45\x58\x47\x4a\x48\x59\x44\x58\x58\x4e\x58\x5f\x4a\x5f\x58\x2b\x26\x5e\xae\x28\xe2\x93\x4d\xd8",
        // "dlsym" / M(Rot) / S(119) / L(5)
        "\xdb\xe3\xea\xf0\xe4\x77\x62\x4f\xc7\x4d\x29\x53\x10\x3d\x9a\x9f",
        // "ASN1_INTEGER_free" / M(Xor2) / S(9) / L(17)
        "\x5a\x48\x55\x2a\x44\x52\x55\x4f\x5e\x5c\x5e\x49\x44\x7d\x69\x7e\x7e\x1b",
        // "CFDataGetLength" / M(Rot) / S(85) / L(15)
        "\x98\x9b\x99\xb6\xc9\xb6\x9c\xba\xc9\xa1\xba\xc3\xbc\xc9\xbd\x55",
        // "strncmp" / M(Xor4) / S(201) / L(7)
        "\xe3\xe4\xe2\xfe\xf3\xfd\xe0\x90\x21\xcf\x90\xc5\x64\x00\x78\xef",
        // "CFReadStreamOpen" / M(Xor2) / S(242) / L(16)
        "\xa0\xa5\xb1\x86\x82\x87\xb0\x97\x91\x86\x82\x8e\xac\x93\x86\x8d\xe3",
        // "setDelegate:" / M(Xor3) / S(128) / L(12)
        "\xe3\xf5\xe4\xd4\xf5\xfc\xf5\xf7\xf1\xe4\xf5\xaa\x90\xd0\x53\xe1",
        // "" / M(None) / S(0) / L(0)
        "\xd4\x6c\x04\xe0\xbd\xc6\xae\x24\xb2\x4a\x5a\xbb\x0b\x91\xb1\xab\xab\xb5\x4d\x3a\x65\x6a\xe9\xfd\x9e\x30\x35\x56\x37\x13\x36\x3c",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(60) / L(16)
        "\x9f\x6e\xa5\x9b\x7d\x8f\x8a\x6d\x9b\x85\x8a\x90\x81\x83\x81\x8e\x3c",
        // "OpenSSL_add_all_digests" / M(Xor2) / S(72) / L(23)
        "\x27\x18\x0d\x06\x3b\x3b\x24\x37\x09\x0c\x0c\x37\x09\x04\x04\x37\x0c\x01\x0f\x0d\x1b\x1c\x1b\x68\x7e\x33\xdd\xee\xdd\x2c\xb9\x31",
        // "CFDateCreate" / M(Xor2) / S(183) / L(12)
        "\xe4\xe1\xe3\xc6\xd3\xc2\xe4\xd5\xc2\xc6\xd3\xc2\xa7\xeb\x4a\x9f",
        // "CFRelease" / M(Xor1) / S(126) / L(9)
        "\x3d\x38\x2c\x1b\x12\x1b\x1f\x0d\x1b\x7e\xca\x34\x7b\x1d\xa7\x2e",
        // "objc_lookUpClass" / M(Xor3) / S(78) / L(16)
        "\x30\x3d\x35\x3c\x00\x33\x30\x30\x34\x0a\x2f\x1c\x33\x3e\x2c\x2c\x5f",
        // "sel_registerName" / M(Rot) / S(34) / L(16)
        "\x95\x87\x8e\x81\x94\x87\x89\x8b\x95\x96\x87\x94\x70\x83\x8f\x87\x22",
        // "CFEqual" / M(Xor3) / S(74) / L(7)
        "\x19\x1c\x1f\x2b\x2f\x3b\x36\x5a\x28\x87\xe8\x99\x46\x81\xac\xd1",
        // "CFNumberCreate" / M(Xor2) / S(234) / L(14)
        "\xb9\xbc\xb4\x8f\x97\x98\x9f\x88\xb9\x88\x9f\x9b\x8e\x9f\xfa\xec",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(65) / L(25)
        "\x72\x6f\x73\x6f\x79\x75\x71\x6f\x72\x72\x74\x77\x74\x76\x6f\x72\x71\x71\x6f\x77\x6f\x72\x72\x6f\x72\x41\x4e\xb3\x4c\xde\x0e\xe6\x7e\xe6",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(8) / L(19)
        "\xf8\x95\x90\x99\xff\xc7\xc5\xd4\xff\xc5\xd8\xd4\xff\xc2\xd9\xff\xef\xe2\xea\xa0",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor1) / S(88) / L(32)
        "\x21\x21\x21\x21\x7f\x75\x7f\x15\x15\x7f\x75\x7f\x3c\x3c\x7f\x0c\x7f\x10\x10\x7f\x62\x7f\x35\x35\x7f\x62\x7f\x2b\x2b\x7f\x02\x7f\x58",
        // "EVP_MD_CTX_init" / M(Xor4) / S(87) / L(15)
        "\x35\x26\x20\x2f\x3d\x34\x2f\x33\x24\x28\x2f\x19\x1e\x19\x04\x70",
        // "" / M(None) / S(0) / L(0)
        "\xcb\xcc\x18\x52\x51\xa7\xca\xd5\xec\xe1\x1b\x11\x58\x0c\xa4\x17\x2f\x24\xa7\x93\xe9\x8d\x4f\xbd\xd4\xd1\xdc\x33\xa9\x9f\x15\x07",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(221) / L(39)
        "\x33\x36\x24\x19\x1d\x15\x2a\x1f\x1e\x15\x33\x02\x15\x11\x04\x15\x27\x19\x04\x18\x24\x19\x1d\x15\x39\x1e\x04\x15\x02\x06\x11\x1c\x36\x02\x1f\x1d\x37\x3d\x24\x70\x28\x58\xc6\xb0\xd0\xfd\xe5\x5b",
        // "CFDateFormatterSetProperty" / M(Rot) / S(225) / L(26)
        "\x24\x27\x25\x42\x55\x46\x27\x50\x53\x4e\x42\x55\x55\x46\x53\x34\x46\x55\x31\x53\x50\x51\x46\x53\x55\x5a\xe1\x8e\x96\x6a\x41\x20\xde\x80\xfa",
        // "CFReadStreamRead" / M(Xor4) / S(71) / L(16)
        "\xf4\xf1\xe5\xd2\xd6\xd3\xe4\xc3\xc5\xd2\xd6\xda\xe5\xd2\xd6\xd3\xb7",
        // "CC_SHA1" / M(Xor2) / S(251) / L(7)
        "\xa8\xa8\xb4\xb8\xa3\xaa\xda\xeb\xbf\xba\x5d\x41\x97\xc4\x95\x47",
        // "" / M(None) / S(0) / L(0)
        "\xc1\x49\x3c\x0b\x9c\x58\x27\xe3\x1d\xb6\x40\x71\x5b\xee\xf1\xc0\x93\xdd\xa5\x63\x9c\xed\xaa\xfa\xcb\x94\x59\x0c\x68\x61\x50\x51",
        // "" / M(None) / S(0) / L(0)
        "\x09\x08\x29\x2b\xa2\x3f\x40\xf5\x14\x14\x04\xaf\x55\x23\x5f\xa3\x4b\x66\xbb\x8d\xd4\xd8\x35\x06\xb3\x8d\x02\x01\x27\x5f\xc7\xc0",
        // "setjmp" / M(Xor2) / S(98) / L(6)
        "\x01\x17\x06\x18\x1f\x02\x72\x6b\x2c\x97\x6a\xc9\x4c\xcf\x59\x01",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(130) / L(32)
        "\xda\xda\xda\xda\x84\x8e\x84\xee\xee\x84\x8e\x84\xc7\xc7\x84\xf7\x84\xeb\xeb\x84\x99\x84\xce\xce\x84\x99\x84\xd0\xd0\x84\xf9\x84\xa3",
        // "" / M(None) / S(0) / L(0)
        "\x3b\x99\x15\xbd\x82\xec\xf5\xa5\x92\xdc\xa9\x17\x84\x87\x11\x68\x7f\x98\x43\x93\x22\xe2\xcc\x08\xc1\x78\x04\x01\xdb\x16\x00\xba",
        // "CFArrayAppendValue" / M(Xor4) / S(153) / L(18)
        "\x18\x1d\x1a\x29\x29\x3a\x22\x1a\x2b\x2b\x3e\x35\x3f\x0d\x3a\x37\x2e\x3e\x5b",
        // "" / M(None) / S(0) / L(0)
        "\xd9\x9f\x71\xdd\x12\x6f\xfe\xc7\x04\x3e\x7a\x95\x04\x01\x9c\xa5\x23\x68\xde\x04\x84\x7d\x59\xc8\x64\x98\x4a\xfb\x5a\xdb\x46\xf2",
        // "" / M(None) / S(0) / L(0)
        "\x05\x38\x56\xeb\x4d\xbd\xbd\xfd\xde\xbd\x78\x98\xe2\xc5\xb1\xe1\x9d\x3e\xa3\xfd\x07\x95\xda\xa1\x74\xfa\x31\xdb\x1f\x8b\x08\xcd",
        // "SHA1_Init" / M(Xor2) / S(49) / L(9)
        "\x72\x69\x60\x10\x7e\x68\x4f\x48\x55\x21\xb6\xdd\x57\x97\xb6\x2e",
        // "Apple Root CA" / M(Rot) / S(171) / L(13)
        "\xec\x1b\x1b\x17\x10\xcb\xfd\x1a\x1a\x1f\xcb\xee\xec\xab\x47\x60",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(93) / L(23)
        "\x12\x2d\x38\x33\x0e\x0e\x11\x02\x3c\x39\x39\x02\x3c\x31\x31\x02\x39\x34\x3a\x38\x2e\x29\x2e\x5d\x56\x70\x37\x5f\x62\x58\xf6\x81",
        // "alloc" / M(Xor4) / S(141) / L(5)
        "\xb1\xbc\xbc\xbf\xb3\xd0\x8f\xf6\xf8\xbb\x63\x4f\x23\xe4\xb4\x1b",
        // "d2i_X509_bio" / M(Xor4) / S(109) / L(12)
        "\xb4\xe2\xb9\x8f\x88\xe5\xe0\xe9\x8f\xb2\xb9\xbf\xd0\xd1\x0c\x2f",
        // "SHA1_Init" / M(Xor4) / S(255) / L(9)
        "\xa3\xb8\xb1\xc1\xaf\xb9\x9e\x99\x84\xf0\x00\x7b\x56\x67\xeb\x35",
        // "" / M(None) / S(0) / L(0)
        "\x76\xb2\x31\x70\xdf\x21\xdd\x50\x8a\x88\x41\x29\xaf\x5f\x63\x27\x99\x60\xac\x4b\x0f\xb8\xd0\x23\xe3\x93\x16\x48\xa5\xb2\x70\x20",
        // "" / M(None) / S(0) / L(0)
        "\x4c\xa9\x43\x9d\xfe\x71\xbf\x94\x5c\x94\xbf\x35\x1f\x1e\xf1\x86\xbe\x51\x8d\x37\x6c\x3e\x7a\x32\x18\xbf\x4a\x78\x9f\xb8\x1c\x8c",
        // "5" / M(Xor3) / S(140) / L(1)
        "\xa9\x9c\xc3\xfd\x18\xab\xb5\xab\xaa\x6d\x4e\x25\xf2\x9d\xfb\x4f",
        // "setjmp" / M(Xor1) / S(242) / L(6)
        "\x81\x97\x86\x98\x9f\x82\xf2\xba\x00\x40\xaf\x79\x09\x63\x39\xe6",
        // "PKCS7_get0_signers" / M(Rot) / S(189) / L(18)
        "\x0d\x08\x00\x10\xf4\x1c\x24\x22\x31\xed\x1c\x30\x26\x24\x2b\x22\x2f\x30\xbd",
        // "CC_SHA1_Update" / M(Xor1) / S(16) / L(14)
        "\x53\x53\x4f\x43\x58\x51\x21\x4f\x45\x60\x74\x71\x64\x75\x10\xc0",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x62\x16\x0a\x3c\x07\xe5\x8d\x6d\xf3\xaa\x09\x22\x7b\xa4\x86\xc9\xdc\x12\x2e\xe4\xf3\xea\x10\x70\x33\x1b\x6a\xdd\x9a\x3c\x18",
        // "CFDateFormatterCreateDateFromString" / M(Rot) / S(187) / L(35)
        "\xfe\x01\xff\x1c\x2f\x20\x01\x2a\x2d\x28\x1c\x2f\x2f\x20\x2d\xfe\x2d\x20\x1c\x2f\x20\xff\x1c\x2f\x20\x01\x2d\x2a\x28\x0e\x2f\x2d\x24\x29\x22\xbb",
        // "" / M(None) / S(0) / L(0)
        "\xfb\xaf\x36\x09\x61\x56\xce\x77\x1f\xfc\x70\x54\x0b\x6a\xee\x87\xb8\x36\xe0\x88\xea\x4f\x86\xf4\xe9\xa9\x30\x65\x5e\xf3\xd7\x62",
        // "CFDictionarySetValue" / M(Xor2) / S(21) / L(20)
        "\x43\x46\x44\x69\x63\x74\x69\x6f\x6e\x61\x72\x79\x53\x65\x74\x56\x61\x6c\x75\x65\x00",
        // "CC_SHA1_Final" / M(Xor3) / S(1) / L(13)
        "\x52\x52\x4e\x42\x59\x50\x20\x4e\x57\x78\x7f\x70\x7d\x11\x5f\x2b",
        // "%02X:" / M(Rot) / S(14) / L(5)
        "\x33\x3e\x40\x66\x48\x0e\x76\x67\xcd\x27\x30\x45\x1d\xe3\x78\x06",
        // "CFStringCompare" / M(Xor3) / S(6) / L(15)
        "\x55\x50\x45\x62\x64\x7f\x78\x71\x55\x79\x7b\x66\x77\x64\x73\x16",
        // "CFEqual" / M(Xor3) / S(190) / L(7)
        "\x8d\x88\x8b\xbf\xbb\xaf\xa2\xce\xaa\x86\x38\xf4\x84\xb6\xbd\xcc",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(133) / L(23)
        "\xf3\xeb\xf2\xc5\xc3\xc5\xc9\xd0\xd4\xf2\xc5\xc6\xd2\xc5\xd3\xc8\xf2\xc5\xd1\xd5\xc5\xd3\xd4\xa0\xfb\xcd\x8d\x4a\x06\xd9\x71\x8f",
        // "NSBundle" / M(Xor4) / S(219) / L(8)
        "\xfe\xe3\xf2\xc5\xde\xd4\xdc\xd5\xb0\x33\xd1\x9e\x36\xae\xe4\xa4",
        // "getUUIDBytes:" / M(Xor1) / S(127) / L(13)
        "\x18\x1a\x0b\x2a\x2a\x36\x3b\x3d\x06\x0b\x1a\x0c\x45\x7f\xfa\x0d",
        // "CC_SHA1_Final" / M(Xor3) / S(76) / L(13)
        "\x1f\x1f\x03\x0f\x14\x1d\x6d\x03\x1a\x35\x32\x3d\x30\x5c\x07\xd9",
        // "CFReadStreamRead" / M(Rot) / S(246) / L(16)
        "\x39\x3c\x48\x5b\x57\x5a\x49\x6a\x68\x5b\x57\x63\x48\x5b\x57\x5a\xf6",
        // "d2i_PKCS7_bio" / M(Rot) / S(244) / L(13)
        "\x58\x26\x5d\x53\x44\x3f\x37\x47\x2b\x53\x56\x5d\x63\xf4\x2c\x71",
        // "EVP_DigestFinal" / M(Xor3) / S(129) / L(15)
        "\xd4\xc7\xc1\xce\xd5\xf8\xf6\xf4\xe2\xe5\xd7\xf8\xff\xf0\xfd\x91",
        // "%02X" / M(Xor4) / S(234) / L(4)
        "\x85\x90\x92\xf8\xa0\xd8\xe5\x51\x59\xce\xac\xa6\xff\x58\x21\x18",
        // "longjmp" / M(Xor2) / S(154) / L(7)
        "\xe6\xe5\xe4\xed\xe0\xe7\xfa\x8a\x75\x5e\x0d\xef\xb9\xa2\xac\xc1",
        // "5" / M(Xor4) / S(78) / L(1)
        "\xd5\xe0\x2a\x51\xdd\x13\x69\x46\x12\xff\xd8\x5e\x69\x04\x81\xbc",
        // "CFStringCreateWithBytes" / M(Xor4) / S(212) / L(23)
        "\xc3\xc6\xd3\xf4\xf2\xe9\xee\xe7\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xc2\xf9\xf4\xe5\xf3\x80\xa1\x0f\x71\xe2\x67\xa4\x8e\x05",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(172) / L(59)
        "\xc6\xc1\xca\xc1\xb5\xca\xc5\xb2\xca\xc6\xc6\xca\xc2\xb3\xca\xc5\xc9\xca\xc3\xb1\xca\xc0\xc8\xca\xb6\xb6\xca\xc5\xc8\xca\xb4\xc1\xca\xc4\xb1\xca\xb5\xc2\xca\xc2\xc4\xca\xc5\xc2\xca\xb4\xc1\xca\xc9\xc8\xca\xb4\xb6\xca\xc6\xb3\xca\xc6\xc0\xf0\x49\xca\x0c\x8e\x29\x72\xd4\x5a",
        // "" / M(None) / S(0) / L(0)
        "\xf2\xe2\xb3\x29\x7d\xf8\x03\x02\x76\xf7\x61\xf1\x57\x9c\xce\xa2\xcd\xa6\xc5\x59\x8d\xb8\xdd\xec\x03\xe0\x5f\xfa\x04\x21\xe5\x59",
        // "sel_registerName" / M(Xor2) / S(252) / L(16)
        "\x9e\x88\x81\xb2\x9f\x88\x8a\x84\x9e\x99\x88\x9f\xa3\x8c\x80\x88\xed",
        // "ASN1_INTEGER_get" / M(Xor3) / S(160) / L(16)
        "\xf0\xe2\xff\x80\xee\xf8\xff\xe5\xf4\xf6\xf4\xe3\xee\xd6\xd4\xc5\xb1",
        // "%02X" / M(Xor2) / S(42) / L(4)
        "\x1f\x0a\x08\x62\x3a\x36\x0a\xf7\xe2\x87\x72\x6a\x2d\xa6\xd2\x78",
        // "" / M(None) / S(0) / L(0)
        "\x26\x0d\xda\x38\xd7\xad\x67\x7f\x7c\x2b\xf8\xd1\xd4\x19\x1e\xfb\xeb\x98\xd4\x10\x88\xca\xa7\xf5\xc8\x81\xd8\xf1\x3f\x1b\x47\xdb",
        // "" / M(None) / S(0) / L(0)
        "\x66\xd8\x66\x75\xc0\xa5\x1e\xca\x41\x32\xcc\xe0\x58\xbb\x36\xda\xc7\xbd\x81\xa8\x12\x09\x5a\x1c\x45\x9d\xda\xcf\x97\xbc\x41\x85",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(164) / L(25)
        "\x90\xfd\xf8\xf1\x97\x86\x89\x85\x8d\x97\xaf\xad\xbc\x97\xbc\xad\xb0\xbc\x97\xaa\xb1\x97\x86\x81\x8c\xc8\x6e\xb2\x90\xdf\x99\x51\x20\x2c",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(254) / L(14)
        "\x5c\x5a\x42\x4a\x51\x43\x4f\x47\x40\x51\x41\x40\x42\x57\x0e\x34",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(226) / L(39)
        "\x23\x26\x34\x09\x0d\x05\x3a\x0f\x0e\x05\x23\x12\x05\x01\x14\x05\x37\x09\x14\x08\x34\x09\x0d\x05\x29\x0e\x14\x05\x12\x16\x01\x0c\x26\x12\x0f\x0d\x27\x2d\x34\x60\xa7\xed\x48\xff\x8d\xf0\xb6\x0e",
        // "init" / M(Xor3) / S(212) / L(4)
        "\x8d\x8a\x8d\x90\xe4\xe0\x25\xc2\x93\xfc\xb7\x16\x3d\x3a\x5c\xb1",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(101) / L(59)
        "\xe2\xe5\xee\xe5\xb1\xee\xe1\xb6\xee\xe2\xe2\xee\xe6\xb7\xee\xe1\xed\xee\xe7\xb5\xee\xe4\xec\xee\xb2\xb2\xee\xe1\xec\xee\xb0\xe5\xee\xe0\xb5\xee\xb1\xe6\xee\xe6\xe0\xee\xe1\xe6\xee\xb0\xe5\xee\xed\xec\xee\xb0\xb2\xee\xe2\xb7\xee\xe2\xe4\xd4\x7a\x24\xe3\x26\x1c\xa2\x74\xd2",
        // "SHA1_Update" / M(Xor4) / S(136) / L(11)
        "\xd3\xc8\xc1\xb1\xdf\xd5\xf0\xe4\xe1\xf4\xe5\x80\x8d\xbf\x49\x49",
        // "" / M(None) / S(0) / L(0)
        "\x1c\x8c\xdc\x18\x8f\x8d\xcb\xa1\x03\x9f\x0a\x5f\xd5\x80\x9d\x90\x62\xba\xb7\x88\x76\xe1\xcf\xd5\x51\x39\x85\x4a\x6e\xad\x93\xba",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(98) / L(24)
        "\x6c\x36\x30\x31\x6c\x2f\x2a\x21\x6c\x2f\x2a\x21\x10\x3a\x30\x37\x26\x2e\x6d\x27\x3a\x2f\x2a\x21\x43\xa2\x40\xa0\x85\x51\x6c\xfb\x35",
        // "" / M(None) / S(0) / L(0)
        "\x7b\x14\xc5\x1b\xee\xc1\x6b\x40\xf8\xcb\x9d\x2d\x4f\x1c\x36\xd6\xee\x79\xaa\x20\x0b\x45\x41\x7e\x16\x08\xfc\xec\x9f\xf9\x62\xaa",
        // "CFDataAppendBytes" / M(Xor1) / S(54) / L(17)
        "\x75\x70\x72\x57\x42\x57\x77\x46\x46\x53\x58\x52\x74\x4f\x42\x53\x45\x36",
        // "CFBundleVersion" / M(Xor4) / S(181) / L(15)
        "\x13\x16\x12\x25\x3e\x34\x3c\x35\x06\x35\x22\x23\x39\x3f\x3e\x50",
        // "CFArrayCreateMutable" / M(Xor4) / S(0) / L(20)
        "\x43\x46\x41\x72\x72\x61\x79\x43\x72\x65\x61\x74\x65\x4d\x75\x74\x61\x62\x6c\x65\x00",
        // "X509_get_ext_by_OBJ" / M(Rot) / S(149) / L(19)
        "\xed\xca\xc5\xce\xf4\xfc\xfa\x09\xf4\xfa\x0d\x09\xf4\xf7\x0e\xf4\xe4\xd7\xdf\x95",
        // "sk_free" / M(Xor3) / S(33) / L(7)
        "\x42\x5a\x6e\x57\x43\x54\x54\x31\xbd\x88\xa8\xc1\xf8\x41\xfc\x03",
        // "CFReadStreamClose" / M(Rot) / S(14) / L(17)
        "\x51\x54\x60\x73\x6f\x72\x61\x82\x80\x73\x6f\x7b\x51\x7a\x7d\x81\x73\x0e",
        // "CFStringCompare" / M(Xor3) / S(225) / L(15)
        "\xb2\xb7\xa2\x85\x83\x98\x9f\x96\xb2\x9e\x9c\x81\x90\x83\x94\xf1",
        // "X509_STORE_free" / M(Rot) / S(164) / L(15)
        "\xfc\xd9\xd4\xdd\x03\xf7\xf8\xf3\xf6\xe9\x03\x0a\x16\x09\x09\xa4",
        // "" / M(None) / S(0) / L(0)
        "\x31\xf8\xc7\x19\x69\x9d\x08\xd0\xed\x62\x72\x8b\x07\x8f\x99\x50\x4c\x08\xc2\xb7\x84\xf2\x95\x38\x8a\xd5\x1c\x11\x45\x36\x84\x52",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(82) / L(24)
        "\xd1\xd4\xd6\xf3\xe6\xf7\xd4\xfd\xe0\xff\xf3\xe6\xe6\xf7\xe0\xc1\xf7\xe6\xd4\xfd\xe0\xff\xf3\xe6\x92\xd2\xb2\x64\x00\xf0\xc8\xce\x58",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(237) / L(16)
        "\x9f\xce\x95\xa3\xbd\xaf\xb2\xcd\xa3\xb5\xb2\xa8\xb9\xbb\xb9\xae\xfc",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(235) / L(36)
        "\xa8\xad\xa9\x9e\x85\x8f\x87\x8e\xac\x8e\x9f\xbd\x8a\x87\x9e\x8e\xad\x84\x99\xa2\x85\x8d\x84\xaf\x82\x88\x9f\x82\x84\x85\x8a\x99\x92\xa0\x8e\x92\xeb",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(226) / L(24)
        "\xa1\xa4\xa3\x80\x91\x8d\x8e\x97\x96\x87\xb6\x8b\x8f\x87\xa5\x87\x96\xa1\x97\x90\x90\x87\x8c\x96\xe2\x7e\x8f\x25\x97\x59\xdb\x31\xd1",
        // "EVP_DigestInit" / M(Xor3) / S(34) / L(14)
        "\x77\x64\x62\x6d\x76\x5b\x55\x57\x41\x46\x7b\x5c\x5b\x46\x32\x30",
        // "EVP_get_digestbyname" / M(Xor3) / S(177) / L(20)
        "\x83\x90\x96\x99\xa1\xa3\xb2\x99\xa2\xaf\xa1\xa3\xb5\xb2\xa4\xbf\xa8\xa7\xab\xa3\xc6",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(35) / L(40)
        "\x85\x82\x82\xf6\x86\xf1\x85\x85\x81\xf0\x86\x8a\x80\xf2\x83\x8b\xf5\xf5\x86\x8b\xf7\x82\x87\xf2\xf6\x81\x81\x87\x86\x81\xf7\x82\x8a\x8b\xf7\xf5\x85\xf0\x85\x83\xb3\x73\x8f\x06\x9e\xa5\x9b\x8c\xb0",
        // "" / M(None) / S(0) / L(0)
        "\x32\x64\x22\xed\x26\x8e\xbf\x6b\x31\x34\x3f\xae\xbb\x92\x4c\xff\xfd\xb1\x58\xe1\x1f\x53\x25\x9b\x11\xbd\x25\xff\xb5\x95\x47\x4c",
        // "ASN1_OBJECT_free" / M(Xor1) / S(203) / L(16)
        "\x8a\x98\x85\xfa\x94\x84\x89\x81\x8e\x88\x9f\x94\xad\xb9\xae\xae\xcb",
        // "." / M(Xor2) / S(194) / L(1)
        "\xfc\xd2\x9f\xd6\x97\x30\xef\x30\x2c\x0c\xb8\xf6\x0c\xdb\x20\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x0b\x06\x2f\x51\x90\x3b\x3d\xa3\x01\x0e\x92\x8e\xd4\xa5\xed\x71\x97\x3c\x0d\x2e\xa0\x8f\x93\xc5\x3e\x13\x93\xc1\x09\xd1\xce\xd0",
        // "CFDictionaryAddValue" / M(Xor3) / S(59) / L(20)
        "\x13\x16\x14\x39\x33\x24\x39\x3f\x3e\x31\x22\x29\x11\x34\x34\x06\x31\x3c\x25\x35\x50",
        // "%02x" / M(Xor4) / S(43) / L(4)
        "\x95\x80\x82\xc8\xb0\x86\xe5\xf5\x8c\xa9\x51\xa5\x13\x10\x38\x56",
        // "CFBundleGetIdentifier" / M(Xor3) / S(135) / L(21)
        "\xde\xdb\xdf\xe8\xf3\xf9\xf1\xf8\xda\xf8\xe9\xd4\xf9\xf8\xf3\xe9\xf4\xfb\xf4\xf8\xef\x9d",
        // "CFNumberCreate" / M(Xor4) / S(217) / L(14)
        "\xd3\xd6\xde\xe5\xfd\xf2\xf5\xe2\xd3\xe2\xf5\xf1\xe4\xf5\x90\xb6",
        // "strncmp" / M(Xor1) / S(217) / L(7)
        "\xaa\xad\xab\xb7\xba\xb4\xa9\xd9\xba\xad\x5b\x27\xa5\x17\x23\x22",
        // "CFDictionaryGetValue" / M(Xor2) / S(219) / L(20)
        "\x8d\x88\x8a\xa7\xad\xba\xa7\xa1\xa0\xaf\xbc\xb7\x89\xab\xba\x98\xaf\xa2\xbb\xab\xce",
        // "CFArrayCreateMutable" / M(Xor4) / S(2) / L(20)
        "\x69\x6c\x6b\x58\x58\x4b\x53\x69\x58\x4f\x4b\x5e\x4f\x67\x5f\x5e\x4b\x48\x46\x4f\x2a",
        // "BIO_s_mem" / M(Xor4) / S(48) / L(9)
        "\x42\x49\x4f\x5f\x73\x5f\x6d\x65\x6d\x00\xf1\x09\x55\x7e\xc8\x5a",
        // "start" / M(Xor3) / S(152) / L(5)
        "\xdb\xdc\xc9\xda\xdc\xa8\xb9\x12\x6c\xe6\x75\x72\x41\xef\x06\xc9",
        // "mainBundle" / M(Xor4) / S(215) / L(10)
        "\x1d\x11\x19\x1e\x32\x05\x1e\x14\x1c\x15\x70\x09\x7e\xd6\x97\x1f",
        // "CFArrayAppendValue" / M(Xor4) / S(147) / L(18)
        "\xaa\xaf\xa8\x9b\x9b\x88\x90\xa8\x99\x99\x8c\x87\x8d\xbf\x88\x85\x9c\x8c\xe9",
        // "currentDevice" / M(Xor4) / S(26) / L(13)
        "\xc3\xd5\xd2\xd2\xc5\xce\xd4\xe4\xc5\xd6\xc9\xc3\xc5\xa0\xaa\x93",
        // "PKCS7_get0_signers" / M(Xor2) / S(217) / L(18)
        "\x9a\x81\x89\x99\xfd\x95\xad\xaf\xbe\xfa\x95\xb9\xa3\xad\xa4\xaf\xb8\xb9\xca",
        // "sk_value" / M(Xor1) / S(49) / L(8)
        "\x42\x5a\x6e\x47\x50\x5d\x44\x54\x31\x65\xfb\xe7\x62\x63\x56\x15",
        // "" / M(None) / S(0) / L(0)
        "\x2e\xd0\x11\x7d\xd2\x19\x4b\x8a\x81\xdb\xb8\x89\x5f\x57\x00\x86\x4e\x59\x55\xdb\x8c\x50\x1f\x62\xd1\x3c\x43\xfd\x0e\x25\x56\x72",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor4) / S(71) / L(40)
        "\xa1\xa6\xa6\xf2\xa2\xf5\xa1\xa1\xa5\xf4\xa2\xae\xa4\xf6\xa7\xaf\xf1\xf1\xa2\xaf\xf3\xa6\xa3\xf6\xf2\xa5\xa5\xa3\xa2\xa5\xf3\xa6\xae\xaf\xf3\xf1\xa1\xf4\xa1\xa7\x97\xe0\x2b\x71\xf1\xce\x74\xf6\xe7",
        // "CFRelease" / M(Xor2) / S(89) / L(9)
        "\x0a\x0f\x1b\x2c\x25\x2c\x28\x3a\x2c\x49\x9a\x8a\x62\xe5\xa0\x99",
        // "BIO_write" / M(Xor4) / S(109) / L(9)
        "\x92\x99\x9f\x8f\xa7\xa2\xb9\xa4\xb5\xd0\x4f\x95\x11\x99\xe1\x4f",
        // "exit" / M(Xor2) / S(99) / L(4)
        "\x16\x0b\x1a\x07\x73\x4d\xed\xc1\xf9\x0d\x60\xd4\x93\x3c\x4e\x3d",
        // "" / M(None) / S(0) / L(0)
        "\x2f\x7b\x3a\x68\x3e\xaa\x72\x88\xf0\x74\xfc\x6f\xe1\x7c\x97\xed\x59\x89\xc9\x38\xcf\x04\xb4\xa6\xdc\x4e\xb2\x0f\x12\x7e\x96\xad",
        // "" / M(None) / S(0) / L(0)
        "\x98\xce\xc4\x15\xf5\x1a\x61\x25\x9b\x1d\x7b\x86\x76\x40\xf5\x83\xd6\x30\x08\xe9\xe0\x70\xdb\xc8\x86\x35\x46\xa1\xfa\x1c\x9d\xd1",
        // "CFDateCreate" / M(Xor4) / S(165) / L(12)
        "\x13\x16\x14\x31\x24\x35\x13\x22\x35\x31\x24\x35\x50\xd5\xb5\x0f",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x78\x7d\xdf\x58\x48\x13\x82\xba\xb2\x19\xce\xd7\x55\xcb\x2c\x12\xab\x29\x68\x69\x39\x5f\x5b\x6b\xf2\x14\xb2\x9c\xdb\x84\x66",
        // "BIO_s_mem" / M(Xor2) / S(210) / L(9)
        "\x80\x8b\x8d\x9d\xb1\x9d\xaf\xa7\xaf\xc2\x86\xdb\xbc\xdb\x12\xda",
        // "EVP_DigestFinal" / M(Xor2) / S(70) / L(15)
        "\x13\x00\x06\x09\x12\x3f\x31\x33\x25\x22\x10\x3f\x38\x37\x3a\x56",
        // "CFBundleShortVersionString" / M(Xor1) / S(39) / L(26)
        "\x64\x61\x65\x52\x49\x43\x4b\x42\x74\x4f\x48\x55\x53\x71\x42\x55\x54\x4e\x48\x49\x74\x53\x55\x4e\x49\x40\x27\xe6\xd3\xff\xec\x55\x68\x1d\x96",
        // "" / M(None) / S(0) / L(0)
        "\x9a\x5b\xc9\x3f\x0a\x8e\x0b\xa2\xee\x15\x82\x23\x17\x50\x80\x9f\x4b\xec\x01\x17\x8e\xa4\xe0\x4f\xbb\x48\xe0\xb8\x5f\xc3\x67\x7f",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(85) / L(24)
        "\x37\x32\x35\x16\x07\x1b\x18\x01\x00\x11\x20\x1d\x19\x11\x33\x11\x00\x37\x01\x06\x06\x11\x1a\x00\x74\xf6\x55\xc4\x9b\x55\xe5\x16\x1d",
        // "sk_num" / M(Xor2) / S(42) / L(6)
        "\x49\x51\x65\x54\x4f\x57\x3a\x09\x50\xf2\x42\xb5\x69\xae\x67\x80",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x6f\xd9\x19\x62\x84\xbb\xf4\xf8\x78\xbe\x93\xbf\x08\xf7\xa2\x83\xd3\x52\xc7\xb7\x29\xe7\x70\x36\x0e\xdb\x61\x1c\x96\x3c\x58",
        // "CC_SHA1_Init" / M(Xor3) / S(73) / L(12)
        "\x1a\x1a\x06\x0a\x11\x18\x68\x06\x10\x37\x30\x2d\x59\x32\xcc\x4e",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(243) / L(35)
        "\x54\x51\x53\x76\x63\x72\x51\x78\x65\x7a\x76\x63\x63\x72\x65\x54\x65\x72\x76\x63\x72\x53\x76\x63\x72\x51\x65\x78\x7a\x44\x63\x65\x7e\x79\x70\x17",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x91\x6c\x91\x9d\x67\x05\x99\xa3\x06\x16\xa3\xfa\xa6\xee\xc9\xa7\xbc\x0d\xd5\x9e\x87\x5f\x45\xdd\xfe\x55\x52\x2a\x25\x94\x98",
        // "CFBundleVersion" / M(Xor4) / S(0) / L(15)
        "\x43\x46\x42\x75\x6e\x64\x6c\x65\x56\x65\x72\x73\x69\x6f\x6e\x00",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(44) / L(21)
        "\xa3\x8b\x8e\x9c\xb1\xb8\xad\x89\xba\xba\xa9\xb1\x8b\xa9\xa4\xa4\x8a\xa9\xab\xa3\xbb\xc8",
        // "exit" / M(Rot) / S(14) / L(4)
        "\x73\x86\x77\x82\x0e\xa2\xe6\x46\xa7\xa3\x36\x34\xbf\x25\x53\xf7",
        // "CFDataGetBytePtr" / M(Xor1) / S(38) / L(16)
        "\x65\x60\x62\x47\x52\x47\x61\x43\x52\x64\x5f\x52\x43\x76\x52\x54\x26",
        // "CFDataAppendBytes" / M(Xor2) / S(192) / L(17)
        "\x91\x94\x96\xb3\xa6\xb3\x93\xa2\xa2\xb7\xbc\xb6\x90\xab\xa6\xb7\xa1\xd2",
        // "OBJ_txt2obj" / M(Xor3) / S(139) / L(11)
        "\xd4\xd9\xd1\xc4\xef\xe3\xef\xa9\xf4\xf9\xf1\x9b\x8d\x40\x5c\x72",
        // "PKCS7_free" / M(Xor4) / S(196) / L(10)
        "\x10\x0b\x03\x13\x77\x1f\x26\x32\x25\x25\x40\xbe\xe2\x49\x3b\x9f",
        // "" / M(None) / S(0) / L(0)
        "\xa9\xa1\x5c\x6d\xc2\xee\x1b\xf5\x16\xa6\xc1\xbd\x63\x2e\x89\x4d\xb5\xcd\xb8\x82\xfd\x83\x91\x3d\xad\x60\x7f\x85\x76\xaa\xce\x70",
        // "dlopen" / M(Rot) / S(229) / L(6)
        "\x49\x51\x54\x55\x4a\x53\xe5\xa8\x7e\x9d\x13\x34\x3c\xc4\xdc\xd2",
        // "setDelegate:" / M(Xor4) / S(128) / L(12)
        "\x73\x65\x74\x44\x65\x6c\x65\x67\x61\x74\x65\x3a\x00\xf0\x90\x26",
        // "" / M(None) / S(0) / L(0)
        "\x9f\xac\x23\x90\xd6\x98\x36\x86\x45\x58\xe0\x00\x86\x66\xf9\x25\x37\xda\xef\xfd\x4f\xb4\x5a\x7b\x3b\xcd\x11\x20\x65\xc1\xf8\x79",
        // "CFStringCreateWithBytes" / M(Xor2) / S(65) / L(23)
        "\x22\x27\x32\x15\x13\x08\x0f\x06\x22\x13\x04\x00\x15\x04\x36\x08\x15\x09\x23\x18\x15\x04\x12\x61\x05\xfc\x16\xbf\xb9\x57\x2c\x04",
        // "CFReadStreamClose" / M(Xor4) / S(166) / L(17)
        "\xef\xea\xfe\xc9\xcd\xc8\xff\xd8\xde\xc9\xcd\xc1\xef\xc0\xc3\xdf\xc9\xac",
        // "" / M(None) / S(0) / L(0)
        "\x2d\xc3\x1f\xe1\xc2\x3e\x69\x70\x24\x91\x5f\x63\x02\x5c\x06\x7f\x5e\xf1\xcc\x5b\xa7\xfe\x6d\x58\x9e\xaf\x9c\x67\xa4\x05\x9e\x8b",
        // "sk_free" / M(Rot) / S(163) / L(7)
        "\x16\x0e\x02\x09\x15\x08\x08\xa3\xe9\xc4\x6c\xa7\x95\xdc\x7d\x12",
        // "" / M(None) / S(0) / L(0)
        "\x93\x57\x6b\x6a\xc4\x4c\x1f\x61\xae\xc2\xb1\xbf\x78\x30\x87\x39\x04\x7b\x5e\x78\xe4\x35\x2e\xe3\x47\x5b\x15\x95\x33\xc4\xd6\x5b",
        // "" / M(None) / S(0) / L(0)
        "\x18\x00\x9d\xe1\x75\xe9\xbf\xa7\x01\x50\x1d\x7c\x65\x1a\x1b\x12\x90\x5e\xc1\xf6\x85\x94\x6d\x4c\xe5\x53\x2f\xc3\x35\xc9\xc4\x82",
        // "getUUIDBytes:" / M(Xor2) / S(166) / L(13)
        "\xd1\xd3\xc2\xe3\xe3\xff\xf2\xf4\xcf\xc2\xd3\xc5\x8c\xb6\xa7\x8b",
        // "CFBundleIdentifier" / M(Rot) / S(43) / L(18)
        "\x6e\x71\x6d\xa0\x99\x8f\x97\x90\x74\x8f\x90\x99\x9f\x94\x91\x94\x90\x9d\x2b",
        // "X509_STORE_free" / M(Rot) / S(89) / L(15)
        "\xb1\x8e\x89\x92\xb8\xac\xad\xa8\xab\x9e\xb8\xbf\xcb\xbe\xbe\x59",
        // "CFBundleVersion" / M(Xor3) / S(113) / L(15)
        "\xc2\xc7\xc3\xf4\xef\xe5\xed\xe4\xd7\xe4\xf3\xf2\xe8\xee\xef\x81",
        // "strlen" / M(Xor2) / S(231) / L(6)
        "\x84\x83\x85\x9b\x92\x99\xf7\xfa\x0c\xa4\xd9\xaf\xa5\x39\xf7\xe0",
        // "NSBundle" / M(Xor4) / S(86) / L(8)
        "\x2e\x33\x22\x15\x0e\x04\x0c\x05\x60\x39\x9a\x8c\x5f\x2a\x13\xeb",
        // "" / M(None) / S(0) / L(0)
        "\xf5\x16\x7e\x20\x47\x06\x90\xe1\x85\xc2\x9e\x10\x5c\x96\x1a\x0b\x28\x9f\x5b\xf5\x38\x31\xa8\x09\x24\x5e\x27\xb6\xde\x5f\x36\xe7",
        // "getUUIDBytes:" / M(Rot) / S(153) / L(13)
        "\x00\xfe\x0d\xee\xee\xe2\xdd\xdb\x12\x0d\xfe\x0c\xd3\x99\x69\xd9",
        // "" / M(None) / S(0) / L(0)
        "\xad\xfa\xf0\xd5\x7a\xa5\x45\x3b\xef\xc6\xed\x0f\x36\x35\x48\x49\x24\x34\xaf\xa4\x42\x94\xbc\xf8\x3b\xd7\x2c\xae\x0b\xf0\x57\x33",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(127) / L(22)
        "\x2a\x2f\x28\x1b\x1b\x08\x10\x2e\x0c\x1d\x3f\x08\x05\x1c\x0c\x28\x1d\x20\x07\x0d\x0c\x11\x69",
        // "CC_SHA1" / M(Xor1) / S(179) / L(7)
        "\xf0\xf0\xec\xe0\xfb\xf2\x82\xb3\xcd\xa9\xbe\xe6\xc0\x9d\xfe\x3a",
        // "X509_STORE_add_cert" / M(Xor2) / S(247) / L(19)
        "\xbb\xd6\xd3\xda\xbc\xb0\xb7\xac\xb1\xa6\xbc\x82\x87\x87\xbc\x80\x86\x91\x97\xe3",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(101) / L(14)
        "\x27\x21\x39\x31\x2a\x38\x34\x3c\x3b\x2a\x3a\x3b\x39\x2c\x75\x40",
        // "." / M(Xor1) / S(207) / L(1)
        "\xe1\xcf\x04\xf5\xeb\x07\xef\xea\x1d\x31\xcf\x1d\xe0\xbd\xa6\x1f",
        // "X509_free" / M(Rot) / S(92) / L(9)
        "\xb4\x91\x8c\x95\xbb\xc2\xce\xc1\xc1\x5c\x78\xe1\xd5\x53\xa2\x3d",
        // "/usr/lib/libobjc.dylib" / M(Rot) / S(240) / L(22)
        "\x1f\x65\x63\x62\x1f\x5c\x59\x52\x1f\x5c\x59\x52\x5f\x52\x5a\x53\x1e\x54\x69\x5c\x59\x52\xf0",
        // "X509_free" / M(Rot) / S(29) / L(9)
        "\x75\x52\x4d\x56\x7c\x83\x8f\x82\x82\x1d\xa9\x58\x78\xff\x12\xd4",
    };
    
    // Table for storing pointers
    static void *INSOValidateReceipt_Pointers[483] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) strlen),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) BIO_free),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) BIO_write),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) X509_free),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int INSOValidateReceipt_XTXCBDZWHBVD __unused;
    static int INSOValidateReceipt_LUZTWEGIFKJU __unused;
    static int INSOValidateReceipt_JHNSFZCQZMDB __unused;
    static int INSOValidateReceipt_JNQBNXGXFURV __unused;
    static int INSOValidateReceipt_GGMIRHFPVTUS __unused;
    static int INSOValidateReceipt_HZOADMMIHEFT __unused;
    static int INSOValidateReceipt_CLYKGVPHEMYY __unused;
    static int INSOValidateReceipt_QAXDFRNFOPKU __unused;
    
    
    // The long jump buffer
    static jmp_buf INSOValidateReceipt_JumpBuf __unused;
    
#define INSOValidateReceipt_ASN1_get_object_01DE010D ((__INSOValidateReceipt_ASN1_get_object) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction006, 269, 37, 16))
#define INSOValidateReceipt_ASN1_INTEGER_free_0025013E ((__INSOValidateReceipt_ASN1_INTEGER_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction007, 318, 9, 18))
#define INSOValidateReceipt_ASN1_INTEGER_get_0025017F ((__INSOValidateReceipt_ASN1_INTEGER_get) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction00A, 383, 160, 17))
#define INSOValidateReceipt_ASN1_OBJECT_free_01DE00E1 ((__INSOValidateReceipt_ASN1_OBJECT_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00C, 225, 9, 17))
#define INSOValidateReceipt_BIO_free_0184001E ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction006, 30, 131, 16))
#define INSOValidateReceipt_BIO_free_018400CF ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction00B, 207, 143, 16))
#define INSOValidateReceipt_BIO_new_01DE0055 ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00C, 85, 229, 16))
#define INSOValidateReceipt_BIO_new_01DE00FF ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00A, 255, 212, 16))
#define INSOValidateReceipt_BIO_s_mem_002501A7 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction00C, 423, 48, 16))
#define INSOValidateReceipt_BIO_s_mem_01DE0022 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction003, 34, 122, 16))
#define INSOValidateReceipt_BIO_write_018400FD ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction00A, 253, 252, 16))
#define INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF ((__INSOValidateReceipt_c2i_ASN1_INTEGER) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction007, 223, 175, 17))
#define INSOValidateReceipt_CC_SHA1_Init_007000AC ((__INSOValidateReceipt_CC_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction003, 172, 175, 16))
#define INSOValidateReceipt_CC_SHA1_Update_00F90168 ((__INSOValidateReceipt_CC_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction005, 360, 16, 16))
#define INSOValidateReceipt_CFArrayAppendValue_010701AA ((__INSOValidateReceipt_CFArrayAppendValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction00C, 426, 147, 19))
#define INSOValidateReceipt_CFBundleGetMainBundle_008C0100 ((__INSOValidateReceipt_CFBundleGetMainBundle) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction009, 256, 171, 22))
#define INSOValidateReceipt_CFBundleUnloadExecutable_008C00A6 ((__INSOValidateReceipt_CFBundleUnloadExecutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00A, 166, 151, 33))
#define INSOValidateReceipt_CFDataAppendBytes_0036009C ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction006, 156, 245, 18))
#define INSOValidateReceipt_CFDataAppendBytes_0107009C ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction006, 156, 245, 18))
#define INSOValidateReceipt_CFDataCreateMutable_008C0113 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, 275, 135, 20))
#define INSOValidateReceipt_CFDataGetLength_008C0021 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, 33, 4, 16))
#define INSOValidateReceipt_CFDateFormatterCreateDateFromString_0036008F ((__INSOValidateReceipt_CFDateFormatterCreateDateFromString) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction008, 143, 83, 36))
#define INSOValidateReceipt_CFDateFormatterSetProperty_00360099 ((__INSOValidateReceipt_CFDateFormatterSetProperty) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction008, 153, 180, 35))
#define INSOValidateReceipt_CFDictionaryCreateMutable_008C011E ((__INSOValidateReceipt_CFDictionaryCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00C, 286, 34, 34))
#define INSOValidateReceipt_CFDictionaryGetValue_003601A5 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction008, 421, 219, 21))
#define INSOValidateReceipt_CFDictionaryGetValue_008C012C ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00A, 300, 196, 21))
#define INSOValidateReceipt_CFDictionarySetValue_010700D1 ((__INSOValidateReceipt_CFDictionarySetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction005, 209, 39, 21))
#define INSOValidateReceipt_CFRelease_003600F2 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, 242, 224, 16))
#define INSOValidateReceipt_CFRelease_00360147 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction005, 327, 126, 16))
#define INSOValidateReceipt_CFRelease_003601B0 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, 432, 89, 16))
#define INSOValidateReceipt_CFRelease_008C00F2 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, 242, 224, 16))
#define INSOValidateReceipt_CFRelease_008C0147 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction005, 327, 126, 16))
#define INSOValidateReceipt_CFRelease_008C01B0 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, 432, 89, 16))
#define INSOValidateReceipt_CFRelease_010700F2 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction007, 242, 224, 16))
#define INSOValidateReceipt_CFRelease_010701B0 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction007, 432, 89, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_0184004E ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction004, 78, 177, 16))
#define INSOValidateReceipt_d2i_X509_bio_01DE0161 ((__INSOValidateReceipt_d2i_X509_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00C, 353, 109, 16))
#define INSOValidateReceipt_EVP_DigestFinal_00250177 ((__INSOValidateReceipt_EVP_DigestFinal) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction00A, 375, 129, 16))
#define INSOValidateReceipt_EVP_DigestInit_01DE012B ((__INSOValidateReceipt_EVP_DigestInit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00A, 299, 238, 16))
#define INSOValidateReceipt_EVP_DigestUpdate_01DE007F ((__INSOValidateReceipt_EVP_DigestUpdate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00A, 127, 165, 17))
#define INSOValidateReceipt_EVP_get_digestbyname_01DE003D ((__INSOValidateReceipt_EVP_get_digestbyname) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction008, 61, 197, 21))
#define INSOValidateReceipt_EVP_MD_CTX_init_01840048 ((__INSOValidateReceipt_EVP_MD_CTX_init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction007, 72, 240, 16))
#define INSOValidateReceipt_exit_007000A5 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction007, 165, 204, 16))
#define INSOValidateReceipt_exit_007001C3 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction003, 451, 14, 16))
#define INSOValidateReceipt_exit_00F900A5 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction007, 165, 204, 16))
#define INSOValidateReceipt_exit_00F901B2 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction008, 434, 99, 16))
#define INSOValidateReceipt_exit_018A00A5 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 394, 98, 33, INSOValidateReceipt_ObfuscationFunction007, 165, 204, 16))
#define INSOValidateReceipt_exit_018A01C3 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 394, 98, 33, INSOValidateReceipt_ObfuscationFunction003, 451, 14, 16))
#define INSOValidateReceipt_XTXCBDZWHBVD_00360195 ((__INSOValidateReceipt_CFDateFormatterSetFormat) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_XTXCBDZWHBVD, 82, 33))
#define INSOValidateReceipt_XTXCBDZWHBVD_008C0024 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_XTXCBDZWHBVD, 182, 21))
#define INSOValidateReceipt_XTXCBDZWHBVD_008C0051 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_XTXCBDZWHBVD, 157, 37))
#define INSOValidateReceipt_XTXCBDZWHBVD_008C00DC ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_XTXCBDZWHBVD, 64, 17))
#define INSOValidateReceipt_XTXCBDZWHBVD_0107007C ((__INSOValidateReceipt_CFReadStreamOpen) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_XTXCBDZWHBVD, 100, 17))
#define INSOValidateReceipt_XTXCBDZWHBVD_01070138 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_XTXCBDZWHBVD, 111, 16))
#define INSOValidateReceipt_LUZTWEGIFKJU_007001DC ((__INSOValidateReceipt_CC_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_LUZTWEGIFKJU, 179, 16))
#define INSOValidateReceipt_LUZTWEGIFKJU_008C000F ((__INSOValidateReceipt_CFDictionaryAddValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_LUZTWEGIFKJU, 240, 21))
#define INSOValidateReceipt_LUZTWEGIFKJU_008C00EA ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_LUZTWEGIFKJU, 110, 16))
#define INSOValidateReceipt_LUZTWEGIFKJU_01070192 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_LUZTWEGIFKJU, 225, 16))
#define INSOValidateReceipt_LUZTWEGIFKJU_01070198 ((__INSOValidateReceipt_CFAbsoluteTimeGetCurrent) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_LUZTWEGIFKJU, 226, 33))
#define INSOValidateReceipt_JHNSFZCQZMDB_0036014A ((__INSOValidateReceipt_CFEqual) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_JHNSFZCQZMDB, 74, 16))
#define INSOValidateReceipt_JHNSFZCQZMDB_008C0175 ((__INSOValidateReceipt_CFReadStreamRead) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_JHNSFZCQZMDB, 246, 17))
#define INSOValidateReceipt_JHNSFZCQZMDB_010701A3 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_JHNSFZCQZMDB, 217, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_003600D3 ((__INSOValidateReceipt_CFArrayGetValueAtIndex) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_JNQBNXGXFURV, 213, 23))
#define INSOValidateReceipt_JNQBNXGXFURV_003600EA ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_JNQBNXGXFURV, 110, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_003600FE ((__INSOValidateReceipt_CFDateCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_JNQBNXGXFURV, 78, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_0036014B ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_JNQBNXGXFURV, 234, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_008C0103 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_JNQBNXGXFURV, 112, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_0107009C ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_JNQBNXGXFURV, 245, 18))
#define INSOValidateReceipt_JNQBNXGXFURV_01070103 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_JNQBNXGXFURV, 112, 16))
#define INSOValidateReceipt_JNQBNXGXFURV_010701A2 ((__INSOValidateReceipt_CFBundleGetIdentifier) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_JNQBNXGXFURV, 135, 22))
#define INSOValidateReceipt_GGMIRHFPVTUS_00360024 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_GGMIRHFPVTUS, 182, 21))
#define INSOValidateReceipt_GGMIRHFPVTUS_00360151 ((__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_GGMIRHFPVTUS, 221, 48))
#define INSOValidateReceipt_GGMIRHFPVTUS_008C004B ((__INSOValidateReceipt_CFArrayGetCount) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_GGMIRHFPVTUS, 30, 16))
#define INSOValidateReceipt_GGMIRHFPVTUS_008C0146 ((__INSOValidateReceipt_CFDateCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_GGMIRHFPVTUS, 183, 16))
#define INSOValidateReceipt_GGMIRHFPVTUS_0107003F ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_GGMIRHFPVTUS, 87, 20))
#define INSOValidateReceipt_HZOADMMIHEFT_00360007 ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_HZOADMMIHEFT, 198, 16))
#define INSOValidateReceipt_HZOADMMIHEFT_0036013F ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_HZOADMMIHEFT, 85, 16))
#define INSOValidateReceipt_HZOADMMIHEFT_00360192 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_HZOADMMIHEFT, 225, 16))
#define INSOValidateReceipt_HZOADMMIHEFT_008C0051 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_HZOADMMIHEFT, 157, 37))
#define INSOValidateReceipt_HZOADMMIHEFT_008C01A3 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_HZOADMMIHEFT, 217, 16))
#define INSOValidateReceipt_HZOADMMIHEFT_01070136 ((__INSOValidateReceipt_CFArrayCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_HZOADMMIHEFT, 18, 21))
#define INSOValidateReceipt_HZOADMMIHEFT_0107014B ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_HZOADMMIHEFT, 234, 16))
#define INSOValidateReceipt_HZOADMMIHEFT_010701CD ((__INSOValidateReceipt_CFReadStreamClose) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_HZOADMMIHEFT, 166, 18))
#define INSOValidateReceipt_CLYKGVPHEMYY_00360038 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_CLYKGVPHEMYY, 176, 16))
#define INSOValidateReceipt_CLYKGVPHEMYY_008C0024 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_CLYKGVPHEMYY, 182, 21))
#define INSOValidateReceipt_CLYKGVPHEMYY_008C0109 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_CLYKGVPHEMYY, 139, 20))
#define INSOValidateReceipt_CLYKGVPHEMYY_00F9016D ((__INSOValidateReceipt_CC_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_CLYKGVPHEMYY, 1, 16))
#define INSOValidateReceipt_CLYKGVPHEMYY_01070038 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_CLYKGVPHEMYY, 176, 16))
#define INSOValidateReceipt_CLYKGVPHEMYY_01070092 ((__INSOValidateReceipt_CFDateFormatterCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_CLYKGVPHEMYY, 33, 22))
#define INSOValidateReceipt_QAXDFRNFOPKU_00360024 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QAXDFRNFOPKU, 182, 21))
#define INSOValidateReceipt_QAXDFRNFOPKU_003601C4 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 54, 79, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_QAXDFRNFOPKU, 38, 17))
#define INSOValidateReceipt_QAXDFRNFOPKU_008C0038 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_QAXDFRNFOPKU, 176, 16))
#define INSOValidateReceipt_QAXDFRNFOPKU_01070075 ((__INSOValidateReceipt_CFReadStreamCreateWithFile) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_QAXDFRNFOPKU, 155, 35))
#define INSOValidateReceipt_QAXDFRNFOPKU_010700F8 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_QAXDFRNFOPKU, 147, 17))
#define INSOValidateReceipt_kCFBundleIdentifierKey_008C0115 ((__INSOValidateReceipt_kCFBundleIdentifierKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction004, 277, 204, 23))
#define INSOValidateReceipt_kCFDateFormatterTimeZone_010700FC ((__INSOValidateReceipt_kCFDateFormatterTimeZone) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction009, 252, 5, 33))
#define INSOValidateReceipt_kCFTypeArrayCallBacks_008C0031 ((__INSOValidateReceipt_kCFTypeArrayCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction00B, 49, 74, 22))
#define INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_008C0067 ((__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction005, 140, 194, 67, INSOValidateReceipt_ObfuscationFunction005, 103, 169, 38))
#define INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_01070005 ((__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 263, 74, 67, INSOValidateReceipt_ObfuscationFunction006, 5, 127, 32))
#define INSOValidateReceipt_longjmp_0070002F ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction005, 47, 2, 16))
#define INSOValidateReceipt_longjmp_007000DA ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction00C, 218, 176, 16))
#define INSOValidateReceipt_longjmp_00F900DA ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction00C, 218, 176, 16))
#define INSOValidateReceipt_longjmp_00F90179 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 249, 151, 33, INSOValidateReceipt_ObfuscationFunction008, 377, 154, 16))
#define INSOValidateReceipt_longjmp_018A002F ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 394, 98, 33, INSOValidateReceipt_ObfuscationFunction005, 47, 2, 16))
#define INSOValidateReceipt_longjmp_018A00DA ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 394, 98, 33, INSOValidateReceipt_ObfuscationFunction00C, 218, 176, 16))
#define INSOValidateReceipt_longjmp_018A0179 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 394, 98, 33, INSOValidateReceipt_ObfuscationFunction008, 377, 154, 16))
#define INSOValidateReceipt_OBJ_txt2obj_0025010A ((__INSOValidateReceipt_OBJ_txt2obj) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction009, 266, 248, 16))
#define INSOValidateReceipt_objc_getClass_00570014 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 87, 50, 23, INSOValidateReceipt_ObfuscationFunction005, 20, 151, 16))
#define INSOValidateReceipt_objc_getClass_005700B5 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 87, 50, 23, INSOValidateReceipt_ObfuscationFunction00B, 181, 150, 16))
#define INSOValidateReceipt_objc_getClass_005700E5 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 87, 50, 23, INSOValidateReceipt_ObfuscationFunction004, 229, 32, 16))
#define INSOValidateReceipt_objc_getClass_00D600B5 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 214, 138, 23, INSOValidateReceipt_ObfuscationFunction00B, 181, 150, 16))
#define INSOValidateReceipt_objc_getClass_00D600E5 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 214, 138, 23, INSOValidateReceipt_ObfuscationFunction004, 229, 32, 16))
#define INSOValidateReceipt_objc_lookUpClass_01E1011A ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction004, 282, 139, 17))
#define INSOValidateReceipt_objc_lookUpClass_01E10148 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction00A, 328, 78, 17))
#define INSOValidateReceipt_objc_msgSend_0057010F ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 87, 50, 23, INSOValidateReceipt_ObfuscationFunction005, 271, 197, 16))
#define INSOValidateReceipt_objc_msgSend_00D60053 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 214, 138, 23, INSOValidateReceipt_ObfuscationFunction005, 83, 46, 16))
#define INSOValidateReceipt_objc_msgSend_00D6010F ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 214, 138, 23, INSOValidateReceipt_ObfuscationFunction005, 271, 197, 16))
#define INSOValidateReceipt_objc_msgSend_01E10053 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction005, 83, 46, 16))
#define INSOValidateReceipt_objc_msgSend_01E1010F ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction005, 271, 197, 16))
#define INSOValidateReceipt_OpenSSL_add_all_digests_0025015F ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction005, 351, 93, 32))
#define INSOValidateReceipt_OpenSSL_add_all_digests_01840145 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction007, 325, 72, 32))
#define INSOValidateReceipt_PKCS7_free_018400A7 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction00A, 167, 40, 16))
#define INSOValidateReceipt_PKCS7_free_01DE01C7 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00C, 455, 196, 16))
#define INSOValidateReceipt_PKCS7_get0_signers_002501AC ((__INSOValidateReceipt_PKCS7_get0_signers) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction007, 428, 217, 19))
#define INSOValidateReceipt_PKCS7_verify_0025011F ((__INSOValidateReceipt_PKCS7_verify) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction00C, 287, 114, 16))
#define INSOValidateReceipt_sel_registerName_00D600E9 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 214, 138, 23, INSOValidateReceipt_ObfuscationFunction00A, 233, 176, 17))
#define INSOValidateReceipt_sel_registerName_01E100E9 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction00A, 233, 176, 17))
#define INSOValidateReceipt_sel_registerName_01E10149 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction004, 329, 34, 17))
#define INSOValidateReceipt_sel_registerName_01E1017E ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 481, 240, 23, INSOValidateReceipt_ObfuscationFunction007, 382, 252, 17))
#define INSOValidateReceipt_setjmp_00700166 ((__INSOValidateReceipt_setjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 112, 185, 33, INSOValidateReceipt_ObfuscationFunction005, 358, 242, 16))
#define INSOValidateReceipt_SHA1_01DE0003 ((__INSOValidateReceipt_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction00A, 3, 118, 16))
#define INSOValidateReceipt_SHA1_Final_00250050 ((__INSOValidateReceipt_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction007, 80, 189, 16))
#define INSOValidateReceipt_SHA1_Init_01840058 ((__INSOValidateReceipt_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction006, 88, 177, 16))
#define INSOValidateReceipt_SHA1_Update_002500BF ((__INSOValidateReceipt_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction008, 191, 131, 16))
#define INSOValidateReceipt_sk_free_01DE01CF ((__INSOValidateReceipt_sk_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction003, 463, 163, 16))
#define INSOValidateReceipt_sk_num_002500D8 ((__INSOValidateReceipt_sk_num) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction00B, 216, 132, 16))
#define INSOValidateReceipt_sk_value_01DE002E ((__INSOValidateReceipt_sk_value) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction008, 46, 47, 16))
#define INSOValidateReceipt_X509_digest_01840010 ((__INSOValidateReceipt_X509_digest) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction007, 16, 214, 16))
#define INSOValidateReceipt_X509_free_01DE01E2 ((__INSOValidateReceipt_X509_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction003, 482, 29, 16))
#define INSOValidateReceipt_X509_get_ext_by_OBJ_00250030 ((__INSOValidateReceipt_X509_get_ext_by_OBJ) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00C, 37, 75, 16, INSOValidateReceipt_ObfuscationFunction004, 48, 90, 20))
#define INSOValidateReceipt_X509_NAME_get_text_by_NID_01DE00C6 ((__INSOValidateReceipt_X509_NAME_get_text_by_NID) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 478, 101, 16, INSOValidateReceipt_ObfuscationFunction008, 198, 5, 34))
#define INSOValidateReceipt_X509_STORE_add_cert_0184000E ((__INSOValidateReceipt_X509_STORE_add_cert) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction004, 14, 39, 20))
#define INSOValidateReceipt_X509_STORE_free_01840106 ((__INSOValidateReceipt_X509_STORE_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction00C, 262, 9, 16))
#define INSOValidateReceipt_X509_STORE_new_01840064 ((__INSOValidateReceipt_X509_STORE_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 388, 254, 16, INSOValidateReceipt_ObfuscationFunction006, 100, 110, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction003(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction003CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction003(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[460])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction004(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction004CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction004(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[27])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction005(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction005CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction005(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[460])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction006(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction006CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction006(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[27])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction007(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction007CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction007(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[379])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction008(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction008CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction008(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[17])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction009(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction009CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction009(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[241])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction00A(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00ACF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00A(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[27])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00B(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00BCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction00B(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[241])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00C(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00CCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00C(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[160])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_decrypt INSOValidateReceipt_func1, int INSOValidateReceipt_index1, int INSOValidateReceipt_val1, int INSOValidateReceipt_len1, INSOValidateReceipt_decrypt INSOValidateReceipt_func2, int INSOValidateReceipt_index2, int INSOValidateReceipt_val2, int INSOValidateReceipt_len2) {
        char INSOValidateReceipt_tmp1[483], INSOValidateReceipt_tmp2[483];
        // Load the library if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] == NULL) {
            INSOValidateReceipt_func1(INSOValidateReceipt_Strings[INSOValidateReceipt_index1], INSOValidateReceipt_tmp1, INSOValidateReceipt_val1, INSOValidateReceipt_len1);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] = ((__INSOValidateReceipt_dlopen) INSOValidateReceipt_Pointers[457])(INSOValidateReceipt_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] == NULL) {
            INSOValidateReceipt_func2(INSOValidateReceipt_Strings[INSOValidateReceipt_index2], INSOValidateReceipt_tmp2, INSOValidateReceipt_val2, INSOValidateReceipt_len2);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] = ((__INSOValidateReceipt_dlsym) INSOValidateReceipt_Pointers[137])(INSOValidateReceipt_Pointers[INSOValidateReceipt_index1], INSOValidateReceipt_tmp2);
        }
        return INSOValidateReceipt_Pointers[INSOValidateReceipt_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle");
        // Retrieve the main bundle
        CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_008C0100();
        if (!INSOValidateReceipt_bundle) {
            // Dead code
            INSOValidateReceipt_CFRelease_003601B0(INSOValidateReceipt_bundle);
            INSOValidateReceipt_CFBundleUnloadExecutable_008C00A6((CFBundleRef) INSOValidateReceipt_bundle);
        }
        INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle;
        // Global variables computation
        // Set to 124
        INSOValidateReceipt_XTXCBDZWHBVD = 124;
        // Set to 373
        INSOValidateReceipt_JHNSFZCQZMDB = 373;
        // Set to 156
        INSOValidateReceipt_JNQBNXGXFURV = 156;
        // Set to 461
        INSOValidateReceipt_HZOADMMIHEFT = 461;
        // Set to 265
        INSOValidateReceipt_CLYKGVPHEMYY = 265;
        // Set to 117
        INSOValidateReceipt_QAXDFRNFOPKU = 117;
    }
#else
#define INSOValidateReceipt_GetMainBundle017(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle"); \
CFBundleRef INSOValidateReceipt_bundle = INSOValidateReceipt_CFBundleGetMainBundle_008C0100(); \
if (!INSOValidateReceipt_bundle) { \
INSOValidateReceipt_CFRelease_003601B0(INSOValidateReceipt_bundle); \
INSOValidateReceipt_CFBundleUnloadExecutable_008C00A6((CFBundleRef) INSOValidateReceipt_bundle); \
} \
INSOValidateReceipt_ctx->main_bundle = (CFBundleRef) INSOValidateReceipt_bundle; \
INSOValidateReceipt_XTXCBDZWHBVD = 124; \
INSOValidateReceipt_JHNSFZCQZMDB = 373; \
INSOValidateReceipt_JNQBNXGXFURV = 156; \
INSOValidateReceipt_HZOADMMIHEFT = 461; \
INSOValidateReceipt_CLYKGVPHEMYY = 265; \
INSOValidateReceipt_QAXDFRNFOPKU = 117; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void INSOValidateReceipt_LoadReceipt043(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle;
        CFURLRef INSOValidateReceipt_url1;
        CFReadStreamRef INSOValidateReceipt_stream;
        CFMutableDataRef INSOValidateReceipt_data;
        CFIndex INSOValidateReceipt_count;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3;
        uint8_t INSOValidateReceipt_buffer[483];
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt");
        // Get NSBundle class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[134]), INSOValidateReceipt_str1_, 243, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_00570014(INSOValidateReceipt_str1);
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[162]), INSOValidateReceipt_str2_, 85, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_00D600E9(INSOValidateReceipt_str2);
        INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2);
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[227]), INSOValidateReceipt_str3_, 86, 19);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_00D600E9(INSOValidateReceipt_str3);
        INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3));
        // Create a stream from the receipt file
        INSOValidateReceipt_stream = INSOValidateReceipt_QAXDFRNFOPKU_01070075(kCFAllocatorDefault, INSOValidateReceipt_url1);
        if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_XTXCBDZWHBVD_0107007C(INSOValidateReceipt_stream)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_url1);
            INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_url1);
            goto INSOValidateReceipt_LoadReceipt043_INSOValidateReceipt_bail;
        }
        // Create the data object that will contains receipt data
        INSOValidateReceipt_data = INSOValidateReceipt_CLYKGVPHEMYY_008C0109(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            INSOValidateReceipt_count = INSOValidateReceipt_JHNSFZCQZMDB_008C0175(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483);
            if (INSOValidateReceipt_count > 0) {
                INSOValidateReceipt_JNQBNXGXFURV_0107009C(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count);
            }
        } while (INSOValidateReceipt_count > 0);
        // Close the stream
        INSOValidateReceipt_HZOADMMIHEFT_010701CD(INSOValidateReceipt_stream);
        if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_ctx->receipt_data);
        INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data;
        // Global variables computation
        // Set to 234
        INSOValidateReceipt_LUZTWEGIFKJU = 234;
    INSOValidateReceipt_LoadReceipt043_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_stream);
    }
#else
#define INSOValidateReceipt_LoadReceipt043(INSOValidateReceipt_ctx) { \
id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle; \
CFURLRef INSOValidateReceipt_url1; \
CFReadStreamRef INSOValidateReceipt_stream; \
CFMutableDataRef INSOValidateReceipt_data; \
CFIndex INSOValidateReceipt_count; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3; \
uint8_t INSOValidateReceipt_buffer[483]; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[134]), INSOValidateReceipt_str1_, 243, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_00570014(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[162]), INSOValidateReceipt_str2_, 85, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_00D600E9(INSOValidateReceipt_str2); \
INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[227]), INSOValidateReceipt_str3_, 86, 19); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_00D600E9(INSOValidateReceipt_str3); \
INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3)); \
INSOValidateReceipt_stream = INSOValidateReceipt_QAXDFRNFOPKU_01070075(kCFAllocatorDefault, INSOValidateReceipt_url1); \
if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_XTXCBDZWHBVD_0107007C(INSOValidateReceipt_stream)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_url1); \
INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_url1); \
goto INSOValidateReceipt_LoadReceipt043_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_data = INSOValidateReceipt_CLYKGVPHEMYY_008C0109(kCFAllocatorDefault, 0); \
do { \
INSOValidateReceipt_count = INSOValidateReceipt_JHNSFZCQZMDB_008C0175(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483); \
if (INSOValidateReceipt_count > 0) { \
INSOValidateReceipt_JNQBNXGXFURV_0107009C(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count); \
} \
} while (INSOValidateReceipt_count > 0); \
INSOValidateReceipt_HZOADMMIHEFT_010701CD(INSOValidateReceipt_stream); \
if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data; \
INSOValidateReceipt_LUZTWEGIFKJU = 234; \
INSOValidateReceipt_LoadReceipt043_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        Class INSOValidateReceipt_deviceClass;
        id INSOValidateReceipt_device, INSOValidateReceipt_identifier;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4;
        uuid_t INSOValidateReceipt_uuid;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier");
        // Get the UIDevice class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[2]), INSOValidateReceipt_str1_, 132, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_01E10148(INSOValidateReceipt_str1);
        // Call [UIDevice currentDevice]
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[247]), INSOValidateReceipt_str2_, 38, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str2);
        INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2);
        // Call [device identifierForVendor]
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[301]), INSOValidateReceipt_str3_, 177, 20);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str3);
        INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3);
        // Call [identifier getUUIDBytes:INSOValidateReceipt_uuid]
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[473]), INSOValidateReceipt_str4_, 153, 16);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid);
        if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_ctx->guid_data);
        volatile int INSOValidateReceipt_size = 9; INSOValidateReceipt_size -= 4; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;
        INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_LUZTWEGIFKJU_008C00EA(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size);
        // Global variables computation
        // From 124 to 81
        INSOValidateReceipt_XTXCBDZWHBVD += 119; INSOValidateReceipt_XTXCBDZWHBVD /= 3;
        // From 156 to 418
        INSOValidateReceipt_JNQBNXGXFURV -= 52; INSOValidateReceipt_JNQBNXGXFURV *= 4; INSOValidateReceipt_JNQBNXGXFURV += 2;
        // Set to 56
        INSOValidateReceipt_QAXDFRNFOPKU = 56;
    }
#else
#define INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_ctx) { \
Class INSOValidateReceipt_deviceClass; \
id INSOValidateReceipt_device, INSOValidateReceipt_identifier; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4; \
uuid_t INSOValidateReceipt_uuid; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[2]), INSOValidateReceipt_str1_, 132, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_01E10148(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction008((INSOValidateReceipt_Strings[247]), INSOValidateReceipt_str2_, 38, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str2); \
INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[301]), INSOValidateReceipt_str3_, 177, 20); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str3); \
INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3); \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[473]), INSOValidateReceipt_str4_, 153, 16); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01E1017E(INSOValidateReceipt_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid); \
if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_008C0147(INSOValidateReceipt_ctx->guid_data); \
volatile int INSOValidateReceipt_size = 9; INSOValidateReceipt_size -= 4; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;  \
INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_LUZTWEGIFKJU_008C00EA(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size); \
INSOValidateReceipt_XTXCBDZWHBVD += 119; INSOValidateReceipt_XTXCBDZWHBVD /= 3;  \
INSOValidateReceipt_JNQBNXGXFURV -= 52; INSOValidateReceipt_JNQBNXGXFURV *= 4; INSOValidateReceipt_JNQBNXGXFURV += 2;  \
INSOValidateReceipt_QAXDFRNFOPKU = 56; \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[316]), 26, 49);
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier");
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[272]), 250, 19);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0051((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_QAXDFRNFOPKU_008C0038(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00F90179(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1);
        }
        INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str2);
        // Global variables computation
        // From 461 to 81
        INSOValidateReceipt_HZOADMMIHEFT += 106; INSOValidateReceipt_HZOADMMIHEFT /= 7;
        // From 265 to 56
        INSOValidateReceipt_CLYKGVPHEMYY += 71; INSOValidateReceipt_CLYKGVPHEMYY /= 6;
        INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleIdentifier05D(INSOValidateReceipt_ctx) { \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[316]), 26, 49); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier"); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[272]), 250, 19); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0051((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_QAXDFRNFOPKU_008C0038(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F90179(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str2); \
INSOValidateReceipt_HZOADMMIHEFT += 106; INSOValidateReceipt_HZOADMMIHEFT /= 7;  \
INSOValidateReceipt_CLYKGVPHEMYY += 71; INSOValidateReceipt_CLYKGVPHEMYY /= 6;  \
INSOValidateReceipt_CFRelease_003600F2(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleVersion05E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version");
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[357]), 140, 16);
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[449]), 0, 16);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_HZOADMMIHEFT_008C0051((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_CLYKGVPHEMYY_01070038(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_0070002F(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 81 to 405
        INSOValidateReceipt_XTXCBDZWHBVD -= 24; INSOValidateReceipt_XTXCBDZWHBVD *= 7; INSOValidateReceipt_XTXCBDZWHBVD += 6;
        // From 234 to 15
        INSOValidateReceipt_LUZTWEGIFKJU += 21; INSOValidateReceipt_LUZTWEGIFKJU /= 17;
        // From 373 to 419
        INSOValidateReceipt_JHNSFZCQZMDB -= 234; INSOValidateReceipt_JHNSFZCQZMDB *= 3; INSOValidateReceipt_JHNSFZCQZMDB += 2;
        // Set to 234
        INSOValidateReceipt_JNQBNXGXFURV = 234;
        // Set to 337
        INSOValidateReceipt_GGMIRHFPVTUS = 337;
        // From 81 to 310
        INSOValidateReceipt_HZOADMMIHEFT -= 19; INSOValidateReceipt_HZOADMMIHEFT *= 5;
        // From 56 to 146
        INSOValidateReceipt_CLYKGVPHEMYY -= 20; INSOValidateReceipt_CLYKGVPHEMYY *= 4; INSOValidateReceipt_CLYKGVPHEMYY += 2;
        // From 56 to 452
        INSOValidateReceipt_QAXDFRNFOPKU -= 11; INSOValidateReceipt_QAXDFRNFOPKU *= 10; INSOValidateReceipt_QAXDFRNFOPKU += 2;
        INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str2);
        INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleVersion05E(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version"); \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[357]), 140, 16); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[449]), 0, 16); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_HZOADMMIHEFT_008C0051((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_CLYKGVPHEMYY_01070038(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0070002F(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_XTXCBDZWHBVD -= 24; INSOValidateReceipt_XTXCBDZWHBVD *= 7; INSOValidateReceipt_XTXCBDZWHBVD += 6;  \
INSOValidateReceipt_LUZTWEGIFKJU += 21; INSOValidateReceipt_LUZTWEGIFKJU /= 17;  \
INSOValidateReceipt_JHNSFZCQZMDB -= 234; INSOValidateReceipt_JHNSFZCQZMDB *= 3; INSOValidateReceipt_JHNSFZCQZMDB += 2;  \
INSOValidateReceipt_JNQBNXGXFURV = 234; \
INSOValidateReceipt_GGMIRHFPVTUS = 337; \
INSOValidateReceipt_HZOADMMIHEFT -= 19; INSOValidateReceipt_HZOADMMIHEFT *= 5;  \
INSOValidateReceipt_CLYKGVPHEMYY -= 20; INSOValidateReceipt_CLYKGVPHEMYY *= 4; INSOValidateReceipt_CLYKGVPHEMYY += 2;  \
INSOValidateReceipt_QAXDFRNFOPKU -= 11; INSOValidateReceipt_QAXDFRNFOPKU *= 10; INSOValidateReceipt_QAXDFRNFOPKU += 2;  \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetReceiptInformation065(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context;
        INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context;
        CFNumberRef INSOValidateReceipt_key;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2;
        int INSOValidateReceipt_type;
        int INSOValidateReceipt_xclass;
        long INSOValidateReceipt_length;
        CFDateFormatterRef INSOValidateReceipt_formatter = NULL;
        CFTimeZoneRef INSOValidateReceipt_tz = NULL;
        BIO *INSOValidateReceipt_bio_p7;
        PKCS7 *INSOValidateReceipt_pkcs7;
        ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content;
        ASN1_INTEGER *INSOValidateReceipt_value;
        const unsigned char *INSOValidateReceipt_seq_end;
        long INSOValidateReceipt_attr_type;
        long INSOValidateReceipt_attr_version;
        int INSOValidateReceipt_str_type;
        long INSOValidateReceipt_str_length;
        const unsigned char *INSOValidateReceipt_str_ptr;
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context;
        long INSOValidateReceipt_number;
        int INSOValidateReceipt_num_type;
        long INSOValidateReceipt_num_length;
        const unsigned char *INSOValidateReceipt_num_ptr;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01DE00FF(INSOValidateReceipt_BIO_s_mem_01DE0022());
        INSOValidateReceipt_BIO_write_018400FD(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_QAXDFRNFOPKU_003601C4((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_008C0021((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_0184004E(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        INSOValidateReceipt_formatter = INSOValidateReceipt_CLYKGVPHEMYY_01070092(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction006CF((INSOValidateReceipt_Strings[334]), 88, 33);
        INSOValidateReceipt_XTXCBDZWHBVD_00360195(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1);
        INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1);
        INSOValidateReceipt_tz = INSOValidateReceipt_GGMIRHFPVTUS_00360151(NULL, 0.0);
        INSOValidateReceipt_CFDateFormatterSetProperty_00360099(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_010700FC, INSOValidateReceipt_tz);
        INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_tz);
        // Initial context
        INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data;
        INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data;
        INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length;
        INSOValidateReceipt_receipt_context.parent = NULL;
        INSOValidateReceipt_receipt_context.dictionary = NULL;
        INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context;
        while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
            if (!INSOValidateReceipt_current_context->dictionary) {
                // Create the target dictionary
                INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_008C011E(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_008C0067, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_01070005);
                // Decode payload from ASN.1
                INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SET) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                }
            }
            // Iterate over attributes
            while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
                // Parse attribute sequence
                INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length;
                INSOValidateReceipt_attr_type = 0;
                INSOValidateReceipt_attr_version = 0;
                // Parse the attribute type
                INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value);
                // Parse the attribute version
                INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value);
                // Check the attribute value
                INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2));
                INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2) + 1);
                INSOValidateReceipt_value1 = NULL;
                INSOValidateReceipt_value2 = NULL;
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type);
                switch (INSOValidateReceipt_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleId:
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion:
                    case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion:
                    case INSOValidateReceipt_InAppAttributeTypeProductIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[379])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false);
                        INSOValidateReceipt_value2 = INSOValidateReceipt_JNQBNXGXFURV_003600EA(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate:
                    case INSOValidateReceipt_InAppAttributeTypeCancellationDate:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypePurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[379])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_0036008F(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case INSOValidateReceipt_InAppAttributeTypeQuantity:
                    case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId:
                    {
                        INSOValidateReceipt_num_type = 0;
                        INSOValidateReceipt_num_length = 0;
                        INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr);
                        if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length);
                        INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value);
                        INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberLongType, &INSOValidateReceipt_number);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue:
                    case INSOValidateReceipt_ReceiptAttributeTypeHash:
                    {
                        INSOValidateReceipt_value1 = INSOValidateReceipt_JNQBNXGXFURV_003600EA(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_008C0021((CFDataRef) INSOValidateReceipt_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length;
                        INSOValidateReceipt_inapp_context.dictionary = NULL;
                        INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context;
                        INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context;
                        goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_key;
                    }
                    default:
                        break;
                }
                if (INSOValidateReceipt_value1) {
                    INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                    INSOValidateReceipt_LUZTWEGIFKJU_008C000F((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1);
                }
                if (INSOValidateReceipt_value2) {
                    INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key2);
                    INSOValidateReceipt_LUZTWEGIFKJU_008C000F((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2);
                    INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value2);
                }
                // Move past the attribute
                INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length;
            }
        INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_key:
            // If the current context is a new one, continue parsing
            if (!INSOValidateReceipt_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (INSOValidateReceipt_current_context->parent) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase");
                INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
                INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                INSOValidateReceipt_value1 = INSOValidateReceipt_CFDictionaryGetValue_008C012C((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key);
                if (!INSOValidateReceipt_value1) {
                    INSOValidateReceipt_value1 = INSOValidateReceipt_HZOADMMIHEFT_01070136(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_008C0031);
                    INSOValidateReceipt_CFDictionarySetValue_010700D1((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1);
                }
                INSOValidateReceipt_CFArrayAppendValue_010701AA((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key);
                // Switch to parent context
                INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent;
                // Move past the child context
                INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end;
            }
        }
        if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_ctx->receipt_dict);
        INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary;
        // Global variables computation
        // From 405 to 220
        INSOValidateReceipt_XTXCBDZWHBVD += 255; INSOValidateReceipt_XTXCBDZWHBVD /= 3;
        // From 310 to 319
        INSOValidateReceipt_HZOADMMIHEFT -= 204; INSOValidateReceipt_HZOADMMIHEFT *= 3; INSOValidateReceipt_HZOADMMIHEFT += 1;
    INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01DE01C7(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_018400CF(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_formatter);
    }
#else
#define INSOValidateReceipt_GetReceiptInformation065(INSOValidateReceipt_ctx) { \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context; \
INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context; \
CFNumberRef INSOValidateReceipt_key; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2; \
int INSOValidateReceipt_type; \
int INSOValidateReceipt_xclass; \
long INSOValidateReceipt_length; \
CFDateFormatterRef INSOValidateReceipt_formatter = NULL; \
CFTimeZoneRef INSOValidateReceipt_tz = NULL; \
BIO *INSOValidateReceipt_bio_p7; \
PKCS7 *INSOValidateReceipt_pkcs7; \
ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content; \
ASN1_INTEGER *INSOValidateReceipt_value; \
const unsigned char *INSOValidateReceipt_seq_end; \
long INSOValidateReceipt_attr_type; \
long INSOValidateReceipt_attr_version; \
int INSOValidateReceipt_str_type; \
long INSOValidateReceipt_str_length; \
const unsigned char *INSOValidateReceipt_str_ptr; \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context; \
long INSOValidateReceipt_number; \
int INSOValidateReceipt_num_type; \
long INSOValidateReceipt_num_length; \
const unsigned char *INSOValidateReceipt_num_ptr; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01DE00FF(INSOValidateReceipt_BIO_s_mem_01DE0022()); \
INSOValidateReceipt_BIO_write_018400FD(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_QAXDFRNFOPKU_003601C4((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_CFDataGetLength_008C0021((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_0184004E(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_formatter = INSOValidateReceipt_CLYKGVPHEMYY_01070092(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction006CF((INSOValidateReceipt_Strings[334]), 88, 33); \
INSOValidateReceipt_XTXCBDZWHBVD_00360195(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1); \
INSOValidateReceipt_tz = INSOValidateReceipt_GGMIRHFPVTUS_00360151(NULL, 0.0); \
INSOValidateReceipt_CFDateFormatterSetProperty_00360099(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_010700FC, INSOValidateReceipt_tz); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_tz); \
INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data; \
INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data; \
INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length; \
INSOValidateReceipt_receipt_context.parent = NULL; \
INSOValidateReceipt_receipt_context.dictionary = NULL; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context; \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
if (!INSOValidateReceipt_current_context->dictionary) { \
INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_008C011E(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_008C0067, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_01070005); \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SET) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
} \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_attr_type = 0; \
INSOValidateReceipt_attr_version = 0; \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2)); \
INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 2) + 1); \
INSOValidateReceipt_value1 = NULL; \
INSOValidateReceipt_value2 = NULL; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type); \
switch (INSOValidateReceipt_attr_type) { \
case INSOValidateReceipt_ReceiptAttributeTypeBundleId: \
case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion: \
case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion: \
case INSOValidateReceipt_InAppAttributeTypeProductIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[379])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false); \
INSOValidateReceipt_value2 = INSOValidateReceipt_JNQBNXGXFURV_003600EA(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate: \
case INSOValidateReceipt_InAppAttributeTypeCancellationDate: \
case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypePurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[379])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_0036008F(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_InAppAttributeTypeQuantity: \
case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId: \
{ \
INSOValidateReceipt_num_type = 0; \
INSOValidateReceipt_num_length = 0; \
INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01DE010D(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr); \
if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_00F900DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_018400DF(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length); \
INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_0025017F(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_0025013E(INSOValidateReceipt_value); \
INSOValidateReceipt_value1 = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberLongType, &INSOValidateReceipt_number); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue: \
case INSOValidateReceipt_ReceiptAttributeTypeHash: \
{ \
INSOValidateReceipt_value1 = INSOValidateReceipt_JNQBNXGXFURV_003600EA(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_CFDataGetLength_008C0021((CFDataRef) INSOValidateReceipt_value1)); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase: \
{ \
INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_inapp_context.dictionary = NULL; \
INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context; \
goto INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_key; \
} \
default: \
break; \
} \
if (INSOValidateReceipt_value1) { \
INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_LUZTWEGIFKJU_008C000F((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1); \
} \
if (INSOValidateReceipt_value2) { \
INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key2); \
INSOValidateReceipt_LUZTWEGIFKJU_008C000F((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value2); \
} \
INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length; \
} \
INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_key: \
if (!INSOValidateReceipt_current_context->dictionary) { \
continue; \
} \
if (INSOValidateReceipt_current_context->parent) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
INSOValidateReceipt_key = INSOValidateReceipt_JHNSFZCQZMDB_010701A3(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDictionaryGetValue_008C012C((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key); \
if (!INSOValidateReceipt_value1) { \
INSOValidateReceipt_value1 = INSOValidateReceipt_HZOADMMIHEFT_01070136(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_008C0031); \
INSOValidateReceipt_CFDictionarySetValue_010700D1((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_value1); \
} \
INSOValidateReceipt_CFArrayAppendValue_010701AA((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key); \
INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent; \
INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end; \
} \
} \
if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary; \
INSOValidateReceipt_XTXCBDZWHBVD += 255; INSOValidateReceipt_XTXCBDZWHBVD /= 3;  \
INSOValidateReceipt_HZOADMMIHEFT -= 204; INSOValidateReceipt_HZOADMMIHEFT *= 3; INSOValidateReceipt_HZOADMMIHEFT += 1;  \
INSOValidateReceipt_GetReceiptInformation065_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01DE01C7(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_018400CF(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptSignature077(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        BIO *INSOValidateReceipt_bio_p7 = NULL;
        PKCS7 *INSOValidateReceipt_pkcs7 = NULL;
        STACK_OF(X509) *INSOValidateReceipt_certificates = NULL;
        X509 *INSOValidateReceipt_certificate = NULL;
        int INSOValidateReceipt_count, INSOValidateReceipt_index1;
        unsigned int INSOValidateReceipt_index2;
        ASN1_OBJECT *INSOValidateReceipt_oid = NULL;
        char *INSOValidateReceipt_str1;
        char *INSOValidateReceipt_str3;
        char *INSOValidateReceipt_str4;
        char *INSOValidateReceipt_str5;
        int INSOValidateReceipt_verify, INSOValidateReceipt_status;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01DE0055(INSOValidateReceipt_BIO_s_mem_002501A7());
        INSOValidateReceipt_BIO_write_018400FD(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_XTXCBDZWHBVD_008C00DC((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HZOADMMIHEFT_0036013F((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_0184004E(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_OpenSSL_add_all_digests_0025015F();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        INSOValidateReceipt_verify = 0;
        INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert;
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_002500D8((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_01DE002E((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            char INSOValidateReceipt_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_01DE00C6(NULL, NID_commonName, NULL, 0);
            if (INSOValidateReceipt_status > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
            }
            // Retrieve the common name
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_01DE00C6(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483);
            if (INSOValidateReceipt_status <= 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
            }
            volatile unsigned int INSOValidateReceipt_digest_length = 7; INSOValidateReceipt_digest_length -= 2; INSOValidateReceipt_digest_length *= 4;
            const EVP_MD *INSOValidateReceipt_digester = EVP_sha1();
            unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE];
            unsigned int INSOValidateReceipt_len = 0;
            // Check that the X509_digest function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01840010(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 264;
            if (INSOValidateReceipt_status == 264 || INSOValidateReceipt_len > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
            }
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01840010(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 264;
            if (INSOValidateReceipt_status != 264 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
            }
            char INSOValidateReceipt_fingerprint[483];
            volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 5; INSOValidateReceipt_increment += 3;
            for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) {
                snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]);
            }
            char INSOValidateReceipt_str3_[483];
            INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[380]), INSOValidateReceipt_str3_, 172, 68);
            INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
            // Check the common name and the fingerprint
            char INSOValidateReceipt_str1_[483];
            INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[114]), INSOValidateReceipt_str1_, 35, 16);
            INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
            volatile size_t INSOValidateReceipt_num = 1; INSOValidateReceipt_num -= 1; INSOValidateReceipt_num *= 15; INSOValidateReceipt_num += 13;
            if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[138])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[138])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) {
                INSOValidateReceipt_verify = 264;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 264) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[219]), INSOValidateReceipt_str4_, 168, 34);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_0025010A(INSOValidateReceipt_str4, 0);
        INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00250030(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
        INSOValidateReceipt_ASN1_OBJECT_free_01DE00E1(INSOValidateReceipt_oid);
        if (INSOValidateReceipt_verify >= 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char INSOValidateReceipt_str5_[483];
        INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[210]), INSOValidateReceipt_str5_, 239, 34);
        INSOValidateReceipt_str5 = INSOValidateReceipt_str5_;
        INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_002501AC(INSOValidateReceipt_pkcs7, NULL, 0);
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_002500D8((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_01DE002E((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_0025010A(INSOValidateReceipt_str5, 0);
            INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00250030(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
            INSOValidateReceipt_ASN1_OBJECT_free_01DE00E1(INSOValidateReceipt_oid);
            if (INSOValidateReceipt_verify == -1) {
                sk_X509_free (INSOValidateReceipt_certificates);
                INSOValidateReceipt_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail;
        }
        // Global variables computation
        // Set to 259
        INSOValidateReceipt_JNQBNXGXFURV = 259;
        // Set to 402
        INSOValidateReceipt_HZOADMMIHEFT = 402;
        // From 452 to 36
        INSOValidateReceipt_QAXDFRNFOPKU += 52; INSOValidateReceipt_QAXDFRNFOPKU /= 14;
    INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_0184001E(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_018400A7(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates);
    }
#else
#define INSOValidateReceipt_CheckReceiptSignature077(INSOValidateReceipt_ctx) { \
BIO *INSOValidateReceipt_bio_p7 = NULL; \
PKCS7 *INSOValidateReceipt_pkcs7 = NULL; \
STACK_OF(X509) *INSOValidateReceipt_certificates = NULL; \
X509 *INSOValidateReceipt_certificate = NULL; \
int INSOValidateReceipt_count, INSOValidateReceipt_index1; \
unsigned int INSOValidateReceipt_index2; \
ASN1_OBJECT *INSOValidateReceipt_oid = NULL; \
char *INSOValidateReceipt_str1; \
char *INSOValidateReceipt_str3; \
char *INSOValidateReceipt_str4; \
char *INSOValidateReceipt_str5; \
int INSOValidateReceipt_verify, INSOValidateReceipt_status; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01DE0055(INSOValidateReceipt_BIO_s_mem_002501A7()); \
INSOValidateReceipt_BIO_write_018400FD(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_XTXCBDZWHBVD_008C00DC((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HZOADMMIHEFT_0036013F((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_0184004E(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_OpenSSL_add_all_digests_0025015F(); \
INSOValidateReceipt_verify = 0; \
INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert; \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_002500D8((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_01DE002E((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
char INSOValidateReceipt_common_name[483]; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_01DE00C6(NULL, NID_commonName, NULL, 0); \
if (INSOValidateReceipt_status > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_01DE00C6(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483); \
if (INSOValidateReceipt_status <= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
volatile unsigned int INSOValidateReceipt_digest_length = 7; INSOValidateReceipt_digest_length -= 2; INSOValidateReceipt_digest_length *= 4;  \
const EVP_MD *INSOValidateReceipt_digester = EVP_sha1(); \
unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE]; \
unsigned int INSOValidateReceipt_len = 0; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01840010(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 264; \
if (INSOValidateReceipt_status == 264 || INSOValidateReceipt_len > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_01840010(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 264; \
if (INSOValidateReceipt_status != 264 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_fingerprint[483]; \
volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 5; INSOValidateReceipt_increment += 3;  \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) { \
snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]); \
} \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[380]), INSOValidateReceipt_str3_, 172, 68); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[114]), INSOValidateReceipt_str1_, 35, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
volatile size_t INSOValidateReceipt_num = 1; INSOValidateReceipt_num -= 1; INSOValidateReceipt_num *= 15; INSOValidateReceipt_num += 13;  \
if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[138])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[138])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) { \
INSOValidateReceipt_verify = 264; \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 264) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction00A((INSOValidateReceipt_Strings[219]), INSOValidateReceipt_str4_, 168, 34); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_0025010A(INSOValidateReceipt_str4, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00250030(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_01DE00E1(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify >= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str5_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[210]), INSOValidateReceipt_str5_, 239, 34); \
INSOValidateReceipt_str5 = INSOValidateReceipt_str5_; \
INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_002501AC(INSOValidateReceipt_pkcs7, NULL, 0); \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_002500D8((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_01DE002E((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_0025010A(INSOValidateReceipt_str5, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00250030(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_01DE00E1(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify == -1) { \
sk_X509_free (INSOValidateReceipt_certificates); \
INSOValidateReceipt_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_007000DA(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_JNQBNXGXFURV = 259; \
INSOValidateReceipt_HZOADMMIHEFT = 402; \
INSOValidateReceipt_QAXDFRNFOPKU += 52; INSOValidateReceipt_QAXDFRNFOPKU /= 14;  \
INSOValidateReceipt_CheckReceiptSignature077_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_0184001E(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_018400A7(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[297]), 138, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_008C0103(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QAXDFRNFOPKU_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
        if (INSOValidateReceipt_HZOADMMIHEFT_00360192(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_018A0179(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 259 to 331
        INSOValidateReceipt_JNQBNXGXFURV -= 149; INSOValidateReceipt_JNQBNXGXFURV *= 3; INSOValidateReceipt_JNQBNXGXFURV += 1;
        // From 337 to 36
        INSOValidateReceipt_GGMIRHFPVTUS += 59; INSOValidateReceipt_GGMIRHFPVTUS /= 11;
        // From 146 to 56
        INSOValidateReceipt_CLYKGVPHEMYY += 78; INSOValidateReceipt_CLYKGVPHEMYY /= 4;
        INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[297]), 138, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_008C0103(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QAXDFRNFOPKU_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
if (INSOValidateReceipt_HZOADMMIHEFT_00360192(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_018A0179(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_JNQBNXGXFURV -= 149; INSOValidateReceipt_JNQBNXGXFURV *= 3; INSOValidateReceipt_JNQBNXGXFURV += 1;  \
INSOValidateReceipt_GGMIRHFPVTUS += 59; INSOValidateReceipt_GGMIRHFPVTUS /= 11;  \
INSOValidateReceipt_CLYKGVPHEMYY += 78; INSOValidateReceipt_CLYKGVPHEMYY /= 4;  \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[297]), 138, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_008C0103(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QAXDFRNFOPKU_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_key);
        if (INSOValidateReceipt_HZOADMMIHEFT_00360192(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 259 to 331
        INSOValidateReceipt_JNQBNXGXFURV -= 149; INSOValidateReceipt_JNQBNXGXFURV *= 3; INSOValidateReceipt_JNQBNXGXFURV += 1;
        // From 337 to 36
        INSOValidateReceipt_GGMIRHFPVTUS += 59; INSOValidateReceipt_GGMIRHFPVTUS /= 11;
        // From 146 to 56
        INSOValidateReceipt_CLYKGVPHEMYY += 78; INSOValidateReceipt_CLYKGVPHEMYY /= 4;
        INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07E(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00BCF((INSOValidateReceipt_Strings[297]), 138, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_008C0103(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QAXDFRNFOPKU_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_key); \
if (INSOValidateReceipt_HZOADMMIHEFT_00360192(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_JNQBNXGXFURV -= 149; INSOValidateReceipt_JNQBNXGXFURV *= 3; INSOValidateReceipt_JNQBNXGXFURV += 1;  \
INSOValidateReceipt_GGMIRHFPVTUS += 59; INSOValidateReceipt_GGMIRHFPVTUS /= 11;  \
INSOValidateReceipt_CLYKGVPHEMYY += 78; INSOValidateReceipt_CLYKGVPHEMYY /= 4;  \
INSOValidateReceipt_CFRelease_00360147(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[307]), 8, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_0036014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_GGMIRHFPVTUS_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
        if (INSOValidateReceipt_CLYKGVPHEMYY_00360038(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_018A00DA(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 220 to 312
        INSOValidateReceipt_XTXCBDZWHBVD -= 116; INSOValidateReceipt_XTXCBDZWHBVD *= 3;
        // Set to 476
        INSOValidateReceipt_LUZTWEGIFKJU = 476;
        // From 419 to 330
        INSOValidateReceipt_JHNSFZCQZMDB += 241; INSOValidateReceipt_JHNSFZCQZMDB /= 2;
        // From 331 to 259
        INSOValidateReceipt_JNQBNXGXFURV += 187; INSOValidateReceipt_JNQBNXGXFURV /= 2;
        // From 36 to 63
        INSOValidateReceipt_GGMIRHFPVTUS -= 15; INSOValidateReceipt_GGMIRHFPVTUS *= 3;
        // From 402 to 7
        INSOValidateReceipt_HZOADMMIHEFT += 11; INSOValidateReceipt_HZOADMMIHEFT /= 59;
        // From 56 to 365
        INSOValidateReceipt_CLYKGVPHEMYY -= 11; INSOValidateReceipt_CLYKGVPHEMYY *= 8; INSOValidateReceipt_CLYKGVPHEMYY += 5;
        // From 36 to 248
        INSOValidateReceipt_QAXDFRNFOPKU -= 5; INSOValidateReceipt_QAXDFRNFOPKU *= 8;
        INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[307]), 8, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_0036014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_GGMIRHFPVTUS_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
if (INSOValidateReceipt_CLYKGVPHEMYY_00360038(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_018A00DA(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_XTXCBDZWHBVD -= 116; INSOValidateReceipt_XTXCBDZWHBVD *= 3;  \
INSOValidateReceipt_LUZTWEGIFKJU = 476; \
INSOValidateReceipt_JHNSFZCQZMDB += 241; INSOValidateReceipt_JHNSFZCQZMDB /= 2;  \
INSOValidateReceipt_JNQBNXGXFURV += 187; INSOValidateReceipt_JNQBNXGXFURV /= 2;  \
INSOValidateReceipt_GGMIRHFPVTUS -= 15; INSOValidateReceipt_GGMIRHFPVTUS *= 3;  \
INSOValidateReceipt_HZOADMMIHEFT += 11; INSOValidateReceipt_HZOADMMIHEFT /= 59;  \
INSOValidateReceipt_CLYKGVPHEMYY -= 11; INSOValidateReceipt_CLYKGVPHEMYY *= 8; INSOValidateReceipt_CLYKGVPHEMYY += 5;  \
INSOValidateReceipt_QAXDFRNFOPKU -= 5; INSOValidateReceipt_QAXDFRNFOPKU *= 8;  \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[357]), 140, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_0036014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_GGMIRHFPVTUS_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key);
        if (INSOValidateReceipt_CLYKGVPHEMYY_00360038(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 220 to 312
        INSOValidateReceipt_XTXCBDZWHBVD -= 116; INSOValidateReceipt_XTXCBDZWHBVD *= 3;
        // Set to 476
        INSOValidateReceipt_LUZTWEGIFKJU = 476;
        // From 419 to 330
        INSOValidateReceipt_JHNSFZCQZMDB += 241; INSOValidateReceipt_JHNSFZCQZMDB /= 2;
        // From 331 to 259
        INSOValidateReceipt_JNQBNXGXFURV += 187; INSOValidateReceipt_JNQBNXGXFURV /= 2;
        // From 36 to 63
        INSOValidateReceipt_GGMIRHFPVTUS -= 15; INSOValidateReceipt_GGMIRHFPVTUS *= 3;
        // From 402 to 7
        INSOValidateReceipt_HZOADMMIHEFT += 11; INSOValidateReceipt_HZOADMMIHEFT /= 59;
        // From 56 to 365
        INSOValidateReceipt_CLYKGVPHEMYY -= 11; INSOValidateReceipt_CLYKGVPHEMYY *= 8; INSOValidateReceipt_CLYKGVPHEMYY += 5;
        // From 36 to 248
        INSOValidateReceipt_QAXDFRNFOPKU -= 5; INSOValidateReceipt_QAXDFRNFOPKU *= 8;
        INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[357]), 140, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_0036014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_GGMIRHFPVTUS_00360024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_key); \
if (INSOValidateReceipt_CLYKGVPHEMYY_00360038(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_XTXCBDZWHBVD -= 116; INSOValidateReceipt_XTXCBDZWHBVD *= 3;  \
INSOValidateReceipt_LUZTWEGIFKJU = 476; \
INSOValidateReceipt_JHNSFZCQZMDB += 241; INSOValidateReceipt_JHNSFZCQZMDB /= 2;  \
INSOValidateReceipt_JNQBNXGXFURV += 187; INSOValidateReceipt_JNQBNXGXFURV /= 2;  \
INSOValidateReceipt_GGMIRHFPVTUS -= 15; INSOValidateReceipt_GGMIRHFPVTUS *= 3;  \
INSOValidateReceipt_HZOADMMIHEFT += 11; INSOValidateReceipt_HZOADMMIHEFT /= 59;  \
INSOValidateReceipt_CLYKGVPHEMYY -= 11; INSOValidateReceipt_CLYKGVPHEMYY *= 8; INSOValidateReceipt_CLYKGVPHEMYY += 5;  \
INSOValidateReceipt_QAXDFRNFOPKU -= 5; INSOValidateReceipt_QAXDFRNFOPKU *= 8;  \
INSOValidateReceipt_CFRelease_010700F2(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptHash0A5(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3;
        CFMutableDataRef INSOValidateReceipt_data4;
        unsigned char INSOValidateReceipt_digest[483];
        volatile int INSOValidateReceipt_counter = 19; INSOValidateReceipt_counter -= 13; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value;
        CFNumberRef INSOValidateReceipt_key;
        char *INSOValidateReceipt_str1;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash");
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue;
        INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData;
        INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash;
        INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key);
        INSOValidateReceipt_data4 = INSOValidateReceipt_GGMIRHFPVTUS_0107003F(NULL, INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1) + INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2));
        INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data1), INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1));
        INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data2), INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2));
        INSOValidateReceipt_SHA1_01DE0003(INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data4), (CC_LONG) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data4), INSOValidateReceipt_digest);
        INSOValidateReceipt_OpenSSL_add_all_digests_01840145();
        EVP_MD_CTX INSOValidateReceipt_hashctx2;
        INSOValidateReceipt_EVP_MD_CTX_init_01840048(&INSOValidateReceipt_hashctx2);
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[21]), INSOValidateReceipt_str1_, 15, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        const EVP_MD *INSOValidateReceipt_digester = EVP_get_digestbyname(INSOValidateReceipt_str1);
        INSOValidateReceipt_EVP_DigestInit_01DE012B(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digester);
        INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1));
        INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2));
        INSOValidateReceipt_EVP_DigestFinal_00250177(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digest, NULL);
        CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_HZOADMMIHEFT_00360007(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter);
        if (!INSOValidateReceipt_JHNSFZCQZMDB_0036014A(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid");
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5);
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_018A0179(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data1);
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data2);
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data4);
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5);
            goto INSOValidateReceipt_CheckReceiptHash0A5_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5);
        // Global variables computation
        // Set to 408
        INSOValidateReceipt_LUZTWEGIFKJU = 408;
        // From 259 to 254
        INSOValidateReceipt_JNQBNXGXFURV += 249; INSOValidateReceipt_JNQBNXGXFURV /= 2;
        // From 63 to 326
        INSOValidateReceipt_GGMIRHFPVTUS -= 17; INSOValidateReceipt_GGMIRHFPVTUS *= 7; INSOValidateReceipt_GGMIRHFPVTUS += 4;
        // From 7 to 331
        INSOValidateReceipt_HZOADMMIHEFT -= 1; INSOValidateReceipt_HZOADMMIHEFT *= 49; INSOValidateReceipt_HZOADMMIHEFT += 37;
        // Set to 36
        INSOValidateReceipt_CLYKGVPHEMYY = 36;
    INSOValidateReceipt_CheckReceiptHash0A5_INSOValidateReceipt_bail:
        INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data4);
    }
#else
#define INSOValidateReceipt_CheckReceiptHash0A5(INSOValidateReceipt_ctx) { \
CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3; \
CFMutableDataRef INSOValidateReceipt_data4; \
unsigned char INSOValidateReceipt_digest[483]; \
volatile int INSOValidateReceipt_counter = 19; INSOValidateReceipt_counter -= 13; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;  \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value; \
CFNumberRef INSOValidateReceipt_key; \
char *INSOValidateReceipt_str1; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash"); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue; \
INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData; \
INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash; \
INSOValidateReceipt_key = INSOValidateReceipt_JNQBNXGXFURV_01070103(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_003601A5((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_key); \
INSOValidateReceipt_data4 = INSOValidateReceipt_GGMIRHFPVTUS_0107003F(NULL, INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data) + INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1) + INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2)); \
INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data1), INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1)); \
INSOValidateReceipt_CFDataAppendBytes_0107009C(INSOValidateReceipt_data4, INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data2), INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2)); \
INSOValidateReceipt_SHA1_01DE0003(INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data4), (CC_LONG) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data4), INSOValidateReceipt_digest); \
INSOValidateReceipt_OpenSSL_add_all_digests_01840145(); \
EVP_MD_CTX INSOValidateReceipt_hashctx2; \
INSOValidateReceipt_EVP_MD_CTX_init_01840048(&INSOValidateReceipt_hashctx2); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[21]), INSOValidateReceipt_str1_, 15, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
const EVP_MD *INSOValidateReceipt_digester = EVP_get_digestbyname(INSOValidateReceipt_str1); \
INSOValidateReceipt_EVP_DigestInit_01DE012B(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digester); \
INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data1)); \
INSOValidateReceipt_EVP_DigestUpdate_01DE007F(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_QAXDFRNFOPKU_010700F8(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_XTXCBDZWHBVD_01070138(INSOValidateReceipt_data2)); \
INSOValidateReceipt_EVP_DigestFinal_00250177(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digest, NULL); \
CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_HZOADMMIHEFT_00360007(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter); \
if (!INSOValidateReceipt_JHNSFZCQZMDB_0036014A(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid"); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_018A0179(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data1); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data2); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data4); \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5); \
goto INSOValidateReceipt_CheckReceiptHash0A5_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data5); \
INSOValidateReceipt_LUZTWEGIFKJU = 408; \
INSOValidateReceipt_JNQBNXGXFURV += 249; INSOValidateReceipt_JNQBNXGXFURV /= 2;  \
INSOValidateReceipt_GGMIRHFPVTUS -= 17; INSOValidateReceipt_GGMIRHFPVTUS *= 7; INSOValidateReceipt_GGMIRHFPVTUS += 4;  \
INSOValidateReceipt_HZOADMMIHEFT -= 1; INSOValidateReceipt_HZOADMMIHEFT *= 49; INSOValidateReceipt_HZOADMMIHEFT += 37;  \
INSOValidateReceipt_CLYKGVPHEMYY = 36; \
INSOValidateReceipt_CheckReceiptHash0A5_INSOValidateReceipt_bail: \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptExpirationDate0A7(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_GGMIRHFPVTUS_008C0146(NULL, INSOValidateReceipt_LUZTWEGIFKJU_01070198());
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_HZOADMMIHEFT_0107014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_CLYKGVPHEMYY_008C0024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key);
        if (INSOValidateReceipt_date2 && INSOValidateReceipt_JNQBNXGXFURV_003600FE(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_018A002F(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1);
            INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1);
        }
        // Global variables computation
        // Set to 36
        INSOValidateReceipt_XTXCBDZWHBVD = 36;
        // From 408 to 402
        INSOValidateReceipt_LUZTWEGIFKJU += 396; INSOValidateReceipt_LUZTWEGIFKJU /= 2;
        // From 254 to 211
        INSOValidateReceipt_JNQBNXGXFURV += 168; INSOValidateReceipt_JNQBNXGXFURV /= 2;
        // From 326 to 75
        INSOValidateReceipt_GGMIRHFPVTUS += 124; INSOValidateReceipt_GGMIRHFPVTUS /= 6;
        // Set to 419
        INSOValidateReceipt_HZOADMMIHEFT = 419;
        INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1);
    }
#else
#define INSOValidateReceipt_CheckReceiptExpirationDate0A7(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_GGMIRHFPVTUS_008C0146(NULL, INSOValidateReceipt_LUZTWEGIFKJU_01070198()); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_HZOADMMIHEFT_0107014B(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_CLYKGVPHEMYY_008C0024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key); \
if (INSOValidateReceipt_date2 && INSOValidateReceipt_JNQBNXGXFURV_003600FE(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_018A002F(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1); \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1); \
} \
INSOValidateReceipt_XTXCBDZWHBVD = 36; \
INSOValidateReceipt_LUZTWEGIFKJU += 396; INSOValidateReceipt_LUZTWEGIFKJU /= 2;  \
INSOValidateReceipt_JNQBNXGXFURV += 168; INSOValidateReceipt_JNQBNXGXFURV /= 2;  \
INSOValidateReceipt_GGMIRHFPVTUS += 124; INSOValidateReceipt_GGMIRHFPVTUS /= 6;  \
INSOValidateReceipt_HZOADMMIHEFT = 419; \
INSOValidateReceipt_CFRelease_010701B0(INSOValidateReceipt_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2;
        CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases");
        INSOValidateReceipt_key1 = INSOValidateReceipt_HZOADMMIHEFT_008C01A3(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        // Extract InApp Purchase
        CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers;
        CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1);
        if (INSOValidateReceipt_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                Boolean INSOValidateReceipt_found = false;
                // Iterate over the purchases
                for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) {
                    CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_purchases, INSOValidateReceipt_index2);
                    INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer;
                    INSOValidateReceipt_key2 = INSOValidateReceipt_HZOADMMIHEFT_008C01A3(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
                    CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0024(INSOValidateReceipt_purchase, INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (INSOValidateReceipt_LUZTWEGIFKJU_01070192(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) {
                        INSOValidateReceipt_found |= true;
                        (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!INSOValidateReceipt_found) {
                    (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the INSOValidateReceipt_idents and call the block back
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
            }
        }
        INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key1);
    }
#else
#define INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_ctx) { \
CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2; \
CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_HZOADMMIHEFT_008C01A3(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers; \
CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0024((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1); \
if (INSOValidateReceipt_purchases) { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
Boolean INSOValidateReceipt_found = false; \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) { \
CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_purchases, INSOValidateReceipt_index2); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer; \
INSOValidateReceipt_key2 = INSOValidateReceipt_HZOADMMIHEFT_008C01A3(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_XTXCBDZWHBVD_008C0024(INSOValidateReceipt_purchase, INSOValidateReceipt_key2); \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key2); \
if (INSOValidateReceipt_LUZTWEGIFKJU_01070192(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) { \
INSOValidateReceipt_found |= true; \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase)); \
} \
} \
if (!INSOValidateReceipt_found) { \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
} else { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_GGMIRHFPVTUS_008C004B(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_JNQBNXGXFURV_003600D3(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
INSOValidateReceipt_CFRelease_008C00F2(INSOValidateReceipt_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up");
        CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data };
        if (INSOValidateReceipt_references[0]) {
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[0]);
            INSOValidateReceipt_references[0] = NULL;
        }
        if (INSOValidateReceipt_references[1]) {
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[1]);
            INSOValidateReceipt_references[1] = NULL;
        }
        if (INSOValidateReceipt_references[2]) {
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[2]);
            INSOValidateReceipt_references[2] = NULL;
        }
        if (INSOValidateReceipt_references[3]) {
            INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[3]);
            INSOValidateReceipt_references[3] = NULL;
        }
    }
#else
#define INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up"); \
CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data }; \
if (INSOValidateReceipt_references[0]) { \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[0]); \
INSOValidateReceipt_references[0] = NULL; \
} \
if (INSOValidateReceipt_references[1]) { \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[1]); \
INSOValidateReceipt_references[1] = NULL; \
} \
if (INSOValidateReceipt_references[2]) { \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[2]); \
INSOValidateReceipt_references[2] = NULL; \
} \
if (INSOValidateReceipt_references[3]) { \
INSOValidateReceipt_CFRelease_008C01B0(INSOValidateReceipt_references[3]); \
INSOValidateReceipt_references[3] = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckInAppPurchases(NSArray *_inapp_identifiers, INSOValidateReceipt_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point");
        // Create contexts
        INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block);
        // Initial value
        int INSOValidateReceipt_index = 2253;
        // While loop
        while(INSOValidateReceipt_index != 357) {
            if (!INSOValidateReceipt_setjmp_00700166(INSOValidateReceipt_JumpBuf)) {
                switch(INSOValidateReceipt_index) {
                    case 2997:
                        INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 2141; INSOValidateReceipt_index /= 2;
                        break;
                    case 3488:
                        INSOValidateReceipt_CheckReceiptHash0A5((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1844; INSOValidateReceipt_index /= 4;
                        break;
                    case 2569:
                        INSOValidateReceipt_CheckBundleVersion05E((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 1518; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 1;
                        break;
                    case 3967:
                        INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 3009; INSOValidateReceipt_index /= 2;
                        break;
                    case 3971:
                        INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 2023; INSOValidateReceipt_index /= 2;
                        break;
                    case 3154:
                        INSOValidateReceipt_GetReceiptInformation065((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1736; INSOValidateReceipt_index /= 5; 
                        break;
                    case 760:
                        INSOValidateReceipt_LoadReceipt043((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 193; INSOValidateReceipt_index *= 7; INSOValidateReceipt_index += 2; 
                        break;
                    case 978:
                        INSOValidateReceipt_CheckReceiptSignature077((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 342; INSOValidateReceipt_index *= 5; INSOValidateReceipt_index += 3; 
                        break;
                    case 3183:
                        INSOValidateReceipt_CheckReceiptIdentifier07E((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 1861; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 1; 
                        break;
                    case 1148:
                        INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 637; INSOValidateReceipt_index /= 5; 
                        break;
                    case 2780:
                        INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1812; INSOValidateReceipt_index /= 4; 
                        break;
                    case 2253:
                        INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 787; INSOValidateReceipt_index /= 4; 
                        break;
                    case 1333:
                        INSOValidateReceipt_CheckReceiptExpirationDate0A7((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 638; INSOValidateReceipt_index *= 4; 
                        break;
                }
            } else {
                break;
            }
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define INSOValidateReceipt_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point"); \
INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block); \
int INSOValidateReceipt_index = 2253; \
while(INSOValidateReceipt_index != 357) { \
if (!INSOValidateReceipt_setjmp_00700166(INSOValidateReceipt_JumpBuf)) { \
switch(INSOValidateReceipt_index) { \
case 2997: \
INSOValidateReceipt_CheckBundleIdentifier05D((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 2141; INSOValidateReceipt_index /= 2;  \
break; \
case 3488: \
INSOValidateReceipt_CheckReceiptHash0A5((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1844; INSOValidateReceipt_index /= 4;  \
break; \
case 2569: \
INSOValidateReceipt_CheckBundleVersion05E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 1518; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 1;  \
break; \
case 3967: \
INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 3009; INSOValidateReceipt_index /= 2;  \
break; \
case 3971: \
INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 2023; INSOValidateReceipt_index /= 2;  \
break; \
case 3154: \
INSOValidateReceipt_GetReceiptInformation065((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1736; INSOValidateReceipt_index /= 5;  \
break; \
case 760: \
INSOValidateReceipt_LoadReceipt043((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 193; INSOValidateReceipt_index *= 7; INSOValidateReceipt_index += 2;  \
break; \
case 978: \
INSOValidateReceipt_CheckReceiptSignature077((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 342; INSOValidateReceipt_index *= 5; INSOValidateReceipt_index += 3;  \
break; \
case 3183: \
INSOValidateReceipt_CheckReceiptIdentifier07E((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 1861; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 1;  \
break; \
case 1148: \
INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 637; INSOValidateReceipt_index /= 5;  \
break; \
case 2780: \
INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1812; INSOValidateReceipt_index /= 4;  \
break; \
case 2253: \
INSOValidateReceipt_GetMainBundle017((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 787; INSOValidateReceipt_index /= 4;  \
break; \
case 1333: \
INSOValidateReceipt_CheckReceiptExpirationDate0A7((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 638; INSOValidateReceipt_index *= 4;  \
break; \
} \
} else { \
break; \
} \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

