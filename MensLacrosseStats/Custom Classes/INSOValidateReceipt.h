//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.intangiblesoftware.menslacrossestats
// CFBundleVersion            : 1
// Prefix                     : INSOValidateReceipt
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 0
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __INSOValidateReceipt_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*INSOValidateReceipt_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^INSOValidateReceipt_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _INSOValidateReceipt_ReceiptAttributeType {
        
        // Bundle identifier
        INSOValidateReceipt_ReceiptAttributeTypeBundleId = 2,
        // Application version
        INSOValidateReceipt_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        INSOValidateReceipt_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        INSOValidateReceipt_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        INSOValidateReceipt_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        INSOValidateReceipt_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        INSOValidateReceipt_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        INSOValidateReceipt_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        INSOValidateReceipt_StoreNone = 2984,
        // Bundle identifier
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 3),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 3) + 1,
        // Application version
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleVersion << 3),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersionData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 3) + 1,
        // Opaque value
        INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue << 3),
        // Hash value
        INSOValidateReceipt_StoreReceiptAttributeTypeHash = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeHash << 3),
        // In-app purchase receipt
        INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase << 3),
        // Original Application Version
        INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion << 3),
        // Receipt Expiration Date
        INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeExpirationDate << 3),
        // Quantity
        INSOValidateReceipt_StoreInAppAttributeTypeQuantity = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeQuantity << 3),
        // Product identifier
        INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeProductIdentifer << 3),
        // Transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer << 3),
        // Purchase date
        INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypePurchaseDate << 3),
        // Original transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer << 3),
        // Original purchase date
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate << 3),
        // Subscription Expiration Date
        INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate << 3),
        // Web Order Line Item ID
        INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId << 3),
        // Cancellation Date
        INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeCancellationDate << 3)
        
    } INSOValidateReceipt_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleId]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeQuantity]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _INSOValidateReceipt_CheckingContext {
        CFTypeRef dummy0006;
        CFTypeRef dummy0008;
        CFTypeRef dummy0005;
        CFTypeRef dummy0002;
        CFTypeRef guid_data;
        CFTypeRef inapp_identifiers;
        CFTypeRef dummy0000;
        CFTypeRef dummy000D;
        CFTypeRef dummy0001;
        CFTypeRef dummy000C;
        CFTypeRef receipt_dict;
        CFTypeRef dummy000E;
        CFTypeRef dummy0003;
        CFTypeRef dummy0004;
        CFTypeRef inapp_block;
        CFTypeRef receipt_data;
        CFTypeRef dummy000B;
        CFTypeRef dummy0009;
        CFTypeRef ca_data;
        CFTypeRef main_bundle;
        CFTypeRef dummy0007;
        CFTypeRef dummy000A;
    } INSOValidateReceipt_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _INSOValidateReceipt_ParsingContext {
        CFTypeRef dummy0003;
        CFTypeRef dummy0008;
        CFTypeRef dummy000A;
        const unsigned char * ptr;
        CFTypeRef dummy0002;
        const unsigned char * end;
        CFTypeRef dummy0001;
        CFTypeRef dummy000C;
        CFTypeRef dummy0004;
        struct _INSOValidateReceipt_ParsingContext * parent;
        CFTypeRef dummy000D;
        CFTypeRef dummy0005;
        CFTypeRef dictionary;
        CFTypeRef dummy000E;
        CFTypeRef dummy0006;
        CFTypeRef dummy000B;
        CFTypeRef dummy0009;
        CFTypeRef dummy0000;
        CFTypeRef dummy0007;
    } INSOValidateReceipt_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__INSOValidateReceipt_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__INSOValidateReceipt_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__INSOValidateReceipt_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__INSOValidateReceipt_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__INSOValidateReceipt_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__INSOValidateReceipt_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__INSOValidateReceipt_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__INSOValidateReceipt_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__INSOValidateReceipt_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__INSOValidateReceipt_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__INSOValidateReceipt_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__INSOValidateReceipt_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__INSOValidateReceipt_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__INSOValidateReceipt_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__INSOValidateReceipt_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__INSOValidateReceipt_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__INSOValidateReceipt_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__INSOValidateReceipt_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__INSOValidateReceipt_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__INSOValidateReceipt_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__INSOValidateReceipt_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__INSOValidateReceipt_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__INSOValidateReceipt_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__INSOValidateReceipt_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__INSOValidateReceipt_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__INSOValidateReceipt_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__INSOValidateReceipt_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__INSOValidateReceipt_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__INSOValidateReceipt_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__INSOValidateReceipt_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__INSOValidateReceipt_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__INSOValidateReceipt_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__INSOValidateReceipt_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__INSOValidateReceipt_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__INSOValidateReceipt_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__INSOValidateReceipt_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__INSOValidateReceipt_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__INSOValidateReceipt_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__INSOValidateReceipt_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__INSOValidateReceipt_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__INSOValidateReceipt_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__INSOValidateReceipt_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__INSOValidateReceipt_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__INSOValidateReceipt_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__INSOValidateReceipt_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__INSOValidateReceipt_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__INSOValidateReceipt_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__INSOValidateReceipt_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__INSOValidateReceipt_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__INSOValidateReceipt_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__INSOValidateReceipt_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__INSOValidateReceipt_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__INSOValidateReceipt_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__INSOValidateReceipt_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__INSOValidateReceipt_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__INSOValidateReceipt_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__INSOValidateReceipt_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__INSOValidateReceipt_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__INSOValidateReceipt_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__INSOValidateReceipt_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__INSOValidateReceipt_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__INSOValidateReceipt_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__INSOValidateReceipt_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__INSOValidateReceipt_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__INSOValidateReceipt_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__INSOValidateReceipt_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__INSOValidateReceipt_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__INSOValidateReceipt_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__INSOValidateReceipt_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__INSOValidateReceipt_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__INSOValidateReceipt_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__INSOValidateReceipt_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__INSOValidateReceipt_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__INSOValidateReceipt_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__INSOValidateReceipt_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__INSOValidateReceipt_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__INSOValidateReceipt_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__INSOValidateReceipt_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__INSOValidateReceipt_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__INSOValidateReceipt_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *INSOValidateReceipt_Strings[483] = {
        // "" / M(None) / S(0) / L(0)
        "\x51\xbc\x07\x46\xfc\xa2\x42\x41\xee\x55\x11\xd5\x01\xd4\x4f\xdc\x48\x7f\xac\x2c\x09\xfa\xf6\x78\xfd\xfd\x51\xad\xfd\xf1\xb0\xdf",
        // "%02X" / M(Rot) / S(131) / L(4)
        "\xa8\xb3\xb5\xdb\x83\xea\x85\x00\xfb\x4b\x2a\xdc\x1b\xb1\x47\x7a",
        // "" / M(None) / S(0) / L(0)
        "\x6c\xf0\xdf\xdc\xb3\x02\xc5\x5d\xf5\x3b\x83\x00\x27\xb9\x5e\xca\x93\xa3\xb5\x6d\x53\x2d\x76\x31\x30\x69\xc2\x63\x5f\xbb\x41\x3d",
        // "" / M(None) / S(0) / L(0)
        "\xb4\x58\xbe\x46\x21\xd0\xe3\x7b\x09\x34\x29\xaa\x80\x3b\xd6\xe6\x14\x72\xc5\xef\xad\x12\x00\xaa\x40\xbe\x50\xc9\xd4\x66\xbe\xf7",
        // "strlen" / M(Rot) / S(245) / L(6)
        "\x68\x69\x67\x61\x5a\x63\xf5\xf1\xe3\x28\x9b\x62\x1a\xcc\x24\x63",
        // "" / M(None) / S(0) / L(0)
        "\xec\x6d\x3a\xc5\x56\x50\x09\x52\xe4\x61\x13\x16\x2c\x51\xf2\x42\xaf\x6f\x89\x03\x1e\xec\xce\x38\x58\x62\x91\x03\x3f\x4e\xd5\x5d",
        // "" / M(None) / S(0) / L(0)
        "\xae\xda\xa3\x68\xf2\xa0\xd3\x00\x2e\xd4\xfc\xc9\xa8\xed\x6b\x20\x3c\x23\xcc\xf4\xb3\x93\xce\xfd\xc1\x27\x11\x0d\xeb\x0a\x53\x73",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(83) / L(29)
        "\x12\x3a\x3f\x2d\x00\x09\x1c\x3d\x10\x1a\x0d\x10\x16\x17\x18\x0b\x00\x32\x1c\x00\x3a\x18\x15\x15\x3b\x18\x1a\x12\x0a\x79\x32\x4c\x0c\x47\x4a\x4a\x4c\xc1",
        // "" / M(None) / S(0) / L(0)
        "\x6d\x91\x5e\x53\xda\x65\xbe\xbb\x58\x7a\x86\x26\xfa\xc2\xd6\x80\xda\xab\xee\x1d\x60\x67\xdf\x64\x8c\x23\x82\xb5\xf7\xfc\x7e\x7c",
        // "sha1" / M(Xor1) / S(165) / L(4)
        "\xd6\xcd\xc4\x94\xa5\x9c\x4b\x5e\x3d\xc6\x8a\x4a\xea\x09\xe3\xff",
        // "" / M(None) / S(0) / L(0)
        "\x87\x89\xa7\x2d\x02\x20\x6f\x91\xfa\x15\x32\x79\x56\x08\xa3\x67\x6c\xb9\x89\x0a\x10\xa1\xf1\x39\x94\x30\x78\x63\xdc\xf7\x55\xc9",
        // "" / M(None) / S(0) / L(0)
        "\x5e\x9c\xcf\x4b\x92\x47\x47\x1c\x9c\xe1\x6c\xd0\x4d\x1e\xd9\x5c\xe5\x0d\xc5\x2f\x20\xf3\x79\x22\xc4\x04\xc2\x0d\x12\x9a\xaf\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x89\x3f\xd1\xa6\x78\x7f\x23\x95\x32\x0f\x69\x97\x4c\x8e\x5f\xf0\xe8\xd7\x02\xca\xb8\x2a\xf8\xeb\x58\xab\xb8\x3e\xb1\x0a\x3f\xe5",
        // "BIO_free" / M(Xor3) / S(201) / L(8)
        "\x9b\x90\x96\x86\xbf\xab\xbc\xbc\xd9\x2d\x48\x68\x7b\x21\xe5\xa3",
        // "start" / M(Xor2) / S(217) / L(5)
        "\xba\xbd\xa8\xbb\xbd\xc9\xd7\x06\x57\x5e\x2b\x88\xa9\xe7\xd5\x2b",
        // "objc_lookUpClass" / M(Xor3) / S(145) / L(16)
        "\xcd\xc0\xc8\xc1\xfd\xce\xcd\xcd\xc9\xf7\xd2\xe1\xce\xc3\xd1\xd1\xa2",
        // "" / M(None) / S(0) / L(0)
        "\xbc\xd4\xd2\xfc\x34\x6f\xb6\x00\x7c\xd0\xa6\x4e\x4d\xd1\x4a\x11\xd4\x88\xca\x86\x3a\x26\x99\xa1\xa0\xd9\x85\xd1\xc8\xd6\x52\x78",
        // "dlsym" / M(Xor1) / S(160) / L(5)
        "\xc4\xcc\xd3\xd9\xcd\xa0\xd1\xb9\x1a\x8f\x96\xc9\x1c\x93\x56\xc8",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(89) / L(16)
        "\x3a\x6b\x30\x06\x18\x0a\x17\x68\x06\x10\x17\x0d\x1c\x1e\x1c\x0b\x59",
        // "1" / M(Rot) / S(220) / L(1)
        "\x0d\xdc\x91\x6b\x44\xe5\xaa\xb7\xf7\xe8\x5a\x19\x3d\x66\xed\x20",
        // "EVP_DigestFinal" / M(Xor2) / S(197) / L(15)
        "\x90\x83\x85\x8a\x91\xbc\xb2\xb0\xa6\xa1\x93\xbc\xbb\xb4\xb9\xd5",
        // "PKCS7_free" / M(Xor2) / S(253) / L(10)
        "\xbd\xa6\xae\xbe\xda\xb2\x8b\x9f\x88\x88\xed\x53\x99\xb8\x87\xfb",
        // "CC_SHA1_Final" / M(Xor3) / S(197) / L(13)
        "\x96\x96\x8a\x86\x9d\x94\xe4\x8a\x93\xbc\xbb\xb4\xb9\xd5\xab\xd2",
        // "OpenSSL_add_all_digests" / M(Rot) / S(107) / L(23)
        "\xba\xdb\xd0\xd9\xbe\xbe\xb7\xca\xcc\xcf\xcf\xca\xcc\xd7\xd7\xca\xcf\xd4\xd2\xd0\xde\xdf\xde\x6b\xec\x80\x6c\x63\x0c\xee\xfb\x16",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(74) / L(21)
        "\x21\x09\x0c\x1e\x33\x3a\x2f\x0b\x38\x38\x2b\x33\x09\x2b\x26\x26\x08\x2b\x29\x21\x39\x4a",
        // "" / M(None) / S(0) / L(0)
        "\xd0\xb7\xd5\x43\x26\x2e\x17\x47\xd1\x88\xdc\xa5\xe8\x5f\xb7\x28\xaf\x92\x67\x88\xbf\x4b\x63\x94\x7c\x86\xd5\xbe\xdf\x53\x94\xb3",
        // "" / M(None) / S(0) / L(0)
        "\xa7\x4c\x02\x7e\xec\x88\xb0\xf4\x2d\xb8\x64\xa3\x72\x8b\xcf\xc0\x28\x2b\x6d\xc6\x13\xaf\xdd\xdc\xac\x34\x4e\x29\x67\xb0\xe9\x30",
        // "CFReadStreamOpen" / M(Xor2) / S(212) / L(16)
        "\x86\x83\x97\xa0\xa4\xa1\x96\xb1\xb7\xa0\xa4\xa8\x8a\xb5\xa0\xab\xc5",
        // "d2i_X509_bio" / M(Xor3) / S(26) / L(12)
        "\x4e\x18\x43\x75\x72\x1f\x1a\x13\x75\x48\x43\x45\x2a\x8c\x35\xf1",
        // "appStoreReceiptURL" / M(Xor2) / S(224) / L(18)
        "\x92\x83\x83\xa0\x87\x9c\x81\x96\xa1\x96\x90\x96\x9a\x83\x87\xa6\xa1\xbf\xf3",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor2) / S(107) / L(40)
        "\x6c\x6b\x6b\x3f\x6f\x38\x6c\x6c\x68\x39\x6f\x63\x69\x3b\x6a\x62\x3c\x3c\x6f\x62\x3e\x6b\x6e\x3b\x3f\x68\x68\x6e\x6f\x68\x3e\x6b\x63\x62\x3e\x3c\x6c\x39\x6c\x6a\x5a\x6f\x6e\xed\x4c\x74\xbb\xf5\x98",
        // "" / M(None) / S(0) / L(0)
        "\x5d\x5c\x87\xa7\x40\x1e\xc4\xa6\xa1\x92\x12\xc7\x50\xca\x32\x38\xd5\x98\x42\x05\xe4\x0d\x65\x65\x3a\xdf\x0c\x13\x8e\x29\x3b\x44",
        // "" / M(None) / S(0) / L(0)
        "\x4c\x82\x63\xb3\xec\xdd\xfc\x38\xdf\xbe\xee\x6b\x03\xb3\x3f\xd8\x06\x0a\xae\x3a\x87\x03\x1b\xe8\x01\x3d\xaa\x60\x0e\x01\x88\x7c",
        // "%02x" / M(Xor4) / S(232) / L(4)
        "\xa5\xb0\xb2\xf8\x80\xce\x14\x68\x02\x77\x1f\x40\xa2\xfa\x3b\xce",
        // "CFDateCompare" / M(Rot) / S(140) / L(13)
        "\xcf\xd2\xd0\xed\x00\xf1\xcf\xfb\xf9\xfc\xed\xfe\xf1\x8c\xe0\x9b",
        // "" / M(None) / S(0) / L(0)
        "\xfe\x0b\x6b\x38\x78\x01\x41\x4b\xb2\xe5\x23\x50\x11\xff\xec\x17\xb6\x4e\xbe\x64\x14\x60\xc6\xed\x60\x05\x3e\xe4\x59\x6b\x65\x16",
        // "CFReadStreamClose" / M(Rot) / S(174) / L(17)
        "\xf1\xf4\x00\x13\x0f\x12\x01\x22\x20\x13\x0f\x1b\xf1\x1a\x1d\x21\x13\xae",
        // "sha1" / M(Xor1) / S(111) / L(4)
        "\x1c\x07\x0e\x5e\x6f\x84\xd4\xed\x5e\xb5\x01\x22\x20\x52\x41\x63",
        // "CFDateCompare" / M(Xor4) / S(35) / L(13)
        "\x73\x76\x74\x51\x44\x55\x73\x5f\x5d\x40\x51\x42\x55\x30\xcd\x52",
        // "BIO_new" / M(Rot) / S(240) / L(7)
        "\x32\x39\x3f\x4f\x5e\x55\x67\xf0\x6a\xe6\xcd\xa7\x00\x45\xfa\xd0",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(126) / L(22)
        "\x39\x11\x14\x10\x27\x3c\x36\x3e\x37\x1b\x36\x37\x3c\x26\x3b\x34\x3b\x37\x20\x19\x37\x2b\x52",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(157) / L(19)
        "\xc5\xa8\xad\xa4\xc2\xfa\xf8\xe9\xc2\xf8\xe5\xe9\xc2\xff\xe4\xc2\xd2\xdf\xd7\x9d",
        // "setjmp" / M(Rot) / S(68) / L(6)
        "\xb7\xa9\xb8\xae\xb1\xb4\x44\xb7\x0c\xfb\x93\x34\xf4\x11\xe6\xf1",
        // "CFDictionaryGetValue" / M(Rot) / S(126) / L(20)
        "\xc1\xc4\xc2\xe7\xe1\xf2\xe7\xed\xec\xdf\xf0\xf7\xc5\xe3\xf2\xd4\xdf\xea\xf3\xe3\x7e",
        // "%02X:" / M(Rot) / S(69) / L(5)
        "\x6a\x75\x77\x9d\x7f\x45\x27\x46\x56\x98\x5f\xf0\x91\xbe\xa6\x3e",
        // "CC_SHA1_Final" / M(Xor3) / S(69) / L(13)
        "\x16\x16\x0a\x06\x1d\x14\x64\x0a\x13\x3c\x3b\x34\x39\x55\xcb\xa2",
        // "" / M(None) / S(0) / L(0)
        "\x12\x37\x78\x6d\x20\xdd\x79\xd3\xbd\xb3\xbe\x73\xc0\x54\x80\x71\x63\x68\x4d\xbf\x82\x51\x58\xe9\xc1\x3f\x81\x87\x5d\x88\x7b\x63",
        // "setDelegate:" / M(Xor2) / S(192) / L(12)
        "\xa3\xb5\xa4\x94\xb5\xbc\xb5\xb7\xb1\xa4\xb5\xea\xd0\x53\xc9\xcb",
        // "" / M(None) / S(0) / L(0)
        "\xd8\x85\xa1\x13\x10\x3f\x51\xb7\x48\x12\xf1\x37\xea\xd7\x31\xe2\x0a\x33\xbc\x82\xa3\xf7\x02\x59\x28\x5d\xd4\x06\x31\x19\x06\x58",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(127) / L(59)
        "\x0d\x0a\x01\x0a\x5e\x01\x0e\x59\x01\x0d\x0d\x01\x09\x58\x01\x0e\x02\x01\x08\x5a\x01\x0b\x03\x01\x5d\x5d\x01\x0e\x03\x01\x5f\x0a\x01\x0f\x5a\x01\x5e\x09\x01\x09\x0f\x01\x0e\x09\x01\x5f\x0a\x01\x02\x03\x01\x5f\x5d\x01\x0d\x58\x01\x0d\x0b\x3b\xc7\x0b\x3f\xa1\x66\xd0\xdb\xbf",
        // "SHA1" / M(Rot) / S(33) / L(4)
        "\x74\x69\x62\x52\x21\xaf\x4e\x7e\xb0\x04\x5a\xd6\x3e\xe5\xa1\x7f",
        // "" / M(None) / S(0) / L(0)
        "\x0d\xfa\x6f\x3c\xe7\xf5\xe6\x76\x23\xb1\xbb\x79\xe1\x7a\x8a\x50\xfb\x8f\xa2\xbb\x6d\xf3\xad\x02\x03\xfe\x2a\xe6\x76\x78\xef\xf9",
        // "CFStringCompare" / M(Xor1) / S(127) / L(15)
        "\x3c\x39\x2c\x0b\x0d\x16\x11\x18\x3c\x10\x12\x0f\x1e\x0d\x1a\x7f",
        // "CFBundleGetMainBundle" / M(Xor2) / S(31) / L(21)
        "\x4a\x4f\x4b\x7c\x67\x6d\x65\x6c\x4e\x6c\x7d\x44\x68\x60\x67\x4b\x7c\x67\x6d\x65\x6c\x09",
        // "%02x:" / M(Xor3) / S(141) / L(5)
        "\xb8\xad\xaf\xe5\xa7\x9d\x8d\xf6\x6a\x75\x26\xfb\x06\x01\xab\x43",
        // "" / M(None) / S(0) / L(0)
        "\x6e\x93\x6f\xba\xfa\x46\x8b\x83\x4d\xbe\x92\xf8\x85\xc7\xee\x8a\x5f\x62\xea\x05\x46\x2f\xe4\xb1\x3f\x67\x5e\x07\x25\x1f\x09\x37",
        // "objc_msgSend" / M(Xor2) / S(173) / L(12)
        "\xd2\xdf\xd7\xde\xe2\xd0\xce\xda\xee\xd8\xd3\xd9\xbd\x9a\x1e\x77",
        // "CFDictionaryCreateMutable" / M(Rot) / S(223) / L(25)
        "\x22\x25\x23\x48\x42\x53\x48\x4e\x4d\x40\x51\x58\x22\x51\x44\x40\x53\x44\x2c\x54\x53\x40\x41\x4b\x44\xdf\x26\x1d\xa0\x04\x38\x03\xe7\x9e",
        // "CFDateFormatterCreate" / M(Xor3) / S(148) / L(21)
        "\xe9\xec\xee\xcb\xde\xcf\xec\xc5\xd8\xc7\xcb\xde\xde\xcf\xd8\xe9\xd8\xcf\xcb\xde\xcf\xaa",
        // "" / M(None) / S(0) / L(0)
        "\xab\x32\x1e\x46\x38\xa8\xf9\xb3\x54\x79\xac\x79\x43\xa2\x49\x50\x3e\xe0\x8a\x0c\xf2\xfb\xc5\x93\x0c\x61\x16\x79\x36\x0b\x67\x48",
        // "CFDataCreateMutable" / M(Rot) / S(217) / L(19)
        "\x1c\x1f\x1d\x3a\x4d\x3a\x1c\x4b\x3e\x3a\x4d\x3e\x26\x4e\x4d\x3a\x3b\x45\x3e\xd9",
        // "ASN1_get_object" / M(Rot) / S(37) / L(15)
        "\x66\x78\x73\x56\x84\x8c\x8a\x99\x84\x94\x87\x8f\x8a\x88\x99\x25",
        // "dlopen" / M(Xor3) / S(221) / L(6)
        "\x89\x81\x82\x9d\x88\x83\xed\x14\x84\x29\x0e\x77\xdb\xd6\x4f\xcd",
        // "" / M(None) / S(0) / L(0)
        "\xec\x1a\x21\x3a\x75\x71\x64\xb5\x90\xf4\x2e\xdc\x67\xf0\x5a\xd4\xb3\xa3\xb3\x61\x74\x1f\x8e\xbe\x9b\x50\xf0\x8a\x45\xd2\xf4\x54",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(110) / L(39)
        "\xb1\xb4\xc2\xd7\xdb\xd3\xc8\xdd\xdc\xd3\xb1\xe0\xd3\xcf\xe2\xd3\xc5\xd7\xe2\xd6\xc2\xd7\xdb\xd3\xb7\xdc\xe2\xd3\xe0\xe4\xcf\xda\xb4\xe0\xdd\xdb\xb5\xbb\xc2\x6e\x58\xc1\x3b\x5b\x01\x09\x53\x7a",
        // "CC_SHA1" / M(Xor4) / S(73) / L(7)
        "\xd3\xd3\xcf\xc3\xd8\xd1\xa1\x90\xb6\xbc\x5a\xd0\x0d\x7c\xe6\x42",
        // "strncmp" / M(Rot) / S(70) / L(7)
        "\xb9\xba\xb8\xb4\xa9\xb3\xb6\x46\x56\x5e\x80\xa6\x85\xf7\x40\x0e",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor2) / S(2) / L(36)
        "\x64\x61\x65\x52\x49\x43\x4b\x42\x60\x42\x53\x71\x46\x4b\x52\x42\x61\x48\x55\x6e\x49\x41\x48\x63\x4e\x44\x53\x4e\x48\x49\x46\x55\x5e\x6c\x42\x5e\x27",
        // "" / M(None) / S(0) / L(0)
        "\x1a\xc3\xaa\xf2\xc0\x92\x0c\xff\x4e\x57\x13\x21\xf3\xfb\x01\x20\xf7\x37\x3f\x77\x5c\xb1\xda\x2e\xdd\x17\xfc\xcf\x62\xbb\xd6\xe4",
        // "CFArrayGetValueAtIndex" / M(Xor1) / S(164) / L(22)
        "\xe7\xe2\xe5\xd6\xd6\xc5\xdd\xe3\xc1\xd0\xf2\xc5\xc8\xd1\xc1\xe5\xd0\xed\xca\xc0\xc1\xdc\xa4",
        // "identifierForVendor" / M(Xor1) / S(203) / L(19)
        "\xa2\xaf\xae\xa5\xbf\xa2\xad\xa2\xae\xb9\x8d\xa4\xb9\x9d\xae\xa5\xaf\xa4\xb9\xcb",
        // "" / M(None) / S(0) / L(0)
        "\xbb\x17\x3e\xe2\xa3\x59\x13\xe8\xa4\x65\x89\x96\x0d\x37\xf5\x05\xa5\x8a\xcc\xf1\x6e\xcc\x46\xf0\x32\xf7\xbb\x62\x26\x9e\x54\x47",
        // "CFBundleGetIdentifier" / M(Xor1) / S(66) / L(21)
        "\x01\x04\x00\x37\x2c\x26\x2e\x27\x05\x27\x36\x0b\x26\x27\x2c\x36\x2b\x24\x2b\x27\x30\x42",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x5d\xc4\x3c\xf6\x99\x62\x32\x37\xa2\x1a\x96\x95\x8b\x44\x2b\x79\x74\xf3\xd1\xea\xea\xfe\xb5\xae\x16\xb7\xab\xe3\xc2\xb7\x82",
        // "kCFTypeArrayCallBacks" / M(Rot) / S(110) / L(21)
        "\xd9\xb1\xb4\xc2\xe7\xde\xd3\xaf\xe0\xe0\xcf\xe7\xb1\xcf\xda\xda\xb0\xcf\xd1\xd9\xe1\x6e",
        // "ASN1_get_object" / M(Xor2) / S(111) / L(15)
        "\x3e\x2c\x31\x4e\x20\x18\x1a\x0b\x20\x10\x1d\x15\x1a\x1c\x0b\x7f",
        // "SHA1_Final" / M(Xor4) / S(2) / L(10)
        "\x73\x68\x61\x11\x7f\x66\x49\x4e\x41\x4c\x20\x11\x72\xae\x3a\x93",
        // "" / M(None) / S(0) / L(0)
        "\x8a\xf4\xe1\x77\x9c\x96\x79\x52\x11\x3d\x4b\x5b\x44\xbb\x37\xbf\xf6\xb4\x98\xa1\x7e\xb1\x79\x4a\x11\xa6\x9f\x76\x80\x5b\xb2\xcb",
        // "" / M(None) / S(0) / L(0)
        "\x7d\x85\xcd\x00\xe8\xb5\xb2\xa2\x73\xa8\x4e\xcf\x70\x22\x07\xd0\x3f\x0e\x4e\x21\xb8\x86\xff\xd5\x19\xba\x0d\x94\xdd\x7d\x36\x5c",
        // "ASN1_INTEGER_free" / M(Xor3) / S(187) / L(17)
        "\x8c\x9e\x83\xfc\x92\x84\x83\x99\x88\x8a\x88\x9f\x92\xab\xbf\xa8\xa8\xcd",
        // "" / M(None) / S(0) / L(0)
        "\xe1\x6a\x17\x74\xf9\xc9\xa7\x62\x81\x0f\x83\x4f\xbe\x7c\xf9\xee\xb0\x92\xc4\x52\xc3\xa2\x6f\xf0\x27\x94\x96\x7c\x6e\x17\x3e\xab",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(249) / L(22)
        "\xad\xa8\xaf\x9c\x9c\x8f\x97\xa9\x8b\x9a\xb8\x8f\x82\x9b\x8b\xaf\x9a\xa7\x80\x8a\x8b\x96\xee",
        // "" / M(None) / S(0) / L(0)
        "\x65\x8c\x27\x67\x0c\x13\x42\x84\x3a\xc5\x8d\x89\x44\x1b\x67\xd2\x37\xff\xef\x47\x6e\xf7\x10\x64\x0a\x23\x8e\x9f\xf2\xaf\xc0\x82",
        // "CFRelease" / M(Xor1) / S(15) / L(9)
        "\x4c\x49\x5d\x6a\x63\x6a\x6e\x7c\x6a\x0f\x02\xac\xa1\x90\xe8\x62",
        // "strncmp" / M(Xor4) / S(15) / L(7)
        "\x83\x84\x82\x9e\x93\x9d\x80\xf0\x37\x00\x7c\x51\x86\xfb\x3d\x38",
        // "" / M(None) / S(0) / L(0)
        "\x2e\x49\x97\x52\xe9\x3f\x13\xb3\x8f\xef\xc5\x4a\xe6\x83\x9f\x05\xb0\x91\x05\xdf\xcb\x6f\xbb\xdc\xf7\x1e\xf0\x95\x0c\xdc\x7d\xf8",
        // "" / M(None) / S(0) / L(0)
        "\x49\x3e\x86\xe5\x49\x21\x97\xf7\xba\xf0\x0d\xdb\x18\x04\x28\x10\x07\xc4\xec\x47\xe0\x39\x62\x77\xa0\xd9\x00\x04\x73\x3f\x07\x40",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(176) / L(36)
        "\x33\x36\x32\x05\x1e\x14\x1c\x15\x37\x15\x04\x26\x11\x1c\x05\x15\x36\x1f\x02\x39\x1e\x16\x1f\x34\x19\x13\x04\x19\x1f\x1e\x11\x02\x09\x3b\x15\x09\x70",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(242) / L(40)
        "\x28\x23\x23\x57\x27\x54\x28\x28\x24\x55\x27\x2b\x25\x53\x22\x2a\x58\x58\x27\x2a\x56\x23\x26\x53\x57\x24\x24\x26\x27\x24\x56\x23\x2b\x2a\x56\x58\x28\x55\x28\x22\xf2\x83\x50\xf6\x32\x00\x32\x6b\xf3",
        // "CFArrayGetCount" / M(Rot) / S(203) / L(15)
        "\x0e\x11\x0c\x3d\x3d\x2c\x44\x12\x30\x3f\x0e\x3a\x40\x39\x3f\xcb",
        // "objc_msgSend" / M(Xor4) / S(150) / L(12)
        "\x0f\x02\x0a\x03\x3f\x0d\x13\x07\x33\x05\x0e\x04\x60\x17\x69\xeb",
        // "CFEqual" / M(Xor3) / S(107) / L(7)
        "\x38\x3d\x3e\x0a\x0e\x1a\x17\x7b\x07\xf0\xf9\x07\xd3\x0d\x09\x88",
        // "CFBundleGetMainBundle" / M(Xor1) / S(115) / L(21)
        "\x30\x35\x31\x06\x1d\x17\x1f\x16\x34\x16\x07\x3e\x12\x1a\x1d\x31\x06\x1d\x17\x1f\x16\x73",
        // "CFBundleIdentifier" / M(Xor4) / S(118) / L(18)
        "\x81\x84\x80\xb7\xac\xa6\xae\xa7\x8b\xa6\xa7\xac\xb6\xab\xa4\xab\xa7\xb0\xc2",
        // "CFBundleVersion" / M(Rot) / S(242) / L(15)
        "\x35\x38\x34\x67\x60\x56\x5e\x57\x48\x57\x64\x65\x5b\x61\x60\xf2",
        // "%02x:" / M(Xor1) / S(209) / L(5)
        "\xf4\xe1\xe3\xa9\xeb\xd1\xab\xdd\xf1\x9f\x56\xab\x7c\x19\x2d\x24",
        // "PKCS7_get0_signers" / M(Xor2) / S(44) / L(18)
        "\x6f\x74\x7c\x6c\x08\x60\x58\x5a\x4b\x0f\x60\x4c\x56\x58\x51\x5a\x4d\x4c\x3f",
        // "CFDateCreate" / M(Xor4) / S(213) / L(12)
        "\x13\x16\x14\x31\x24\x35\x13\x22\x35\x31\x24\x35\x50\x38\xcd\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x0e\xa4\x56\xbf\x92\x6d\x20\x72\xfc\x71\x6b\xa3\x1c\xc9\xc4\x82\x5c\x2f\x55\xfe\xff\xc4\xb8\x96\x59\xf2\x66\x38\xc4\x71\x3d\x7e",
        // "CC_SHA1" / M(Rot) / S(214) / L(7)
        "\x19\x19\x35\x29\x1e\x17\x07\xd6\x02\xd0\x2e\x13\x35\xef\xc6\x58",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(51) / L(14)
        "\x85\x87\x7f\x77\x92\x80\x74\x7c\x81\x92\x82\x81\x7f\x8c\x33\xa3",
        // "alloc" / M(Xor3) / S(43) / L(5)
        "\x5a\x57\x57\x54\x58\x3b\x98\x7f\x41\xed\x59\x50\x14\x83\x36\x5d",
        // "SKReceiptRefreshRequest" / M(Xor2) / S(137) / L(23)
        "\xfa\xe2\xfb\xcc\xca\xcc\xc0\xd9\xdd\xfb\xcc\xcf\xdb\xcc\xda\xc1\xfb\xcc\xd8\xdc\xcc\xda\xdd\xa9\xc1\xa4\x31\x97\x77\x06\x68\x2a",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor1) / S(50) / L(40)
        "\x04\x03\x03\x57\x07\x50\x04\x04\x00\x51\x07\x0b\x01\x53\x02\x0a\x54\x54\x07\x0a\x56\x03\x06\x53\x57\x00\x00\x06\x07\x00\x56\x03\x0b\x0a\x56\x54\x04\x51\x04\x02\x32\xc0\xb9\x9b\x55\x1d\xe6\x97\xe8",
        // "CFStringCompare" / M(Xor3) / S(217) / L(15)
        "\xaa\xaf\xba\x9d\x9b\x80\x87\x8e\xaa\x86\x84\x99\x88\x9b\x8c\xe9",
        // "/usr/lib/libobjc.dylib" / M(Xor2) / S(173) / L(22)
        "\x95\xcf\xc9\xc8\x95\xd6\xd3\xd8\x95\xd6\xd3\xd8\xd5\xd8\xd0\xd9\x94\xde\xc3\xd6\xd3\xd8\xba",
        // "sk_value" / M(Xor1) / S(134) / L(8)
        "\xf5\xed\xd9\xf0\xe7\xea\xf3\xe3\x86\x19\xdb\xf0\xc5\x9c\xb9\xcd",
        // "getUUIDBytes:" / M(Xor4) / S(215) / L(13)
        "\x17\x15\x04\x25\x25\x39\x34\x32\x09\x04\x15\x03\x4a\x70\x38\x1b",
        // "" / M(None) / S(0) / L(0)
        "\xf7\xcc\x61\x01\x7b\xd1\xe8\x30\xe8\xfd\x27\x3a\x9d\x52\x39\x56\x9f\x4b\x92\xb3\x59\x7e\x97\xe1\xbc\xf8\xed\xed\x9f\xa3\x8d\xcd",
        // "identifierForVendor" / M(Xor1) / S(255) / L(19)
        "\x96\x9b\x9a\x91\x8b\x96\x99\x96\x9a\x8d\xb9\x90\x8d\xa9\x9a\x91\x9b\x90\x8d\xff",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x82\x85\x9f\xac\x93\x2b\x31\x69\x77\x7e\xc8\x10\x75\x5f\x22\x0b\xb4\x51\x0a\x12\x0f\xe9\x98\xfa\xe0\xb6\x18\x83\x43\x9f\xdb",
        // "" / M(None) / S(0) / L(0)
        "\xa8\xcd\x71\x32\xd8\xcf\x58\x81\x55\xa7\x23\xbe\x24\x05\x2b\x09\xdd\x26\x5f\xdc\x05\x7a\x6b\xa8\x6b\x1b\x52\x25\xba\xae\xe4\xba",
        // "mainBundle" / M(Xor1) / S(193) / L(10)
        "\xac\xa0\xa8\xaf\x83\xb4\xaf\xa5\xad\xa4\xc1\xb8\x0e\xc1\xa5\x90",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(108) / L(26)
        "\x0c\x09\x1d\x2a\x2e\x2b\x1c\x3b\x3d\x2a\x2e\x22\x0c\x3d\x2a\x2e\x3b\x2a\x18\x26\x3b\x27\x09\x26\x23\x2a\x4f\x73\x83\x54\x2e\x8f\xe8\x3b\x61",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(242) / L(59)
        "\x80\x87\x8c\x87\xf3\x8c\x83\xf4\x8c\x80\x80\x8c\x84\xf5\x8c\x83\x8f\x8c\x85\xf7\x8c\x86\x8e\x8c\xf0\xf0\x8c\x83\x8e\x8c\xf2\x87\x8c\x82\xf7\x8c\xf3\x84\x8c\x84\x82\x8c\x83\x84\x8c\xf2\x87\x8c\x8f\x8e\x8c\xf2\xf0\x8c\x80\xf5\x8c\x80\x86\xb6\x88\x51\xa8\xe0\x11\xa1\xb8\x78",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(218) / L(32)
        "\x82\x82\x82\x82\xdc\xd6\xdc\xb6\xb6\xdc\xd6\xdc\x9f\x9f\xdc\xaf\xdc\xb3\xb3\xdc\xc1\xdc\x96\x96\xdc\xc1\xdc\x88\x88\xdc\xa1\xdc\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x77\xd4\xd3\xec\xf1\x72\x63\xbf\x06\x3a\xf8\xda\x0e\xe6\x82\x6a\x1b\xa9\x39\x8d\x40\xc1\x1e\x0a\xb7\xae\x9c\x9e\x87\xf6\x40\x68",
        // "strlen" / M(Xor3) / S(109) / L(6)
        "\x0e\x09\x0f\x11\x18\x13\x7d\xef\x2f\x70\xd9\x2b\x0f\x59\xbb\xc5",
        // "CFDictionaryCreateMutable" / M(Xor1) / S(25) / L(25)
        "\x5a\x5f\x5d\x70\x7a\x6d\x70\x76\x77\x78\x6b\x60\x5a\x6b\x7c\x78\x6d\x7c\x54\x6c\x6d\x78\x7b\x75\x7c\x19\xd0\x26\x1a\x90\x9d\x6b\x5f\x6e",
        // "setDelegate:" / M(Xor2) / S(38) / L(12)
        "\x45\x53\x42\x72\x53\x5a\x53\x51\x57\x42\x53\x0c\x36\xbf\xd8\xad",
        // "ASN1_get_object" / M(Xor2) / S(167) / L(15)
        "\xf6\xe4\xf9\x86\xe8\xd0\xd2\xc3\xe8\xd8\xd5\xdd\xd2\xd4\xc3\xb7",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor3) / S(42) / L(66)
        "\x42\x3e\x14\x1e\x19\x08\x00\x42\x21\x04\x0f\x1f\x0c\x1f\x14\x42\x2b\x1f\x0c\x00\x08\x1a\x02\x1f\x06\x1e\x42\x2e\x02\x1f\x08\x2b\x02\x18\x03\x09\x0c\x19\x04\x02\x03\x43\x0b\x1f\x0c\x00\x08\x1a\x02\x1f\x06\x42\x2e\x02\x1f\x08\x2b\x02\x18\x03\x09\x0c\x19\x04\x02\x03\x6d",
        // "objc_msgSend" / M(Rot) / S(87) / L(12)
        "\xc6\xb9\xc1\xba\xb6\xc4\xca\xbe\xaa\xbc\xc5\xbb\x57\xba\x22\x12",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(126) / L(40)
        "\xe1\xed\xeb\xac\xe7\xec\xf2\xdf\xec\xe5\xe7\xe0\xea\xe3\xf1\xed\xe4\xf2\xf5\xdf\xf0\xe3\xac\xeb\xe3\xec\xf1\xea\xdf\xe1\xf0\xed\xf1\xf1\xe3\xf1\xf2\xdf\xf2\xf1\x7e\x16\xb8\x66\xc5\x43\x5f\x2c\x1b",
        // "" / M(None) / S(0) / L(0)
        "\xd2\x29\xc1\xf3\xe1\xea\x17\x3e\x5c\x6e\x9d\x4a\x45\x86\x01\xcc\xe4\x51\xc2\xf2\xd0\x52\x0c\x66\xee\x5f\x0b\xed\x41\xbb\xdc\xbb",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(240) / L(24)
        "\x5b\x33\x36\x34\x51\x64\x55\x36\x5f\x62\x5d\x51\x64\x64\x55\x62\x44\x59\x5d\x55\x4a\x5f\x5e\x55\xf0\x78\xe9\x86\x85\x80\x4f\x00\x43",
        // "BIO_write" / M(Xor2) / S(90) / L(9)
        "\x08\x03\x05\x15\x3d\x38\x23\x3e\x2f\x4a\x5c\x0d\x46\xfa\x47\x35",
        // "objc_getClass" / M(Rot) / S(141) / L(13)
        "\xfc\xef\xf7\xf0\xec\xf4\xf2\x01\xd0\xf9\xee\x00\x00\x8d\x6e\xa1",
        // "CFDictionaryAddValue" / M(Xor3) / S(16) / L(20)
        "\x66\x63\x61\x4c\x46\x51\x4c\x4a\x4b\x44\x57\x5c\x64\x41\x41\x73\x44\x49\x50\x40\x25",
        // "CFDataGetBytePtr" / M(Rot) / S(161) / L(16)
        "\xe4\xe7\xe5\x02\x15\x02\xe8\x06\x15\xe3\x1a\x15\x06\xf1\x15\x13\xa1",
        // "sel_registerName" / M(Xor2) / S(207) / L(16)
        "\xad\xbb\xb2\x81\xac\xbb\xb9\xb7\xad\xaa\xbb\xac\x90\xbf\xb3\xbb\xde",
        // "SHA1_Init" / M(Xor4) / S(95) / L(9)
        "\xa3\xb8\xb1\xc1\xaf\xb9\x9e\x99\x84\xf0\x44\x95\xe5\x6c\x80\xf2",
        // "CFDictionaryGetValue" / M(Xor2) / S(49) / L(20)
        "\x67\x62\x60\x4d\x47\x50\x4d\x4b\x4a\x45\x56\x5d\x63\x41\x50\x72\x45\x48\x51\x41\x24",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(249) / L(24)
        "\x71\x59\x5c\x5e\x7b\x6e\x7f\x5c\x75\x68\x77\x7b\x6e\x6e\x7f\x68\x4e\x73\x77\x7f\x40\x75\x74\x7f\x1a\x67\x0a\xa2\xb6\x94\xb1\x91\x29",
        // "" / M(None) / S(0) / L(0)
        "\x7e\xe9\x9b\x99\x9b\xaa\xfc\x0d\x62\xe2\x22\xe7\x4e\xdd\x42\x67\x51\xca\x3a\xb8\xcf\x12\x88\x58\x2b\xac\xdd\xcc\x13\xc9\xdd\xfb",
        // "CC_SHA1_Update" / M(Xor1) / S(119) / L(14)
        "\x34\x34\x28\x24\x3f\x36\x46\x28\x22\x07\x13\x16\x03\x12\x77\x25",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(151) / L(25)
        "\xed\x80\x85\x8c\xea\xfb\xf4\xf8\xf0\xea\xd2\xd0\xc1\xea\xc1\xd0\xcd\xc1\xea\xd7\xcc\xea\xfb\xfc\xf1\xb5\xdc\x7d\x25\x1f\x62\x11\xf1\x1e",
        // "CFDataGetLength" / M(Rot) / S(37) / L(15)
        "\x68\x6b\x69\x86\x99\x86\x6c\x8a\x99\x71\x8a\x93\x8c\x99\x8d\x25",
        // "" / M(None) / S(0) / L(0)
        "\xeb\x3e\xe7\x78\x9f\x82\xb2\x2b\x47\x30\x8f\xa3\x42\xc2\x09\xfc\xfd\x42\xdf\xe0\x72\x92\x13\xcd\x5f\x4f\x95\x7f\x1b\x36\x63\xc6",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x3f\xeb\x4f\x7b\x4e\x3f\x96\x50\x8c\xf1\x21\x13\xd7\xba\x99\xfe\x24\xc0\x0b\x39\x23\x28\x47\x7a\xcb\x20\xb5\xf7\xee\x18\x8b",
        // "SKReceiptRefreshRequest" / M(Xor1) / S(187) / L(23)
        "\xe8\xf0\xe9\xde\xd8\xde\xd2\xcb\xcf\xe9\xde\xdd\xc9\xde\xc8\xd3\xe9\xde\xca\xce\xde\xc8\xcf\xbb\x6f\x48\x3e\xc6\xcc\x4d\xac\x6d",
        // "SHA1" / M(Xor3) / S(92) / L(4)
        "\x3f\x24\x2d\x5d\x6c\x17\x61\x2d\x76\xc3\x6c\x40\x8e\xf3\x0d\xde",
        // "CFNumberCreate" / M(Xor2) / S(29) / L(14)
        "\x4e\x4b\x43\x78\x60\x6f\x68\x7f\x4e\x7f\x68\x6c\x79\x68\x0d\x11",
        // "" / M(None) / S(0) / L(0)
        "\x39\x8b\x80\x74\xa8\xff\x40\x7f\x23\x72\x64\x5a\x78\x2b\xf2\xbd\xff\xa8\x1c\xba\x62\x66\xe7\x3f\x1a\x11\x9f\x3a\x48\xf4\xbb\x26",
        // "BIO_write" / M(Rot) / S(126) / L(9)
        "\xc0\xc7\xcd\xdd\xf5\xf0\xe7\xf2\xe3\x7e\xb6\x74\xcd\xf2\xc9\xa8",
        // "" / M(None) / S(0) / L(0)
        "\x53\x41\x62\xa5\x15\x19\x56\x0e\x62\x11\x90\x90\xae\x24\xcf\xaf\x87\x30\xff\xa8\x74\xeb\x0a\xeb\x66\x34\x3d\xca\x7d\x5b\x08\x00",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(68) / L(35)
        "\x07\x02\x00\x25\x30\x21\x02\x2b\x36\x29\x25\x30\x30\x21\x36\x07\x36\x21\x25\x30\x21\x00\x25\x30\x21\x02\x36\x2b\x29\x17\x30\x36\x2d\x2a\x23\x44",
        // "BIO_s_mem" / M(Xor2) / S(5) / L(9)
        "\x57\x5c\x5a\x4a\x66\x4a\x78\x70\x78\x15\x6c\x73\x9b\xc9\x4b\xf1",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(29) / L(19)
        "\x1c\x71\x74\x7d\x1b\x23\x21\x30\x1b\x21\x3c\x30\x1b\x26\x3d\x1b\x0b\x06\x0e\x44",
        // "" / M(None) / S(0) / L(0)
        "\x8a\xaa\xfc\x0c\xd5\x92\xc0\x92\xed\xfc\xa5\x42\x7f\x8b\x40\x1e\x69\xc4\x33\xa7\xd1\xf4\x80\x61\x4e\x57\x8c\x45\xb8\x25\xbb\xbf",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(35) / L(22)
        "\x5f\x77\x72\x76\x41\x5a\x50\x58\x51\x7d\x50\x51\x5a\x40\x5d\x52\x5d\x51\x46\x7f\x51\x4d\x34",
        // "CFDataCreate" / M(Xor3) / S(95) / L(12)
        "\x2c\x29\x2b\x0e\x1b\x0e\x2c\x1d\x0a\x0e\x1b\x0a\x6f\x2c\x94\x3d",
        // "X509_STORE_free" / M(Xor3) / S(92) / L(15)
        "\x34\x59\x5c\x55\x33\x3f\x38\x23\x3e\x29\x33\x0a\x1e\x09\x09\x6c",
        // "start" / M(Xor1) / S(206) / L(5)
        "\xbd\xba\xaf\xbc\xba\xce\x87\x7f\x79\x66\x3b\x08\x6d\x73\xaf\x20",
        // "EVP_MD_CTX_init" / M(Xor2) / S(16) / L(15)
        "\x45\x56\x50\x5f\x4d\x44\x5f\x43\x54\x58\x5f\x69\x6e\x69\x74\x00",
        // "" / M(None) / S(0) / L(0)
        "\x61\xb3\xec\x34\xc4\x01\x9d\xe7\xd4\x85\xae\xac\xf1\xbc\xf3\x70\x69\xb2\x38\xa5\x0e\xba\x7b\x0e\x40\xf5\xd2\x86\x1b\x7a\x3a\xba",
        // "%02X:" / M(Rot) / S(151) / L(5)
        "\xbc\xc7\xc9\xef\xd1\x97\x07\xc8\x8a\x6d\x2a\xd0\x64\xaf\x04\x13",
        // "CFStringCompare" / M(Rot) / S(103) / L(15)
        "\xaa\xad\xba\xdb\xd9\xd0\xd5\xce\xaa\xd6\xd4\xd7\xc8\xd9\xcc\x67",
        // "d2i_PKCS7_bio" / M(Xor3) / S(17) / L(13)
        "\x45\x13\x48\x7e\x71\x6a\x62\x72\x16\x7e\x43\x48\x4e\x21\xc5\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x46\x1b\x81\xe1\xfa\x48\xee\x9b\x8e\xb1\xa0\xc4\xcd\x15\x25\xb1\x22\xaf\xf6\x8c\xf7\x48\x88\x9a\x51\xb5\x32\xa6\x9e\x88\x81\xb1",
        // "longjmp" / M(Xor4) / S(252) / L(7)
        "\xac\xaf\xae\xa7\xaa\xad\xb0\xc0\x3c\x03\x58\xe3\xed\x46\x2a\xec",
        // "." / M(Rot) / S(246) / L(1)
        "\x24\xf6\x25\x9b\x40\x46\xc6\x63\x7d\x05\xbc\xad\xa5\xb9\x85\xb3",
        // "d2i_X509_bio" / M(Xor4) / S(213) / L(12)
        "\x34\x62\x39\x0f\x08\x65\x60\x69\x0f\x32\x39\x3f\x50\x76\x46\x8e",
        // "" / M(None) / S(0) / L(0)
        "\x75\xba\x4d\xac\x05\x63\xd9\x45\xf5\xa0\x90\xde\x99\x4e\xc6\x07\xc7\xb2\xf3\x24\x60\xe5\xa0\xd3\x29\x30\xbd\x5a\xc7\x18\xd8\x80",
        // "" / M(None) / S(0) / L(0)
        "\x8c\x3a\xd6\xe6\x85\xbe\x53\xb2\xa1\x59\xe5\x40\x08\x62\x98\x40\x6b\xb9\x2e\xf4\xbd\x3b\xd8\xe9\x6a\x31\x42\x28\x3c\xfb\x48\xc0",
        // "CFArrayCreateMutable" / M(Rot) / S(15) / L(20)
        "\x52\x55\x50\x81\x81\x70\x88\x52\x81\x74\x70\x83\x74\x5c\x84\x83\x70\x71\x7b\x74\x0f",
        // "PKCS7_verify" / M(Xor1) / S(35) / L(12)
        "\x73\x68\x60\x70\x14\x7c\x55\x46\x51\x4a\x45\x5a\x23\x05\xae\x19",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(237) / L(59)
        "\xdb\xdc\xd7\xdc\x88\xd7\xd8\x8f\xd7\xdb\xdb\xd7\xdf\x8e\xd7\xd8\xd4\xd7\xde\x8c\xd7\xdd\xd5\xd7\x8b\x8b\xd7\xd8\xd5\xd7\x89\xdc\xd7\xd9\x8c\xd7\x88\xdf\xd7\xdf\xd9\xd7\xd8\xdf\xd7\x89\xdc\xd7\xd4\xd5\xd7\x89\x8b\xd7\xdb\x8e\xd7\xdb\xdd\xed\x47\x27\x71\x38\x79\xe3\x2e\x56",
        // "CFDataGetBytePtr" / M(Rot) / S(68) / L(16)
        "\x87\x8a\x88\xa5\xb8\xa5\x8b\xa9\xb8\x86\xbd\xb8\xa9\x94\xb8\xb6\x44",
        // "CFNumberCreate" / M(Xor2) / S(114) / L(14)
        "\x21\x24\x2c\x17\x0f\x00\x07\x10\x21\x10\x07\x03\x16\x07\x62\x2d",
        // "" / M(None) / S(0) / L(0)
        "\xda\x96\x29\x5e\xf2\x00\xf9\x78\x03\xe1\x55\x2b\xfa\xe1\x3e\xa4\xfe\x35\x48\x85\x52\xba\xa7\xa3\x33\x10\xf3\x20\x5e\xf2\x50\x4e",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(231) / L(23)
        "\xa8\x97\x82\x89\xb4\xb4\xab\xb8\x86\x83\x83\xb8\x86\x8b\x8b\xb8\x83\x8e\x80\x82\x94\x93\x94\xe7\x8d\xdc\x96\x34\x41\x6b\x6a\x90",
        // "SHA1_Final" / M(Xor3) / S(4) / L(10)
        "\x47\x5c\x55\x25\x4b\x52\x7d\x7a\x75\x78\x14\x7f\xf0\x7a\x0a\x3a",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(69) / L(24)
        "\x06\x03\x01\x24\x31\x20\x03\x2a\x37\x28\x24\x31\x31\x20\x37\x16\x20\x31\x03\x2a\x37\x28\x24\x31\x45\xf9\xa4\x8a\x62\xaf\xa5\x5b\x98",
        // "" / M(None) / S(0) / L(0)
        "\xc2\x6c\x81\xea\x07\x45\x70\xbe\x2c\xe6\xba\x4d\x7a\x4d\x54\x5e\x9a\x27\xb3\x52\xd2\x54\xd5\x60\x69\x83\x97\x76\x80\x49\x6e\x93",
        // "" / M(None) / S(0) / L(0)
        "\x2a\xd2\xba\x79\x8a\x67\x94\x41\x85\xee\xe9\xaa\xcf\xc9\x38\x46\x9f\x00\x11\x1e\x3e\xeb\x71\xd9\x46\xfe\xa4\x67\xfa\xb0\xfe\xab",
        // "CFDateFormatterCreate" / M(Xor4) / S(169) / L(21)
        "\xc5\xc0\xc2\xe7\xf2\xe3\xc0\xe9\xf4\xeb\xe7\xf2\xf2\xe3\xf4\xc5\xf4\xe3\xe7\xf2\xe3\x86",
        // "Apple Root CA" / M(Xor1) / S(73) / L(13)
        "\x08\x39\x39\x25\x2c\x69\x1b\x26\x26\x3d\x69\x0a\x08\x49\xe1\xfe",
        // "" / M(None) / S(0) / L(0)
        "\xcc\xaa\xa9\xf6\xc9\x7e\x94\x7a\x58\x89\xaf\xbe\x54\x8a\x80\xef\x14\x3a\x71\x4d\x40\x00\x2d\x9a\x9b\x21\x85\x63\xe7\x40\x62\x2d",
        // "" / M(None) / S(0) / L(0)
        "\x36\x7a\xda\x75\x51\x42\xd9\x94\xfc\x9f\x03\x03\x5a\x23\x99\xf6\x8c\xb8\x08\xcd\x6b\x09\x4b\x8b\x35\xa3\x71\x02\xe1\xf1\x9f\x95",
        // "init" / M(Xor1) / S(246) / L(4)
        "\x9f\x98\x9f\x82\xf6\xbf\x5b\xb7\x57\x40\x2e\x61\x11\x71\x3a\xc6",
        // "EVP_MD_CTX_init" / M(Xor2) / S(65) / L(15)
        "\x14\x07\x01\x0e\x1c\x15\x0e\x12\x05\x09\x0e\x38\x3f\x38\x25\x51",
        // "" / M(None) / S(0) / L(0)
        "\x1d\xe9\x76\xef\x26\xfd\x1d\xdd\x33\x4e\x20\x94\x0f\x05\x1b\xa1\x21\x89\x18\x61\x0a\x98\x7a\x37\xe1\x29\x86\x4d\x2f\x1b\x92\xc8",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(166) / L(39)
        "\x63\x66\x74\x49\x4d\x45\x7a\x4f\x4e\x45\x63\x52\x45\x41\x54\x45\x77\x49\x54\x48\x74\x49\x4d\x45\x69\x4e\x54\x45\x52\x56\x41\x4c\x66\x52\x4f\x4d\x67\x6d\x74\x20\x52\x77\x3a\xa8\xb3\xf9\xd2\x16",
        // "CFDataAppendBytes" / M(Rot) / S(8) / L(17)
        "\x4b\x4e\x4c\x69\x7c\x69\x49\x78\x78\x6d\x76\x6c\x4a\x81\x7c\x6d\x7b\x08",
        // "" / M(None) / S(0) / L(0)
        "\x7c\x82\x89\x54\x8b\x66\x39\xa4\x7e\x39\x3f\xe2\xb1\x99\x5e\x06\x9f\xaa\xea\xf1\xed\xf1\x36\xff\x27\x61\x68\x51\xae\x18\x18\x7c",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor3) / S(34) / L(40)
        "\x65\x62\x62\x16\x66\x11\x65\x65\x61\x10\x66\x6a\x60\x12\x63\x6b\x15\x15\x66\x6b\x17\x62\x67\x12\x16\x61\x61\x67\x66\x61\x17\x62\x6a\x6b\x17\x15\x65\x10\x65\x63\x53\xab\x99\x23\x7d\xe2\x73\xba\x0b",
        // "X509_STORE_new" / M(Xor1) / S(13) / L(14)
        "\x55\x38\x3d\x34\x52\x5e\x59\x42\x5f\x48\x52\x63\x68\x7a\x0d\xcf",
        // "RTLD_MAIN_ONLY" / M(Rot) / S(241) / L(14)
        "\x43\x45\x3d\x35\x50\x3e\x32\x3a\x3f\x50\x40\x3f\x3d\x4a\xf1\xab",
        // "" / M(None) / S(0) / L(0)
        "\xc2\xa6\x19\xbe\x92\xe4\xeb\xda\x44\x4e\xef\x6d\x58\xa9\x92\x5c\x0f\x3a\x78\x32\xd7\xd0\x34\x0f\x27\x42\x8a\xaf\x31\x2b\x49\x4e",
        // "CFDataCreate" / M(Rot) / S(160) / L(12)
        "\xe3\xe6\xe4\x01\x14\x01\xe3\x12\x05\x01\x14\x05\xa0\xd4\x5a\x2e",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(152) / L(25)
        "\x01\x1e\x02\x1e\x08\x04\x00\x1e\x01\x01\x03\x06\x03\x05\x1e\x01\x00\x00\x1e\x06\x1e\x01\x01\x1e\x01\x30\xb1\x0d\xd0\xe8\x1b\xeb\x88\x5a",
        // "setjmp" / M(Xor2) / S(70) / L(6)
        "\x25\x33\x22\x3c\x3b\x26\x56\x0e\xcb\xb7\xc4\xa5\xce\xed\x98\x32",
        // "NSBundle" / M(Xor3) / S(53) / L(8)
        "\x0b\x16\x07\x30\x2b\x21\x29\x20\x45\x22\xd8\x64\x50\x3f\x83\x1e",
        // "CFDateCompare" / M(Xor3) / S(247) / L(13)
        "\x44\x41\x43\x66\x73\x62\x44\x68\x6a\x77\x66\x75\x62\x07\x8d\x42",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(132) / L(24)
        "\xc7\xc2\xc5\xe6\xf7\xeb\xe8\xf1\xf0\xe1\xd0\xed\xe9\xe1\xc3\xe1\xf0\xc7\xf1\xf6\xf6\xe1\xea\xf0\x84\x01\x82\x8c\x08\x80\x76\x84\xc4",
        // "SHA1_Update" / M(Xor2) / S(207) / L(11)
        "\x8c\x97\x9e\xee\x80\x8a\xaf\xbb\xbe\xab\xba\xdf\xf6\x85\xf8\x76",
        // "currentDevice" / M(Xor2) / S(139) / L(13)
        "\xf8\xee\xe9\xe9\xfe\xf5\xef\xdf\xfe\xed\xf2\xf8\xfe\x9b\x84\xb6",
        // "PKCS7_free" / M(Xor4) / S(171) / L(10)
        "\xe0\xfb\xf3\xe3\x87\xef\xd6\xc2\xd5\xd5\xb0\x60\x84\x11\x70\x1d",
        // "EVP_get_digestbyname" / M(Xor4) / S(170) / L(20)
        "\xb7\xa4\xa2\xad\x95\x97\x86\xad\x96\x9b\x95\x97\x81\x86\x90\x8b\x9c\x93\x9f\x97\xf2",
        // "CFBundleIdentifier" / M(Rot) / S(8) / L(18)
        "\x4b\x4e\x4a\x7d\x76\x6c\x74\x6d\x51\x6c\x6d\x76\x7c\x71\x6e\x71\x6d\x7a\x08",
        // "CC_SHA1_Init" / M(Xor3) / S(2) / L(12)
        "\x51\x51\x4d\x41\x5a\x53\x23\x4d\x5b\x7c\x7b\x66\x12\x25\x7e\xc3",
        // "" / M(None) / S(0) / L(0)
        "\xe6\xed\xb3\x8d\x8d\xe2\x04\x54\xb0\x5b\x1f\xf8\x77\xb8\x9d\xbf\xe9\x49\x03\xb4\x14\xfd\x01\xa1\x15\x59\x45\x97\xf8\x52\x0f\x7a",
        // "CFDictionarySetValue" / M(Xor2) / S(184) / L(20)
        "\xee\xeb\xe9\xc4\xce\xd9\xc4\xc2\xc3\xcc\xdf\xd4\xfe\xc8\xd9\xfb\xcc\xc1\xd8\xc8\xad",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(203) / L(32)
        "\x93\x93\x93\x93\xcd\xc7\xcd\xa7\xa7\xcd\xc7\xcd\x8e\x8e\xcd\xbe\xcd\xa2\xa2\xcd\xd0\xcd\x87\x87\xcd\xd0\xcd\x99\x99\xcd\xb0\xcd\xea",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(27) / L(35)
        "\x7c\x79\x7b\x5e\x4b\x5a\x79\x50\x4d\x52\x5e\x4b\x4b\x5a\x4d\x7c\x4d\x5a\x5e\x4b\x5a\x7b\x5e\x4b\x5a\x79\x4d\x50\x52\x6c\x4b\x4d\x56\x51\x58\x3f",
        // "currentDevice" / M(Xor1) / S(0) / L(13)
        "\x63\x75\x72\x72\x65\x6e\x74\x44\x65\x76\x69\x63\x65\x00\x4f\x07",
        // "" / M(None) / S(0) / L(0)
        "\xff\x33\x71\xdf\xba\xae\x28\x59\xc3\x8f\x7a\xa2\x94\x91\x70\xd6\x5f\x17\x3e\x1d\x07\x2a\x1e\xd7\x8e\xde\x63\x38\x6d\x70\xfa\xeb",
        // "CFStringCreateWithBytes" / M(Xor3) / S(225) / L(23)
        "\x42\x47\x52\x75\x73\x68\x6f\x66\x42\x73\x64\x60\x75\x64\x56\x68\x75\x69\x43\x78\x75\x64\x72\x01\xe4\x9a\x87\x6e\x7e\xbf\xb7\x0d",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(13) / L(26)
        "\x84\x81\x95\xa2\xa6\xa3\x94\xb3\xb5\xa2\xa6\xaa\x84\xb5\xa2\xa6\xb3\xa2\x90\xae\xb3\xaf\x81\xae\xab\xa2\xc7\xf9\x0b\x3c\x98\x2a\x80\xc6\x88",
        // "EVP_DigestUpdate" / M(Xor2) / S(31) / L(16)
        "\x4b\x58\x5e\x51\x4a\x67\x69\x6b\x7d\x7a\x5b\x7e\x6a\x6f\x7a\x6b\x0e",
        // "CFReadStreamRead" / M(Xor2) / S(171) / L(16)
        "\xf9\xfc\xe8\xdf\xdb\xde\xe9\xce\xc8\xdf\xdb\xd7\xe8\xdf\xdb\xde\xba",
        // "%02X" / M(Xor4) / S(112) / L(4)
        "\x25\x30\x32\x58\x00\xef\x09\x78\x1d\x30\xd1\xa5\x83\x19\xd9\xb6",
        // "PKCS7_get0_signers" / M(Rot) / S(207) / L(18)
        "\x1f\x1a\x12\x22\x06\x2e\x36\x34\x43\xff\x2e\x42\x38\x36\x3d\x34\x41\x42\xcf",
        // "1" / M(Xor1) / S(102) / L(1)
        "\x57\x66\x5a\x4b\x3b\xf7\x65\x83\xb6\xff\x2f\x98\xfd\xd3\x98\x06",
        // "%02X" / M(Xor3) / S(186) / L(4)
        "\xef\xfa\xf8\x92\xca\x05\x5f\xb6\x5b\xd9\x45\xb5\xbb\x38\x0c\xf0",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xdd\x43\x97\x2f\xe0\x41\xae\x5a\xec\xc0\xf3\x73\xf7\x85\xbe\x13\xd4\x63\x70\xea\x30\x00\xd8\x8d\x77\x6d\xce\xd4\x9e\x9d\x4b",
        // "CFBundleVersion" / M(Xor2) / S(17) / L(15)
        "\x42\x47\x43\x74\x6f\x65\x6d\x64\x57\x64\x73\x72\x68\x6e\x6f\x01",
        // "1.2.840.113635.100.6.11.1" / M(Xor4) / S(39) / L(25)
        "\x1f\x00\x1c\x00\x16\x1a\x1e\x00\x1f\x1f\x1d\x18\x1d\x1b\x00\x1f\x1e\x1e\x00\x18\x00\x1f\x1f\x00\x1f\x2e\xc5\x51\x4b\x4e\x50\xa7\x57\xbb",
        // "CFDictionaryAddValue" / M(Xor4) / S(79) / L(20)
        "\x38\x3d\x3f\x12\x18\x0f\x12\x14\x15\x1a\x09\x02\x3a\x1f\x1f\x2d\x1a\x17\x0e\x1e\x7b",
        // "CC_SHA1_Init" / M(Xor2) / S(135) / L(12)
        "\xd4\xd4\xc8\xc4\xdf\xd6\xa6\xc8\xde\xf9\xfe\xe3\x97\x79\x87\x34",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(102) / L(22)
        "\x52\x08\x0e\x0f\x52\x11\x14\x1f\x52\x11\x14\x1f\x12\x1f\x17\x1e\x53\x19\x04\x11\x14\x1f\x7d",
        // "" / M(None) / S(0) / L(0)
        "\xe6\xc3\x13\x50\xff\x87\xf8\x73\xb7\x37\x0a\xbd\x72\x41\xe2\x8c\x46\x3e\x97\x46\xc1\x22\xe9\xef\xff\xa1\xc6\x25\xf7\x06\x50\x3d",
        // "ASN1_INTEGER_get" / M(Xor4) / S(205) / L(16)
        "\xdc\xce\xd3\xac\xc2\xd4\xd3\xc9\xd8\xda\xd8\xcf\xc2\xfa\xf8\xe9\x9d",
        // "ASN1_OBJECT_free" / M(Xor2) / S(120) / L(16)
        "\x28\x3a\x27\x58\x36\x26\x2b\x23\x2c\x2a\x3d\x36\x0f\x1b\x0c\x0c\x69",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor2) / S(162) / L(40)
        "\xf0\xfc\xfe\xbd\xfa\xfd\xe7\xf2\xfd\xf4\xfa\xf1\xff\xf6\xe0\xfc\xf5\xe7\xe4\xf2\xe1\xf6\xbd\xfe\xf6\xfd\xe0\xff\xf2\xf0\xe1\xfc\xe0\xe0\xf6\xe0\xe7\xf2\xe7\xe0\x93\x53\x43\x81\x17\x73\x8b\x29\x71",
        // "UIDevice" / M(Rot) / S(198) / L(8)
        "\x1b\x0f\x0a\x2b\x3c\x2f\x29\x2b\xc6\x29\x45\x40\x4b\xc7\x34\x16",
        // "CFNumberCreate" / M(Xor3) / S(39) / L(14)
        "\x74\x71\x79\x42\x5a\x55\x52\x45\x74\x45\x52\x56\x43\x52\x37\xbe",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor4) / S(103) / L(31)
        "\x8b\xa3\xa6\xb4\x99\x90\x85\xa4\x89\x83\x94\x89\x8f\x8e\x81\x92\x99\xb6\x81\x8c\x95\x85\xa3\x81\x8c\x8c\xa2\x81\x83\x8b\x93\xe0",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor4) / S(149) / L(39)
        "\xb3\xb6\xa4\x99\x9d\x95\xaa\x9f\x9e\x95\xb3\x82\x95\x91\x84\x95\xa7\x99\x84\x98\xa4\x99\x9d\x95\xb9\x9e\x84\x95\x82\x86\x91\x9c\xb6\x82\x9f\x9d\xb7\xbd\xa4\xf0\x04\x8d\x44\x5f\xbd\xae\x16\x40",
        // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(50) / L(24)
        "\x10\x15\x12\x31\x20\x3c\x3f\x26\x27\x36\x07\x3a\x3e\x36\x14\x36\x27\x10\x26\x21\x21\x36\x3d\x27\x53\x5b\xc0\x6a\x48\x7b\x8a\xd9\x63",
        // "CFDataGetBytePtr" / M(Xor4) / S(141) / L(16)
        "\x1e\x1b\x19\x3c\x29\x3c\x1a\x38\x29\x1f\x24\x29\x38\x0d\x29\x2f\x5d",
        // "X509_free" / M(Xor2) / S(19) / L(9)
        "\x5b\x36\x33\x3a\x5c\x65\x71\x66\x66\x03\xa7\x91\x5e\x30\xba\x18",
        // "" / M(None) / S(0) / L(0)
        "\xf6\x3e\x1d\x2d\x2d\x41\x64\x34\xaa\x40\x87\x7b\xda\x05\x6e\xd9\xfb\x33\xa5\x32\x79\xd0\x6e\xdf\x90\x40\x5b\x19\x7d\xdc\x76\xad",
        // "ASN1_OBJECT_free" / M(Rot) / S(141) / L(16)
        "\xce\xe0\xdb\xbe\xec\xdc\xcf\xd7\xd2\xd0\xe1\xec\xf3\xff\xf2\xf2\x8d",
        // "init" / M(Rot) / S(229) / L(4)
        "\x4e\x53\x4e\x59\xe5\xce\xbe\x70\x26\x78\x5d\x22\x24\xaa\x11\xb9",
        // "CFStringCreateWithBytes" / M(Xor3) / S(76) / L(23)
        "\x2f\x2a\x3f\x18\x1e\x05\x02\x0b\x2f\x1e\x09\x0d\x18\x09\x3b\x05\x18\x04\x2e\x15\x18\x09\x1f\x6c\x4f\xd3\xea\x7e\x8c\x0e\x60\xe0",
        // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(16) / L(29)
        "\x7b\x53\x56\x64\x89\x80\x75\x54\x79\x73\x84\x79\x7f\x7e\x71\x82\x89\x5b\x75\x89\x53\x71\x7c\x7c\x52\x71\x73\x7b\x83\x10\x22\x21\xd4\x77\x41\x95\x28\x2f",
        // "setDelegate:" / M(Xor3) / S(80) / L(12)
        "\x13\x05\x14\x24\x05\x0c\x05\x07\x01\x14\x05\x5a\x60\x5e\x5f\x53",
        // "EVP_MD_CTX_init" / M(Xor4) / S(197) / L(15)
        "\x15\x06\x00\x0f\x1d\x14\x0f\x13\x04\x08\x0f\x39\x3e\x39\x24\x50",
        // "Apple Root CA" / M(Xor1) / S(166) / L(13)
        "\xe7\xd6\xd6\xca\xc3\x86\xf4\xc9\xc9\xd2\x86\xe5\xe7\xa6\x6d\x5b",
        // "X509_free" / M(Xor1) / S(184) / L(9)
        "\xe0\x8d\x88\x81\xe7\xde\xca\xdd\xdd\xb8\xab\xbd\x56\x14\x60\x8c",
        // "CFArrayCreateMutable" / M(Xor2) / S(203) / L(20)
        "\x9d\x98\x9f\xac\xac\xbf\xa7\x9d\xac\xbb\xbf\xaa\xbb\x93\xab\xaa\xbf\xbc\xb2\xbb\xde",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor1) / S(179) / L(36)
        "\xf0\xf5\xf1\xc6\xdd\xd7\xdf\xd6\xf4\xd6\xc7\xe5\xd2\xdf\xc6\xd6\xf5\xdc\xc1\xfa\xdd\xd5\xdc\xf7\xda\xd0\xc7\xda\xdc\xdd\xd2\xc1\xca\xf8\xd6\xca\xb3",
        // "OBJ_txt2obj" / M(Xor3) / S(17) / L(11)
        "\x6e\x63\x6b\x7e\x55\x59\x55\x13\x4e\x43\x4b\x21\x57\xca\xe7\xab",
        // "objc_lookUpClass" / M(Xor3) / S(27) / L(16)
        "\x43\x4e\x46\x4f\x73\x40\x43\x43\x47\x79\x5c\x6f\x40\x4d\x5f\x5f\x2c",
        // "OBJ_txt2obj" / M(Xor1) / S(49) / L(11)
        "\x7e\x73\x7b\x6e\x45\x49\x45\x03\x5e\x53\x5b\x31\x93\xc3\x5e\x38",
        // "" / M(None) / S(0) / L(0)
        "\xa8\x8f\xb2\xdc\x42\x42\xa9\x9b\x1a\x62\x62\xb6\xd2\xa9\x81\x53\x93\xfe\x4e\x18\xde\xab\xde\xfa\xe7\x0f\xf4\x98\xe6\x8b\xf0\xac",
        // "%02x" / M(Xor1) / S(255) / L(4)
        "\xda\xcf\xcd\x87\xff\x29\xbe\xf8\x4d\x03\x91\x64\x42\xb9\x0f\x8a",
        // "NSBundle" / M(Xor1) / S(123) / L(8)
        "\x35\x28\x39\x0e\x15\x1f\x17\x1e\x7b\xc1\x14\xd0\x63\x5a\x96\x3f",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor4) / S(93) / L(31)
        "\xcb\xe3\xe6\xf4\xd9\xd0\xc5\xe4\xc9\xc3\xd4\xc9\xcf\xce\xc1\xd2\xd9\xf6\xc1\xcc\xd5\xc5\xe3\xc1\xcc\xcc\xe2\xc1\xc3\xcb\xd3\xa0",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(154) / L(14)
        "\xf8\xfe\xe6\xee\xf5\xe7\xeb\xe3\xe4\xf5\xe5\xe4\xe6\xf3\xaa\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x22\xa8\x31\xcc\x6f\xe7\xba\xbe\x21\x3b\x58\x53\x18\x53\xe6\x87\x2e\xdb\xfb\x0c\x71\xb9\x1d\xb5\xc8\x25\xd7\xee\x5b\x77\x66\x21",
        // "X509_STORE_add_cert" / M(Xor1) / S(98) / L(19)
        "\x3a\x57\x52\x5b\x3d\x31\x36\x2d\x30\x27\x3d\x03\x06\x06\x3d\x01\x07\x10\x16\x62",
        // "CFStringCreateWithCString" / M(Xor4) / S(3) / L(25)
        "\x25\x20\x35\x12\x14\x0f\x08\x01\x25\x14\x03\x07\x12\x03\x31\x0f\x12\x0e\x25\x35\x12\x14\x0f\x08\x01\x66\x61\x66\x36\x8c\x07\x89\x68\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x04\xda\xc3\x12\xbb\x9c\xc9\x11\x0c\x05\xaf\xeb\xd9\x08\xd8\xe6\xb0\x30\xdb\xcf\x7b\xec\x75\xa0\x24\x05\x52\x57\x14\xcc\xe6\x7e",
        // "BIO_s_mem" / M(Xor3) / S(71) / L(9)
        "\x15\x1e\x18\x08\x24\x08\x3a\x32\x3a\x57\x76\x93\x9c\x47\x31\x45",
        // "BIO_write" / M(Xor3) / S(73) / L(9)
        "\x1b\x10\x16\x06\x2e\x2b\x30\x2d\x3c\x59\x9d\xc6\x6f\x7d\x50\x94",
        // "CFBundleVersion" / M(Xor1) / S(164) / L(15)
        "\xe7\xe2\xe6\xd1\xca\xc0\xc8\xc1\xf2\xc1\xd6\xd7\xcd\xcb\xca\xa4",
        // "PKCS7_verify" / M(Xor3) / S(52) / L(12)
        "\x14\x0f\x07\x17\x73\x1b\x32\x21\x36\x2d\x22\x3d\x44\xc6\xa2\x0c",
        // "." / M(Xor4) / S(41) / L(1)
        "\xbe\x90\xce\xb2\xd6\x77\x76\xde\x87\x4a\x0c\xfe\xb7\x7f\x1a\x31",
        // "CFDataAppendBytes" / M(Xor3) / S(231) / L(17)
        "\xba\xbf\xbd\x98\x8d\x98\xb8\x89\x89\x9c\x97\x9d\xbb\x80\x8d\x9c\x8a\xf9",
        // "CFDictionarySetValue" / M(Xor3) / S(236) / L(20)
        "\x42\x47\x45\x68\x62\x75\x68\x6e\x6f\x60\x73\x78\x52\x64\x75\x57\x60\x6d\x74\x64\x01",
        // "CFArrayCreateMutable" / M(Rot) / S(177) / L(20)
        "\xf4\xf7\xf2\x23\x23\x12\x2a\xf4\x23\x16\x12\x25\x16\xfe\x26\x25\x12\x13\x1d\x16\xb1",
        // "X509_digest" / M(Rot) / S(67) / L(11)
        "\x9b\x78\x73\x7c\xa2\xa7\xac\xaa\xa8\xb6\xb7\x43\xdf\x05\xb4\xb2",
        // "CFDictionaryGetValue" / M(Xor2) / S(47) / L(20)
        "\x79\x7c\x7e\x53\x59\x4e\x53\x55\x54\x5b\x48\x43\x7d\x5f\x4e\x6c\x5b\x56\x4f\x5f\x3a",
        // "BIO_free" / M(Xor4) / S(151) / L(8)
        "\x32\x39\x3f\x2f\x16\x02\x15\x15\x70\xe7\xd0\xf6\x43\x1e\x1c\x6f",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(4) / L(21)
        "\x6f\x47\x42\x50\x7d\x74\x61\x45\x76\x76\x65\x7d\x47\x65\x68\x68\x46\x65\x67\x6f\x77\x04",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(28) / L(19)
        "\x68\x05\x00\x09\x6f\x57\x55\x44\x6f\x55\x48\x44\x6f\x52\x49\x6f\x7f\x72\x7a\x30",
        // "BIO_free" / M(Xor3) / S(48) / L(8)
        "\x02\x09\x0f\x1f\x26\x32\x25\x25\x40\xdb\x7d\x3f\x21\xb0\xd3\xd0",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(125) / L(26)
        "\x1d\x18\x1a\x3f\x2a\x3b\x18\x31\x2c\x33\x3f\x2a\x2a\x3b\x2c\x0d\x3b\x2a\x0e\x2c\x31\x2e\x3b\x2c\x2a\x27\x5e\x0b\xb8\xed\xeb\xca\x0e\xcd\x33",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Rot) / S(138) / L(66)
        "\xb9\xdd\x03\xfd\xfe\xef\xf7\xb9\xd6\xf3\xec\xfc\xeb\xfc\x03\xb9\xd0\xfc\xeb\xf7\xef\x01\xf9\xfc\xf5\xfd\xb9\xcd\xf9\xfc\xef\xd0\xf9\xff\xf8\xee\xeb\xfe\xf3\xf9\xf8\xb8\xf0\xfc\xeb\xf7\xef\x01\xf9\xfc\xf5\xb9\xcd\xf9\xfc\xef\xd0\xf9\xff\xf8\xee\xeb\xfe\xf3\xf9\xf8\x8a",
        // "sha1" / M(Xor4) / S(214) / L(4)
        "\x13\x08\x01\x51\x60\x63\xe6\x4e\x0a\x68\xdb\x3c\xac\x6c\x9c\x4f",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor4) / S(140) / L(32)
        "\x75\x75\x75\x75\x2b\x21\x2b\x41\x41\x2b\x21\x2b\x68\x68\x2b\x58\x2b\x44\x44\x2b\x36\x2b\x61\x61\x2b\x36\x2b\x7f\x7f\x2b\x56\x2b\x0c",
        // "getUUIDBytes:" / M(Rot) / S(15) / L(13)
        "\x76\x74\x83\x64\x64\x58\x53\x51\x88\x83\x74\x82\x49\x0f\x9f\x92",
        // "" / M(None) / S(0) / L(0)
        "\xb5\xe1\x8f\x4c\x13\x46\x1c\xcd\x46\x2c\x73\xad\x1e\x29\xf4\xdc\x03\xa1\xb6\xd8\x7c\xff\x93\x93\xf8\x46\x06\x45\xb2\xfd\xb6\xf6",
        // "PKCS7_get0_signers" / M(Xor3) / S(77) / L(18)
        "\x30\x2b\x23\x33\x57\x3f\x07\x05\x14\x50\x3f\x13\x09\x07\x0e\x05\x12\x13\x60",
        // "" / M(None) / S(0) / L(0)
        "\xcb\xd4\xca\xf9\x79\xc9\x4c\xd0\x7f\x70\x0a\xcd\xc9\x11\xb9\x16\xc1\x3c\xa8\x1f\x37\x45\x22\xa0\xd2\x30\x7b\xe6\x0a\x66\xfd\xfc",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x7b\x09\x71\x65\x4f\xb7\xc6\x9f\x0b\xde\x0d\x30\xd9\x0d\x3c\xb3\x83\x8a\xb5\x6e\x62\xfe\x29\xb5\x97\xb4\xe5\xbd\x2f\x74\x72",
        // "setjmp" / M(Rot) / S(131) / L(6)
        "\xf6\xe8\xf7\xed\xf0\xf3\x83\xab\xe2\x04\xe3\x3e\x47\x9a\xf9\xd8",
        // "dlsym" / M(Rot) / S(167) / L(5)
        "\x0b\x13\x1a\x20\x14\xa7\x34\x52\x8b\xc0\x56\x62\x1d\x0b\xab\x78",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(215) / L(35)
        "\x94\x91\x93\xb6\xa3\xb2\x91\xb8\xa5\xba\xb6\xa3\xa3\xb2\xa5\x94\xa5\xb2\xb6\xa3\xb2\x93\xb6\xa3\xb2\x91\xa5\xb8\xba\x84\xa3\xa5\xbe\xb9\xb0\xd7",
        // "CFBundleIdentifier" / M(Rot) / S(209) / L(18)
        "\x14\x17\x13\x46\x3f\x35\x3d\x36\x1a\x35\x36\x3f\x45\x3a\x37\x3a\x36\x43\xd1",
        // "" / M(None) / S(0) / L(0)
        "\x9c\xeb\xea\x3b\x6d\x3f\xbf\x82\xff\x92\x22\x05\x47\xd2\x90\x66\x55\xa5\x55\x84\x37\xf3\xcb\xed\x68\x08\x6c\x6e\x77\x34\x82\xca",
        // "strncmp" / M(Rot) / S(202) / L(7)
        "\x3d\x3e\x3c\x38\x2d\x37\x3a\xca\x1f\x23\x0c\x31\x68\x16\x43\x78",
        // "CFDataGetLength" / M(Rot) / S(191) / L(15)
        "\x02\x05\x03\x20\x33\x20\x06\x24\x33\x0b\x24\x2d\x26\x33\x27\xbf",
        // "X509_digest" / M(Rot) / S(195) / L(11)
        "\x1b\xf8\xf3\xfc\x22\x27\x2c\x2a\x28\x36\x37\xc3\xe4\x9d\x93\x34",
        // "X509_STORE_free" / M(Xor1) / S(177) / L(15)
        "\xe9\x84\x81\x88\xee\xe2\xe5\xfe\xe3\xf4\xee\xd7\xc3\xd4\xd4\xb1",
        // "CFReadStreamOpen" / M(Rot) / S(147) / L(16)
        "\xd6\xd9\xe5\xf8\xf4\xf7\xe6\x07\x05\xf8\xf4\x00\xe2\x03\xf8\x01\x93",
        // "EVP_DigestUpdate" / M(Xor2) / S(96) / L(16)
        "\x34\x27\x21\x2e\x35\x18\x16\x14\x02\x05\x24\x01\x15\x10\x05\x14\x71",
        // "X509_STORE_new" / M(Xor1) / S(175) / L(14)
        "\xf7\x9a\x9f\x96\xf0\xfc\xfb\xe0\xfd\xea\xf0\xc1\xca\xd8\xaf\xa4",
        // "CFDictionaryAddValue" / M(Xor2) / S(112) / L(20)
        "\x26\x23\x21\x0c\x06\x11\x0c\x0a\x0b\x04\x17\x1c\x24\x01\x01\x33\x04\x09\x10\x00\x65",
        // "currentDevice" / M(Xor4) / S(49) / L(13)
        "\x73\x65\x62\x62\x75\x7e\x64\x54\x75\x66\x79\x73\x75\x10\x33\xfa",
        // "CFArrayGetValueAtIndex" / M(Xor3) / S(62) / L(22)
        "\x16\x13\x14\x27\x27\x34\x2c\x12\x30\x21\x03\x34\x39\x20\x30\x14\x21\x1c\x3b\x31\x30\x2d\x55",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(208) / L(40)
        "\xe6\xe1\xe1\x95\xe5\x92\xe6\xe6\xe2\x93\xe5\xe9\xe3\x91\xe0\xe8\x96\x96\xe5\xe8\x94\xe1\xe4\x91\x95\xe2\xe2\xe4\xe5\xe2\x94\xe1\xe9\xe8\x94\x96\xe6\x93\xe6\xe0\xd0\x9a\x1a\x73\x63\xbe\x29\x63\x50",
        // "" / M(None) / S(0) / L(0)
        "\xa6\x42\x85\x20\xb8\x7f\xe8\x63\xed\x02\x1b\x03\xeb\xb1\x07\x7d\x63\x8d\x2b\x4d\x0f\x90\x98\x8d\xdd\xc0\x27\x0b\x96\x3e\x88\xd1",
        // "exit" / M(Xor1) / S(55) / L(4)
        "\x52\x4f\x5e\x43\x37\x7f\x4b\x7d\x40\x77\x09\x67\x9f\x4e\xbf\xeb",
        // "Apple Root CA" / M(Xor1) / S(146) / L(13)
        "\xd3\xe2\xe2\xfe\xf7\xb2\xc0\xfd\xfd\xe6\xb2\xd1\xd3\x92\x3c\x38",
        // "CFEqual" / M(Xor3) / S(123) / L(7)
        "\xc8\xcd\xce\xfa\xfe\xea\xe7\x8b\xc9\x6d\xe6\x72\x9b\x41\x7a\x0a",
        // "sel_registerName" / M(Xor1) / S(144) / L(16)
        "\xe3\xf5\xfc\xcf\xe2\xf5\xf7\xf9\xe3\xe4\xf5\xe2\xde\xf1\xfd\xf5\x90",
        // "CFRelease" / M(Xor2) / S(113) / L(9)
        "\x22\x27\x33\x04\x0d\x04\x00\x12\x04\x61\xfa\xc9\x26\x74\xa8\x61",
        // "" / M(None) / S(0) / L(0)
        "\xf2\xb3\x33\xcc\xd2\x39\x58\x3b\x5c\xb6\xca\x00\xdf\x32\x6d\x60\xb4\x3a\xba\xa3\x8a\xc0\xbc\x23\xdf\xc6\x53\x5a\xd9\xf2\x7b\xfa",
        // "d2i_X509_bio" / M(Rot) / S(108) / L(12)
        "\xd0\x9e\xd5\xcb\xc4\xa1\x9c\xa5\xcb\xce\xd5\xdb\x6c\xee\x52\x71",
        // "" / M(None) / S(0) / L(0)
        "\x7e\xc5\x95\xb6\xe1\x37\x60\x22\x36\x96\xf2\x88\x21\xb1\xe2\xf8\xae\x71\x0a\x60\x94\xde\xc2\x7e\xe1\x24\x74\x3c\x94\x4d\x43\xcd",
        // "" / M(None) / S(0) / L(0)
        "\xf3\xb3\xe7\x8a\x20\xc6\x37\xdd\x4e\xd6\x63\x0a\x94\x09\x0a\x25\xfd\xed\xaa\x1a\x0b\xb1\xec\xc5\x81\x19\x9f\xc4\xd3\xb2\x48\xcb",
        // "mainBundle" / M(Rot) / S(22) / L(10)
        "\x83\x77\x7f\x84\x58\x8b\x84\x7a\x82\x7b\x16\x23\x70\x22\xd9\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x70\x6c\x1a\xfc\xb5\x06\x28\x29\xdd\x98\x5f\x9e\xb7\x9c\x00\x45\xd0\xd9\x65\x85\x7a\x31\xea\xbd\x1a\x71\x55\x99\xf8\xf1\xdf\x1d",
        // "CFDateCreate" / M(Rot) / S(206) / L(12)
        "\x11\x14\x12\x2f\x42\x33\x11\x40\x33\x2f\x42\x33\xce\x23\x58\xa3",
        // "CFReadStreamClose" / M(Xor3) / S(178) / L(17)
        "\x87\x82\x96\xa1\xa5\xa0\x97\xb0\xb6\xa1\xa5\xa9\x87\xa8\xab\xb7\xa1\xc4",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(87) / L(22)
        "\x2b\x03\x06\x02\x35\x2e\x24\x2c\x25\x09\x24\x25\x2e\x34\x29\x26\x29\x25\x32\x0b\x25\x39\x40",
        // "CFDataGetLength" / M(Xor3) / S(175) / L(15)
        "\xfc\xf9\xfb\xde\xcb\xde\xf8\xda\xcb\xf3\xda\xd1\xd8\xcb\xd7\xbf",
        // "appStoreReceiptURL" / M(Rot) / S(6) / L(18)
        "\x67\x76\x76\x59\x7a\x75\x78\x6b\x58\x6b\x69\x6b\x6f\x76\x7a\x5b\x58\x52\x06",
        // "sk_free" / M(Rot) / S(43) / L(7)
        "\x9e\x96\x8a\x91\x9d\x90\x90\x2b\xc0\xed\x55\xc3\x6c\xb7\xc5\x1e",
        // "BIO_s_mem" / M(Xor1) / S(88) / L(9)
        "\x1a\x11\x17\x07\x2b\x07\x35\x3d\x35\x58\x7b\x03\xaa\xb9\x90\x46",
        // "X509_digest" / M(Xor3) / S(54) / L(11)
        "\x1e\x73\x76\x7f\x19\x22\x2f\x21\x23\x35\x32\x46\xdf\x13\xff\xd1",
        // "" / M(None) / S(0) / L(0)
        "\xf6\x1b\x9f\x8b\x5f\x7e\xcc\x3d\xed\xa2\xd2\x68\x8c\x0a\xf2\x98\xda\xe0\x8f\x93\x33\x51\x78\x01\x74\x88\x24\xac\x9a\x04\x1b\x1b",
        // "CFAbsoluteTimeGetCurrent" / M(Xor2) / S(3) / L(24)
        "\x61\x64\x63\x40\x51\x4d\x4e\x57\x56\x47\x76\x4b\x4f\x47\x65\x47\x56\x61\x57\x50\x50\x47\x4c\x56\x22\x29\x4c\xac\x80\xf1\xf9\x59\x49",
        // "" / M(None) / S(0) / L(0)
        "\x65\xc4\x96\x23\xc8\x32\xe1\xaf\x4d\xb5\x44\x9e\xf2\x66\xb4\x49\x0a\xbe\xd5\xcd\xb9\xdd\x47\x65\x4e\xa6\x3e\x07\x13\x9a\xeb\x09",
        // "" / M(None) / S(0) / L(0)
        "\xea\xad\x14\xdd\x3a\xe6\xf1\xf6\xbd\x8f\xf1\x43\x29\x31\xf0\x5f\x33\x78\x9a\xeb\x2e\x68\x0a\x9c\xc1\xdc\x20\xe0\xb3\xc9\x28\x2e",
        // "BIO_new" / M(Xor4) / S(196) / L(7)
        "\x02\x09\x0f\x1f\x2e\x25\x37\x40\xfb\x40\xae\xd6\xe9\xbd\xb4\x5e",
        // "CFDateCreate" / M(Xor2) / S(77) / L(12)
        "\x1e\x1b\x19\x3c\x29\x38\x1e\x2f\x38\x3c\x29\x38\x5d\xd2\x8a\x75",
        // "strlen" / M(Rot) / S(117) / L(6)
        "\xe8\xe9\xe7\xe1\xda\xe3\x75\xe0\x0d\xc3\xa5\x28\x42\x39\xef\x68",
        // "" / M(None) / S(0) / L(0)
        "\x23\xab\x33\x4d\x27\x12\xfa\xc1\xc9\x6f\xdc\xc0\xf8\xc6\xa7\xdb\xea\x26\x82\x5d\x24\x83\xee\x0f\xd0\x00\xa1\x57\x6a\x21\xf4\x04",
        // "getUUIDBytes:" / M(Xor4) / S(150) / L(13)
        "\x07\x05\x14\x35\x35\x29\x24\x22\x19\x14\x05\x13\x5a\x60\x2f\x4a",
        // "ASN1_INTEGER_get" / M(Xor1) / S(153) / L(16)
        "\xd8\xca\xd7\xa8\xc6\xd0\xd7\xcd\xdc\xde\xdc\xcb\xc6\xfe\xfc\xed\x99",
        // "CFBundleUnloadExecutable" / M(Rot) / S(66) / L(24)
        "\x85\x88\x84\xb7\xb0\xa6\xae\xa7\x97\xb0\xae\xb1\xa3\xa6\x87\xba\xa7\xa5\xb7\xb6\xa3\xa4\xae\xa7\x42\x31\xc3\x0d\xd8\xb3\x61\xb2\xbb",
        // "identifierForVendor" / M(Xor1) / S(160) / L(19)
        "\xc9\xc4\xc5\xce\xd4\xc9\xc6\xc9\xc5\xd2\xe6\xcf\xd2\xf6\xc5\xce\xc4\xcf\xd2\xa0",
        // "CFReadStreamClose" / M(Xor1) / S(119) / L(17)
        "\x34\x31\x25\x12\x16\x13\x24\x03\x05\x12\x16\x1a\x34\x1b\x18\x04\x12\x77",
        // "init" / M(Xor1) / S(140) / L(4)
        "\xe5\xe2\xe5\xf8\x8c\x69\x5a\xe2\x93\xff\x3a\xb4\x37\x83\xea\x18",
        // "" / M(None) / S(0) / L(0)
        "\x05\x3e\x11\x62\xb2\xa2\x14\x9e\xbd\x07\x09\xb8\x20\xc7\x87\xa1\xfb\x61\x1e\xa1\xaf\x24\xa7\x27\x30\xac\x40\xd3\x8b\x37\x9a\xb1",
        // "sk_num" / M(Xor1) / S(118) / L(6)
        "\x05\x1d\x29\x18\x03\x1b\x76\x6a\x3d\xc0\xb3\x3f\xae\x58\xc9\x89",
        // "X509_free" / M(Xor3) / S(206) / L(9)
        "\x86\xeb\xee\xe7\x81\xb8\xac\xbb\xbb\xde\xa5\x72\x12\xe4\x1b\x56",
        // "X509_STORE_add_cert" / M(Rot) / S(111) / L(19)
        "\xc7\xa4\x9f\xa8\xce\xc2\xc3\xbe\xc1\xb4\xce\xd0\xd3\xd3\xce\xd2\xd4\xe1\xe3\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x0a\x52\x94\x96\xcd\x47\x9a\xfb\x78\x1a\x7f\x63\xa2\x22\xe4\x1f\x77\xff\x65\x3b\x01\xe8\xbf\x3b\xa2\x48\xcc\x14\x92\xcc\x00\x0f",
        // "sel_registerName" / M(Xor2) / S(2) / L(16)
        "\x60\x76\x7f\x4c\x61\x76\x74\x7a\x60\x67\x76\x61\x5d\x72\x7e\x76\x13",
        // "CFArrayAppendValue" / M(Xor3) / S(96) / L(18)
        "\x30\x35\x32\x01\x01\x12\x0a\x32\x03\x03\x16\x1d\x17\x25\x12\x1f\x06\x16\x73",
        // "CFReadStreamRead" / M(Xor4) / S(201) / L(16)
        "\x1a\x1f\x0b\x3c\x38\x3d\x0a\x2d\x2b\x3c\x38\x34\x0b\x3c\x38\x3d\x59",
        // "." / M(Rot) / S(192) / L(1)
        "\xee\xc0\x48\x4c\xfd\x04\x33\xe9\xcb\xc9\xab\xa2\x75\xc3\x06\xce",
        // "X509_STORE_add_cert" / M(Xor3) / S(165) / L(19)
        "\xe1\x8c\x89\x80\xe6\xea\xed\xf6\xeb\xfc\xe6\xd8\xdd\xdd\xe6\xda\xdc\xcb\xcd\xb9",
        // "sk_num" / M(Xor1) / S(151) / L(6)
        "\xe4\xfc\xc8\xf9\xe2\xfa\x97\x8c\x7d\xb4\xaa\xca\x62\xf5\x75\x25",
        // "appStoreReceiptURL" / M(Xor4) / S(250) / L(18)
        "\xef\xfe\xfe\xdd\xfa\xe1\xfc\xeb\xdc\xeb\xed\xeb\xe7\xfe\xfa\xdb\xdc\xc2\x8e",
        // "%02x" / M(Xor3) / S(149) / L(4)
        "\x80\x95\x97\xdd\xa5\xa1\xf7\xb3\xcb\x4b\xff\x96\xed\xcd\x9b\x71",
        // "CFDataCreate" / M(Xor3) / S(87) / L(12)
        "\x24\x21\x23\x06\x13\x06\x24\x15\x02\x06\x13\x02\x67\xb0\x83\x17",
        // "SHA1_Update" / M(Xor3) / S(210) / L(11)
        "\xb1\xaa\xa3\xd3\xbd\xb7\x92\x86\x83\x96\x87\xe2\x8a\x74\x53\x08",
        // "CFArrayGetCount" / M(Xor2) / S(39) / L(15)
        "\x74\x71\x76\x45\x45\x56\x4e\x70\x52\x43\x74\x58\x42\x59\x43\x37",
        // "PKCS7_free" / M(Xor4) / S(98) / L(10)
        "\x70\x6b\x63\x73\x17\x7f\x46\x52\x45\x45\x20\x15\x77\x0c\x8b\x5a",
        // "CFBundleShortVersionString" / M(Xor3) / S(239) / L(26)
        "\x51\x54\x50\x67\x7c\x76\x7e\x77\x41\x7a\x7d\x60\x66\x44\x77\x60\x61\x7b\x7d\x7c\x41\x66\x60\x7b\x7c\x75\x12\xdb\x9a\x8a\xe7\xb8\xb4\x1a\x18",
        // "objc_lookUpClass" / M(Xor3) / S(151) / L(16)
        "\xc7\xca\xc2\xcb\xf7\xc4\xc7\xc7\xc3\xfd\xd8\xeb\xc4\xc9\xdb\xdb\xa8",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(192) / L(23)
        "\x53\x4b\x52\x65\x63\x65\x69\x70\x74\x52\x65\x66\x72\x65\x73\x68\x52\x65\x71\x75\x65\x73\x74\x00\x36\xf0\xee\x76\x1c\x9b\xc1\x8d",
        // "CFDateFormatterSetProperty" / M(Xor3) / S(92) / L(26)
        "\x3c\x39\x3b\x1e\x0b\x1a\x39\x10\x0d\x12\x1e\x0b\x0b\x1a\x0d\x2c\x1a\x0b\x2f\x0d\x10\x0f\x1a\x0d\x0b\x06\x7f\xc7\x37\xd8\x57\x19\x6e\x38\x19",
        // "CFDataCreateMutable" / M(Xor1) / S(1) / L(19)
        "\x42\x47\x45\x60\x75\x60\x42\x73\x64\x60\x75\x64\x4c\x74\x75\x60\x63\x6d\x64\x01",
        // "SHA1_Final" / M(Xor1) / S(82) / L(10)
        "\x01\x1a\x13\x63\x0d\x14\x3b\x3c\x33\x3e\x52\x50\x1a\xb1\x0c\x2e",
        // "" / M(None) / S(0) / L(0)
        "\x17\xff\x40\x76\x7d\x95\x07\xf2\xe8\xbc\xe6\xe9\xf7\x83\x58\x45\x80\xcf\x76\x8e\x71\x7a\x98\x30\xe7\x2c\xf8\x83\x46\xd3\x59\xa3",
        // "" / M(None) / S(0) / L(0)
        "\x5c\x9e\xe2\xa8\x67\xd0\x18\x81\xa9\xe8\xc6\x18\x5f\x86\xd5\xd0\xa5\xce\xae\x29\x7e\x7e\x78\x08\xdc\x4a\xae\x3c\x0c\x6d\x4a\x22",
        // "SHA1_Init" / M(Xor3) / S(82) / L(9)
        "\x31\x2a\x23\x53\x3d\x2b\x0c\x0b\x16\x62\xc0\x5c\x37\x80\x00\x80",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(136) / L(59)
        "\xfa\xfd\xf6\xfd\x89\xf6\xf9\x8e\xf6\xfa\xfa\xf6\xfe\x8f\xf6\xf9\xf5\xf6\xff\x8d\xf6\xfc\xf4\xf6\x8a\x8a\xf6\xf9\xf4\xf6\x88\xfd\xf6\xf8\x8d\xf6\x89\xfe\xf6\xfe\xf8\xf6\xf9\xfe\xf6\x88\xfd\xf6\xf5\xf4\xf6\x88\x8a\xf6\xfa\x8f\xf6\xfa\xfc\xcc\xdd\xf5\x15\x67\x6d\x29\xa2\x0d",
        // "CC_SHA1" / M(Xor4) / S(189) / L(7)
        "\x93\x93\x8f\x83\x98\x91\xe1\xd0\xf3\x77\xb4\xa3\x89\xb9\xac\xcf",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(161) / L(25)
        "\xdb\xb6\xb3\xba\xdc\xcd\xc2\xce\xc6\xdc\xe4\xe6\xf7\xdc\xf7\xe6\xfb\xf7\xdc\xe1\xfa\xdc\xcd\xca\xc7\x83\x00\xf5\xc4\x54\xf3\xf7\x54\x36",
        // "kCFTypeDictionaryValueCallBacks" / M(Xor1) / S(180) / L(31)
        "\xdf\xf7\xf2\xe0\xcd\xc4\xd1\xf0\xdd\xd7\xc0\xdd\xdb\xda\xd5\xc6\xcd\xe2\xd5\xd8\xc1\xd1\xf7\xd5\xd8\xd8\xf6\xd5\xd7\xdf\xc7\xb4",
        // "UIDevice" / M(Rot) / S(165) / L(8)
        "\xfa\xee\xe9\x0a\x1b\x0e\x08\x0a\xa5\xca\x47\x93\xa9\x26\x79\xb7",
        // "UIDevice" / M(Xor1) / S(228) / L(8)
        "\xb1\xad\xa0\x81\x92\x8d\x87\x81\xe4\xa9\x55\xb6\xb4\x0b\x58\xe5",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor4) / S(226) / L(66)
        "\x09\x75\x5f\x55\x52\x43\x4b\x09\x6a\x4f\x44\x54\x47\x54\x5f\x09\x60\x54\x47\x4b\x43\x51\x49\x54\x4d\x55\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x08\x40\x54\x47\x4b\x43\x51\x49\x54\x4d\x09\x65\x49\x54\x43\x60\x49\x53\x48\x42\x47\x52\x4f\x49\x48\x26",
        // "CC_SHA1_Update" / M(Xor4) / S(143) / L(14)
        "\xb3\xb3\xaf\xa3\xb8\xb1\xc1\xaf\xa5\x80\x94\x91\x84\x95\xf0\x23",
        // "" / M(None) / S(0) / L(0)
        "\xb5\xcb\x62\x8f\x59\xb4\xd9\x16\xd3\x7b\xf8\xf0\xbb\x3b\x75\xef\x63\x5a\x7e\x95\xf3\xc5\xa1\xd9\xa2\xd7\x56\x96\xea\x35\x55\x6a",
        // "CFDictionaryCreateMutable" / M(Rot) / S(57) / L(25)
        "\x7c\x7f\x7d\xa2\x9c\xad\xa2\xa8\xa7\x9a\xab\xb2\x7c\xab\x9e\x9a\xad\x9e\x86\xae\xad\x9a\x9b\xa5\x9e\x39\x42\xfe\x0b\x4d\x1c\x80\x90\x5f",
        // "exit" / M(Xor2) / S(180) / L(4)
        "\xc1\xdc\xcd\xd0\xa4\x6a\x9b\x02\x96\x7a\x50\xd4\x6e\xbc\xfd\xcd",
        // "longjmp" / M(Rot) / S(245) / L(7)
        "\x61\x64\x63\x5c\x5f\x62\x65\xf5\xfa\xad\xe6\x9c\x17\xa0\x89\x7e",
        // "sk_free" / M(Rot) / S(110) / L(7)
        "\xe1\xd9\xcd\xd4\xe0\xd3\xd3\x6e\x41\x09\x0c\xbf\xb6\xdc\x72\x80",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(201) / L(22)
        "\xcf\x95\x93\x92\xcf\x8c\x89\x82\xcf\x8c\x89\x82\x8f\x82\x8a\x83\xce\x84\x99\x8c\x89\x82\xe0",
        // "SHA1" / M(Xor4) / S(238) / L(4)
        "\xb3\xa8\xa1\xd1\xe0\x81\xc2\xf0\xf0\x3d\xc6\x31\xd7\x2f\x08\xf2",
        // "" / M(None) / S(0) / L(0)
        "\xd4\x26\xf2\x78\xf8\xd0\xa0\x48\x02\x57\xf2\x1a\xac\x01\x2f\xcc\x12\xef\x88\x2f\x09\xa2\x25\xc3\x19\x54\xae\x63\x3c\xbd\xd5\x1c",
        // "ASN1_INTEGER_free" / M(Xor2) / S(153) / L(17)
        "\xca\xd8\xc5\xba\xd4\xc2\xc5\xdf\xce\xcc\xce\xd9\xd4\xed\xf9\xee\xee\x8b",
        // "" / M(None) / S(0) / L(0)
        "\xd0\xfb\x76\x00\x80\x06\x73\xe8\x4d\x3b\x7f\x75\x94\xfe\xe6\x27\x4d\x3a\x50\x48\xb1\xd4\x91\x39\x8f\xe1\xa3\xf8\xbf\x66\x38\x42",
        // "EVP_DigestInit" / M(Xor1) / S(196) / L(14)
        "\x81\x92\x94\x9b\x80\xad\xa3\xa1\xb7\xb0\x8d\xaa\xad\xb0\xc4\xf7",
        // "" / M(None) / S(0) / L(0)
        "\xb5\xa4\x90\xa5\x4c\x32\xa9\x7b\x93\x44\x84\xcb\x28\x90\xb2\x3f\x8d\xca\x2b\xf5\x55\x06\xb6\x58\xfe\xa5\x32\xbc\xe7\xc9\xf5\x66",
        // "X509_STORE_free" / M(Rot) / S(117) / L(15)
        "\xcd\xaa\xa5\xae\xd4\xc8\xc9\xc4\xc7\xba\xd4\xdb\xe7\xda\xda\x75",
        // "CFBundleUnloadExecutable" / M(Xor1) / S(60) / L(24)
        "\x7f\x7a\x7e\x49\x52\x58\x50\x59\x69\x52\x50\x53\x5d\x58\x79\x44\x59\x5f\x49\x48\x5d\x5e\x50\x59\x3c\xd1\xb8\xdd\x82\x2b\xab\x4b\xa8",
        // "EVP_DigestUpdate" / M(Rot) / S(241) / L(16)
        "\x36\x47\x41\x50\x35\x5a\x58\x56\x64\x65\x46\x61\x55\x52\x65\x56\xf1",
        // "sk_value" / M(Xor2) / S(38) / L(8)
        "\x45\x5d\x69\x40\x57\x5a\x43\x53\x36\x7f\x25\x1e\x59\x01\xd9\xd7",
        // "" / M(None) / S(0) / L(0)
        "\x51\x28\x29\x9f\x15\x85\xb0\x7b\xf1\x26\x7f\x81\x0b\xd5\x01\x7a\x5c\x89\x07\xdc\x15\x27\x29\xa4\xae\x90\x9d\xdd\x71\x02\xd1\x44",
        // "" / M(None) / S(0) / L(0)
        "\xc8\xdf\x61\x40\xc3\x11\x35\xdf\xaa\xbb\xbd\xfe\xf6\x8c\xeb\xa1\xc0\x60\x0f\x21\x0d\x5f\x5c\xd6\x2a\xd0\x5a\xd9\xe0\x67\x02\x63",
        // "" / M(None) / S(0) / L(0)
        "\x3c\x0d\x6c\xa7\x92\xd9\xc4\x2a\xf5\x15\xc7\x04\xcf\x00\x57\xb3\x5a\x2a\xe8\xca\x3a\xcd\x9a\x86\x12\x6a\x05\x77\xff\xd1\x39\xe4",
        // "1" / M(Xor4) / S(198) / L(1)
        "\x51\x60\xef\xff\xc6\x46\x7a\xde\xd0\x91\xcb\xa0\xe8\xb3\xa9\x4f",
        // "CFStringCreateWithCString" / M(Xor3) / S(33) / L(25)
        "\x00\x05\x10\x37\x31\x2a\x2d\x24\x00\x31\x26\x22\x37\x26\x14\x2a\x37\x2b\x00\x10\x37\x31\x2a\x2d\x24\x43\xfc\x16\xee\x37\x97\x25\x6f\x75",
        // "CC_SHA1_Init" / M(Xor2) / S(219) / L(12)
        "\x88\x88\x94\x98\x83\x8a\xfa\x94\x82\xa5\xa2\xbf\xcb\xb4\xdb\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x9a\xb0\xf6\xa0\x5d\x41\x2c\x85\x21\x9b\x09\xeb\x04\x31\x9f\x38\x22\xab\xd6\x9c\xd7\x78\xf7\xef\xaf\x24\xf4\x82\xe5\x96\xe3\xe4",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(184) / L(24)
        "\xf6\xac\xaa\xab\xf6\xb5\xb0\xbb\xf6\xb5\xb0\xbb\x8a\xa0\xaa\xad\xbc\xb4\xf7\xbd\xa0\xb5\xb0\xbb\xd9\x3c\x92\x78\x38\x15\xe4\x26\x00",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor1) / S(132) / L(29)
        "\xef\xc7\xc2\xd0\xfd\xf4\xe1\xc0\xed\xe7\xf0\xed\xeb\xea\xe5\xf6\xfd\xcf\xe1\xfd\xc7\xe5\xe8\xe8\xc6\xe5\xe7\xef\xf7\x84\x8f\x6e\xa4\x86\x9d\xe6\xb3\x45",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Rot) / S(57) / L(40)
        "\x6f\x6a\x6a\x7e\x6e\x7b\x6f\x6f\x6b\x7c\x6e\x72\x6c\x7a\x69\x71\x7f\x7f\x6e\x71\x7d\x6a\x6d\x7a\x7e\x6b\x6b\x6d\x6e\x6b\x7d\x6a\x72\x71\x7d\x7f\x6f\x7c\x6f\x69\x39\x33\x64\x17\x17\x42\xb8\xff\x1d",
        // "alloc" / M(Xor2) / S(190) / L(5)
        "\xcf\xc2\xc2\xc1\xcd\xae\x04\xe3\xae\x29\xb1\x59\xe3\x97\x57\x74",
        // "ASN1_INTEGER_free" / M(Xor4) / S(22) / L(17)
        "\xcd\xdf\xc2\xbd\xd3\xc5\xc2\xd8\xc9\xcb\xc9\xde\xd3\xea\xfe\xe9\xe9\x8c",
        // "exit" / M(Rot) / S(101) / L(4)
        "\xca\xdd\xce\xd9\x65\x4d\xed\xc5\xe4\x70\x8a\xad\xca\x5e\x14\x00",
        // "SHA1_Init" / M(Xor4) / S(46) / L(9)
        "\xb3\xa8\xa1\xd1\xbf\xa9\x8e\x89\x94\xe0\xa8\x36\x22\xa2\xa2\xd5",
        // "" / M(None) / S(0) / L(0)
        "\xcf\x52\x14\x7e\x21\x7c\xc9\x8f\x15\x7e\x08\x03\xb5\xcc\x6f\x54\x8e\x41\x1e\x08\xbf\xfb\xd8\x7c\x11\xe4\xac\xef\xa6\x3a\xfa\x9d",
        // "dlopen" / M(Xor4) / S(222) / L(6)
        "\x84\x8c\x8f\x90\x85\x8e\xe0\x0a\xa4\x12\x96\xf7\xd0\x6a\x4c\x98",
        // "BIO_new" / M(Rot) / S(1) / L(7)
        "\x43\x4a\x50\x60\x6f\x66\x78\x01\x69\xe6\xd4\x30\x3d\x7c\x5a\xd6",
        // "CFDateFormatterCreate" / M(Xor1) / S(129) / L(21)
        "\xc2\xc7\xc5\xe0\xf5\xe4\xc7\xee\xf3\xec\xe0\xf5\xf5\xe4\xf3\xc2\xf3\xe4\xe0\xf5\xe4\x81",
        // "CFDataCreateMutable" / M(Xor1) / S(41) / L(19)
        "\x6a\x6f\x6d\x48\x5d\x48\x6a\x5b\x4c\x48\x5d\x4c\x64\x5c\x5d\x48\x4b\x45\x4c\x29",
        // "PKCS7_verify" / M(Xor4) / S(37) / L(12)
        "\x00\x1b\x13\x03\x67\x0f\x26\x35\x22\x39\x36\x29\x50\xd7\x24\x01",
        // "" / M(None) / S(0) / L(0)
        "\x9b\xf0\x0b\xdb\x4b\xdc\x85\xa9\x63\xc2\xb1\xa7\xd8\x65\x8e\xaa\x98\x93\x4f\x55\x1b\x78\x2e\x71\xe6\xf3\x5d\x9f\xb8\x23\x5e\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x6a\x43\xa2\x43\xc5\x36\x3e\xb6\x7c\xe1\x3a\x4b\xaa\x82\x67\xf6\x45\x74\x5f\xf5\x76\x6b\x66\xcc\x85\x0a\x87\x7b\xc6\x14\x5e\x49",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(254) / L(59)
        "\x8c\x8b\x80\x8b\xdf\x80\x8f\xd8\x80\x8c\x8c\x80\x88\xd9\x80\x8f\x83\x80\x89\xdb\x80\x8a\x82\x80\xdc\xdc\x80\x8f\x82\x80\xde\x8b\x80\x8e\xdb\x80\xdf\x88\x80\x88\x8e\x80\x8f\x88\x80\xde\x8b\x80\x83\x82\x80\xde\xdc\x80\x8c\xd9\x80\x8c\x8a\xba\x17\xd7\x7d\xec\x6b\x43\x09\x19",
        // "" / M(None) / S(0) / L(0)
        "\x07\x20\x46\xc0\xbb\x80\xd6\x69\x8c\xd2\x7b\xd1\x02\x5d\x9f\x26\xaf\xa7\x0e\x84\x61\x3d\xd5\x8f\x3d\x15\xfd\xf9\xba\xd4\xa2\x98",
        // "CC_SHA1_Update" / M(Xor1) / S(1) / L(14)
        "\x42\x42\x5e\x52\x49\x40\x30\x5e\x54\x71\x65\x60\x75\x64\x01\x6a",
        // "sk_value" / M(Xor3) / S(157) / L(8)
        "\xde\xc6\xf2\xdb\xcc\xc1\xd8\xc8\xad\x07\x30\x15\xe3\x2b\x4c\xa0",
        // "sk_free" / M(Xor4) / S(101) / L(7)
        "\x23\x3b\x0f\x36\x22\x35\x35\x50\xd6\x8d\x7a\xd6\x1e\x24\xc5\xf7",
        // "" / M(None) / S(0) / L(0)
        "\xb0\x28\xcf\x40\xf4\x57\x3e\x32\x9c\xe6\x68\x1c\x4a\x13\x80\x8a\x42\xa1\x13\xbc\x83\x0c\x9c\xf6\x7b\x1a\x90\xa3\xe9\x77\xb5\x56",
        // "CFBundleGetIdentifier" / M(Rot) / S(86) / L(21)
        "\x99\x9c\x98\xcb\xc4\xba\xc2\xbb\x9d\xbb\xca\x9f\xba\xbb\xc4\xca\xbf\xbc\xbf\xbb\xc8\x56",
        // "CFStringCreateWithBytes" / M(Xor1) / S(249) / L(23)
        "\xba\xbf\xaa\x8d\x8b\x90\x97\x9e\xba\x8b\x9c\x98\x8d\x9c\xae\x90\x8d\x91\xbb\x80\x8d\x9c\x8a\xf9\x64\xb4\x22\x3f\x8f\x61\x19\x3a",
        // "OBJ_txt2obj" / M(Xor4) / S(35) / L(11)
        "\x7f\x72\x7a\x6f\x44\x48\x44\x02\x5f\x52\x5a\x30\x08\x9f\x7c\x09",
        // "" / M(None) / S(0) / L(0)
        "\x34\x7b\x24\xad\xf5\xe5\xcc\x37\x98\x06\x34\x75\x11\x91\x40\xe4\xd3\xf7\x6d\x5f\x37\x6c\xfe\xe0\xb4\x2f\xdc\x90\xd1\x12\x49\x40",
        // "dlsym" / M(Xor2) / S(21) / L(5)
        "\x61\x69\x76\x7c\x68\x05\x30\x1f\xa0\x37\x26\xb0\x2c\x98\x61\x64",
        // "" / M(None) / S(0) / L(0)
        "\xa0\xf8\x36\x93\x43\xa5\xb5\xf8\xb2\x5e\x2a\xf2\xf3\x11\xd7\xa5\x88\xf1\xce\xec\x66\x94\xe5\x4a\x26\xce\xb2\x2a\xf6\x8e\x79\xae",
        // "" / M(None) / S(0) / L(0)
        "\xbf\x86\x55\x0b\x59\x99\xb7\x8e\x98\xa9\x3e\xba\x0f\xf2\xa8\xb9\x9e\x85\xa6\xca\xe3\x3d\x06\x41\x79\xaa\xbe\xe0\x84\x8a\x05\x57",
        // "" / M(None) / S(0) / L(0)
        "\x1d\x99\x22\x5f\xd8\x37\x2a\x03\xd5\x2d\x3c\x01\xd0\x81\x69\x73\x78\xc6\xc8\x40\xd4\x68\xed\x63\xa4\x09\xca\x6e\x0b\x4b\xb3\xe3",
        // "" / M(None) / S(0) / L(0)
        "\x2b\x64\x69\x2b\x29\xa0\x93\x67\x3b\xe6\xae\xee\x54\xb4\x5d\x72\xb4\x83\xa7\x1a\x1b\xae\x32\x61\xc6\x61\x3a\x73\xb3\xa0\xae\x78",
        // "CFDateFormatterSetProperty" / M(Rot) / S(131) / L(26)
        "\xc6\xc9\xc7\xe4\xf7\xe8\xc9\xf2\xf5\xf0\xe4\xf7\xf7\xe8\xf5\xd6\xe8\xf7\xd3\xf5\xf2\xf3\xe8\xf5\xf7\xfc\x83\x56\x90\x29\xdb\xe7\x17\x55\xce",
        // "CC_SHA1_Final" / M(Rot) / S(66) / L(13)
        "\x85\x85\xa1\x95\x8a\x83\x73\xa1\x88\xab\xb0\xa3\xae\x42\xf9\x98",
        // "CFBundleShortVersionString" / M(Xor1) / S(74) / L(26)
        "\x09\x0c\x08\x3f\x24\x2e\x26\x2f\x19\x22\x25\x38\x3e\x1c\x2f\x38\x39\x23\x25\x24\x19\x3e\x38\x23\x24\x2d\x4a\x9b\x46\x06\xa9\x14\xbe\x8b\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x74\x06\xd8\x6a\x7c\x94\xeb\xb5\xe8\x89\x90\x34\x46\xbe\x09\xa9\x4c\x94\x72\xcc\x8a\xaf\x2b\x2d\xef\x9d\x07\x30\x03\x63\xdd\xee",
        // "CFBundleGetMainBundle" / M(Rot) / S(192) / L(21)
        "\x03\x06\x02\x35\x2e\x24\x2c\x25\x07\x25\x34\x0d\x21\x29\x2e\x02\x35\x2e\x24\x2c\x25\xc0",
        // "" / M(None) / S(0) / L(0)
        "\x29\xc0\x51\x5b\x36\x51\xb6\x69\x1c\x81\x1a\x21\xf5\xe7\x85\x21\x8b\xb5\xe9\xc6\xe3\xa3\x50\x99\x3e\x57\x19\x1b\x86\x37\xd7\xdf",
        // "CFRelease" / M(Rot) / S(19) / L(9)
        "\x56\x59\x65\x78\x7f\x78\x74\x86\x78\x13\xee\x53\x21\x1b\x48\xa2",
        // "sk_num" / M(Xor4) / S(253) / L(6)
        "\xa3\xbb\x8f\xbe\xa5\xbd\xd0\xf9\x25\x3d\xdb\x98\x7c\xf4\x32\x97",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(188) / L(25)
        "\xed\xea\xee\xea\xf4\xf0\xec\xea\xed\xed\xef\xf2\xef\xf1\xea\xed\xec\xec\xea\xf2\xea\xed\xed\xea\xed\xbc\xbb\x65\xaf\xb6\x23\xf3\x2d\xf3",
        // "EVP_DigestInit" / M(Xor2) / S(240) / L(14)
        "\xa5\xb6\xb0\xbf\xa4\x89\x87\x85\x93\x94\xa9\x8e\x89\x94\xe0\x0e",
        // "objc_getClass" / M(Xor1) / S(248) / L(13)
        "\x97\x9a\x92\x9b\xa7\x9f\x9d\x8c\xbb\x94\x99\x8b\x8b\xf8\x55\x37",
        // "CFBundleGetIdentifier" / M(Xor4) / S(234) / L(21)
        "\x5f\x5a\x5e\x69\x72\x78\x70\x79\x5b\x79\x68\x55\x78\x79\x72\x68\x75\x7a\x75\x79\x6e\x1c",
        // "" / M(None) / S(0) / L(0)
        "\x77\x65\x36\xa7\xba\x6d\x84\xeb\x42\x71\x5b\x54\x31\x4d\x9a\x2c\x83\x9c\x5e\x8d\x4e\x65\xfe\x43\x13\xee\xdb\xd6\x4d\xdb\x30\x14",
        // "CFDictionarySetValue" / M(Xor1) / S(97) / L(20)
        "\x22\x27\x25\x08\x02\x15\x08\x0e\x0f\x00\x13\x18\x32\x04\x15\x37\x00\x0d\x14\x04\x61",
        // "" / M(None) / S(0) / L(0)
        "\x30\x34\x86\x67\xc9\x31\x86\x11\xda\x86\x87\x6b\xa0\x9a\xca\xd2\xbe\x30\xd1\x89\x82\xb0\x28\x17\xfd\xab\xd1\xbe\x86\xf2\x9c\x30",
        // "" / M(None) / S(0) / L(0)
        "\x7a\xc6\xa1\x4f\x31\x92\x56\x65\x4e\x99\xa5\x6c\x48\x27\xb6\x20\xf7\xe1\x42\x40\x02\xb7\x60\x66\x28\xd6\x6b\x4d\xa2\xeb\x41\xb5",
        // "EVP_get_digestbyname" / M(Rot) / S(96) / L(20)
        "\xa5\xb6\xb0\xbf\xc7\xc5\xd4\xbf\xc4\xc9\xc7\xc5\xd3\xd4\xc2\xd9\xce\xc1\xcd\xc5\x60",
        // "NSBundle" / M(Xor2) / S(107) / L(8)
        "\x35\x28\x39\x0e\x15\x1f\x17\x1e\x7b\x94\xff\xde\x41\x2d\x16\xa0",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(218) / L(24)
        "\xf5\xaf\xa9\xa8\xf5\xb6\xb3\xb8\xf5\xb6\xb3\xb8\x89\xa3\xa9\xae\xbf\xb7\xf4\xbe\xa3\xb6\xb3\xb8\xda\x42\x53\x6e\xaf\x8a\xdc\xea\x19",
        // "EVP_DigestInit" / M(Xor3) / S(89) / L(14)
        "\x2c\x3f\x39\x36\x2d\x00\x0e\x0c\x1a\x1d\x20\x07\x00\x1d\x69\x47",
        // "" / M(None) / S(0) / L(0)
        "\xe7\xf6\x9d\x89\x7e\x74\x71\x35\xd8\x2f\x03\x61\xc5\xbb\x1c\xcf\x25\x81\x75\x42\xaf\x00\x53\xcd\x91\xec\x8f\xdf\x0c\x0a\x9c\xc0",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(215) / L(23)
        "\x98\xa7\xb2\xb9\x84\x84\x9b\x88\xb6\xb3\xb3\x88\xb6\xbb\xbb\x88\xb3\xbe\xb0\xb2\xa4\xa3\xa4\xd7\x8c\x0a\x9c\x94\x24\x1b\x93\xa8",
        // "CFReadStreamCreateWithFile" / M(Xor2) / S(103) / L(26)
        "\x07\x02\x16\x21\x25\x20\x17\x30\x36\x21\x25\x29\x07\x36\x21\x25\x30\x21\x13\x2d\x30\x2c\x02\x2d\x28\x21\x44\x10\x56\xd9\x56\xd2\xd4\x68\x9e",
        // "EVP_DigestFinal" / M(Xor3) / S(211) / L(15)
        "\xa6\xb5\xb3\xbc\xa7\x8a\x84\x86\x90\x97\xa5\x8a\x8d\x82\x8f\xe3",
        // "c2i_ASN1_INTEGER" / M(Xor1) / S(31) / L(16)
        "\x7c\x2d\x76\x40\x5e\x4c\x51\x2e\x40\x56\x51\x4b\x5a\x58\x5a\x4d\x1f",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(21) / L(40)
        "\x78\x84\x82\x43\x7e\x83\x89\x76\x83\x7c\x7e\x77\x81\x7a\x88\x84\x7b\x89\x8c\x76\x87\x7a\x43\x82\x7a\x83\x88\x81\x76\x78\x87\x84\x88\x88\x7a\x88\x89\x76\x89\x88\x15\xc9\xa3\x12\xab\xae\x92\xc5\xbd",
        // "ASN1_OBJECT_free" / M(Xor2) / S(77) / L(16)
        "\x1d\x0f\x12\x6d\x03\x13\x1e\x16\x19\x1f\x08\x03\x3a\x2e\x39\x39\x5c",
        // "alloc" / M(Xor3) / S(206) / L(5)
        "\xbf\xb2\xb2\xb1\xbd\xde\x9f\xea\xc1\x43\x18\xb4\x7c\xb8\xbf\x61",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(215) / L(24)
        "\x94\x91\x93\xb6\xa3\xb2\x91\xb8\xa5\xba\xb6\xa3\xa3\xb2\xa5\x84\xb2\xa3\x91\xb8\xa5\xba\xb6\xa3\xd7\x8b\xcf\xa8\x6d\x45\xb0\xfb\xf7",
        // "CFDateFormatterSetFormat" / M(Xor4) / S(112) / L(24)
        "\x33\x36\x34\x11\x04\x15\x36\x1f\x02\x1d\x11\x04\x04\x15\x02\x23\x15\x04\x36\x1f\x02\x1d\x11\x04\x70\x10\xa3\xa1\x0d\xf7\xf8\xd8\x36",
        // "%02X:" / M(Xor3) / S(123) / L(5)
        "\xae\xbb\xb9\xd3\xb1\x8b\xc2\x80\x29\xd8\x31\x0c\xf1\xde\x70\xb0",
        // "EVP_DigestFinal" / M(Rot) / S(70) / L(15)
        "\x8b\x9c\x96\xa5\x8a\xaf\xad\xab\xb9\xba\x8c\xaf\xb4\xa7\xb2\x46",
        // "CFEqual" / M(Xor4) / S(143) / L(7)
        "\xb3\xb6\xb5\x81\x85\x91\x9c\xf0\x22\x1c\x1b\x15\xe9\x87\x22\x35",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xc9\x15\x34\x9a\xc8\x67\x8e\x5b\xe4\x8a\xb5\x1b\xb6\xf2\xad\x8b\xb0\x0f\xde\x48\xcf\xdd\x55\x90\xb4\x1a\x09\x68\x88\x21\x7f",
        // "" / M(None) / S(0) / L(0)
        "\x46\x06\x9f\x70\x0b\xdb\x51\x28\x3e\xb3\x65\x8a\x9c\xbb\x3d\x2a\xe3\x9b\x29\x61\x2a\x61\x4c\x6c\xb3\xde\xba\x6b\xb2\x83\x6a\x1b",
        // "CFReadStreamOpen" / M(Xor2) / S(211) / L(16)
        "\x81\x84\x90\xa7\xa3\xa6\x91\xb6\xb0\xa7\xa3\xaf\x8d\xb2\xa7\xac\xc2",
        // "" / M(None) / S(0) / L(0)
        "\x57\x20\xcf\x69\x83\xcf\x2d\xa0\x64\x09\x60\xc3\xf6\x0b\x21\xc7\x25\xa9\x8e\x14\xe6\x56\x1e\x5b\xb5\x98\x8d\xb0\x17\xe0\x1a\xa9",
        // "" / M(None) / S(0) / L(0)
        "\x87\x7e\x36\x93\x55\xc9\xf9\x56\x78\xe3\xc0\x35\xad\xd1\x05\xe0\xcc\x67\x77\x8c\x50\xe0\xc4\x87\xaa\xb5\x56\xc7\x37\x86\x54\xff",
        // "" / M(None) / S(0) / L(0)
        "\x3a\xf8\x68\x52\xf4\x05\x17\xd0\xe3\x74\xfe\xe4\x69\x4b\x64\x61\x52\x42\x16\xbf\x8a\x62\xe1\xf3\x14\x7a\xef\x72\x83\xa1\xfd\x86",
        // "ASN1_INTEGER_get" / M(Xor4) / S(152) / L(16)
        "\x59\x4b\x56\x29\x47\x51\x56\x4c\x5d\x5f\x5d\x4a\x47\x7f\x7d\x6c\x18",
        // "SHA1_Update" / M(Xor2) / S(215) / L(11)
        "\x94\x8f\x86\xf6\x98\x92\xb7\xa3\xa6\xb3\xa2\xc7\x59\x9d\x87\xa8",
        // "" / M(None) / S(0) / L(0)
        "\xda\xfc\x7f\xac\xb5\xd6\x08\x22\x48\x3f\x15\xfb\x1a\xfa\x8e\x96\xb5\xec\xd6\xa0\x72\x90\x56\x29\x40\x10\x82\x93\xde\x0c\xdd\xd2",
        // "CFArrayAppendValue" / M(Xor2) / S(233) / L(18)
        "\xb9\xbc\xbb\x88\x88\x9b\x83\xbb\x8a\x8a\x9f\x94\x9e\xac\x9b\x96\x8f\x9f\xfa",
        // "CFBundleShortVersionString" / M(Xor3) / S(138) / L(26)
        "\xee\xeb\xef\xd8\xc3\xc9\xc1\xc8\xfe\xc5\xc2\xdf\xd9\xfb\xc8\xdf\xde\xc4\xc2\xc3\xfe\xd9\xdf\xc4\xc3\xca\xad\x93\x31\x2b\x05\x67\x54\xf2\x71",
        // "kCFDateFormatterTimeZone" / M(Xor3) / S(238) / L(24)
        "\x64\x4c\x49\x4b\x6e\x7b\x6a\x49\x60\x7d\x62\x6e\x7b\x7b\x6a\x7d\x5b\x66\x62\x6a\x55\x60\x61\x6a\x0f\x8b\xc8\xf0\x72\xfb\x0d\xee\xd1",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(23) / L(16)
        "\x65\x34\x6f\x59\x47\x55\x48\x37\x59\x4f\x48\x52\x43\x41\x43\x54\x06",
        // "CFDataAppendBytes" / M(Xor3) / S(123) / L(17)
        "\xce\xcb\xc9\xec\xf9\xec\xcc\xfd\xfd\xe8\xe3\xe9\xcf\xf4\xf9\xe8\xfe\x8d",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(245) / L(59)
        "\x22\x25\x2e\x25\x51\x2e\x21\x56\x2e\x22\x22\x2e\x26\x57\x2e\x21\x2d\x2e\x27\x55\x2e\x24\x2c\x2e\x52\x52\x2e\x21\x2c\x2e\x50\x25\x2e\x20\x55\x2e\x51\x26\x2e\x26\x20\x2e\x21\x26\x2e\x50\x25\x2e\x2d\x2c\x2e\x50\x52\x2e\x22\x57\x2e\x22\x24\x14\x27\x57\x20\xc2\x17\xd0\x5d\xa5",
        // "d2i_PKCS7_bio" / M(Xor3) / S(197) / L(13)
        "\xb1\xe7\xbc\x8a\x85\x9e\x96\x86\xe2\x8a\xb7\xbc\xba\xd5\x9e\xb3",
        // "d2i_PKCS7_bio" / M(Xor2) / S(160) / L(13)
        "\xd4\x82\xd9\xef\xe0\xfb\xf3\xe3\x87\xef\xd2\xd9\xdf\xb0\xea\xf7",
        // "CFStringCreateWithCString" / M(Rot) / S(76) / L(25)
        "\x8f\x92\x9f\xc0\xbe\xb5\xba\xb3\x8f\xbe\xb1\xad\xc0\xb1\xa3\xb5\xc0\xb4\x8f\x9f\xc0\xbe\xb5\xba\xb3\x4c\xb5\x5d\xbd\xb3\xca\x23\x76\xdc",
        // "EVP_get_digestbyname" / M(Rot) / S(26) / L(20)
        "\x5f\x70\x6a\x79\x81\x7f\x8e\x79\x7e\x83\x81\x7f\x8d\x8e\x7c\x93\x88\x7b\x87\x7f\x1a",
        // "CFBundleUnloadExecutable" / M(Xor2) / S(85) / L(24)
        "\x37\x32\x36\x01\x1a\x10\x18\x11\x21\x1a\x18\x1b\x15\x10\x31\x0c\x11\x17\x01\x00\x15\x16\x18\x11\x74\xe1\xad\xfa\x50\x8b\x66\x74\xb7",
        // "X509_NAME_get_text_by_NID" / M(Xor2) / S(109) / L(25)
        "\x17\x7a\x7f\x76\x10\x01\x0e\x02\x0a\x10\x28\x2a\x3b\x10\x3b\x2a\x37\x3b\x10\x2d\x36\x10\x01\x06\x0b\x4f\x27\xb6\xa0\xf4\x62\x71\x5e\x12",
        // "X509_STORE_new" / M(Xor2) / S(236) / L(14)
        "\xa4\xc9\xcc\xc5\xa3\xaf\xa8\xb3\xae\xb9\xa3\x92\x99\x8b\xfc\xf8",
        // "CFArrayAppendValue" / M(Xor2) / S(0) / L(18)
        "\x50\x55\x52\x61\x61\x72\x6a\x52\x63\x63\x76\x7d\x77\x45\x72\x7f\x66\x76\x13",
        // "start" / M(Xor1) / S(1) / L(5)
        "\x72\x75\x60\x73\x75\x01\x4f\x04\x9f\x08\xed\x87\x92\xb4\x65\xe1",
        // "longjmp" / M(Xor3) / S(74) / L(7)
        "\x36\x35\x34\x3d\x30\x37\x2a\x5a\xdf\x8b\x0a\xc0\x0f\xa7\x36\x00",
        // "CFReadStreamRead" / M(Xor3) / S(163) / L(16)
        "\xf7\xf2\xe6\xd1\xd5\xd0\xe7\xc0\xc6\xd1\xd5\xd9\xe6\xd1\xd5\xd0\xb4",
        // "objc_getClass" / M(Xor2) / S(14) / L(13)
        "\x71\x7c\x74\x7d\x41\x79\x7b\x6a\x5d\x72\x7f\x6d\x6d\x1e\xc5\xc6",
        // "" / M(None) / S(0) / L(0)
        "\x7f\x4c\x33\x8d\xff\x11\x62\xda\x4c\xea\xcb\xe0\x06\x7f\xd6\xa0\x40\x96\xea\x69\x1a\x96\x52\x96\xa1\x18\x12\x5a\x14\xb9\x48\xc3",
        // "mainBundle" / M(Xor1) / S(108) / L(10)
        "\x01\x0d\x05\x02\x2e\x19\x02\x08\x00\x09\x6c\xbe\xa6\x2b\x2e\x1d",
        // "%02x:" / M(Xor2) / S(131) / L(5)
        "\xb6\xa3\xa1\xeb\xa9\x93\x31\xfe\xe5\xbb\x05\xf0\x46\x1b\x05\x41",
        // "dlopen" / M(Xor3) / S(57) / L(6)
        "\x2d\x25\x26\x39\x2c\x27\x49\x0f\x09\x71\xe5\x2c\x55\xad\xd3\xcc",
        // "CFArrayGetCount" / M(Xor2) / S(244) / L(15)
        "\xa7\xa2\xa5\x96\x96\x85\x9d\xa3\x81\x90\xa7\x8b\x91\x8a\x90\xe4",
        // "" / M(None) / S(0) / L(0)
        "\xbc\xe7\x81\x02\x91\xc1\x6a\x49\x53\x96\x71\x69\x85\x48\x72\x11\xfa\x0f\xa3\x97\xb5\x90\xcc\xc7\x20\x35\xeb\x23\xec\xaf\x1e\x16",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(78) / L(24)
        "\x61\x3b\x3d\x3c\x61\x22\x27\x2c\x61\x22\x27\x2c\x1d\x37\x3d\x3a\x2b\x23\x60\x2a\x37\x22\x27\x2c\x4e\x5f\x82\x29\xd2\x5f\xfc\xce\x57",
    };
    
    // Table for storing pointers
    static void *INSOValidateReceipt_Pointers[483] = {
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) BIO_s_mem),
        ((void *) X509_digest),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) X509_free),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) d2i_PKCS7_bio),
        ((void *) CFStringCreateWithCString),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int INSOValidateReceipt_VLGBCRXLZMHT __unused;
    static int INSOValidateReceipt_YUURUMHMKAJI __unused;
    static int INSOValidateReceipt_AFVQTANHTLYF __unused;
    static int INSOValidateReceipt_ACFEVVQVAIKY __unused;
    static int INSOValidateReceipt_VQTNXJHMSZEL __unused;
    static int INSOValidateReceipt_HTNSUGXHMGST __unused;
    static int INSOValidateReceipt_WRMDFVLFQRMA __unused;
    static int INSOValidateReceipt_UFGPFIPLDFOS __unused;
    
    
    // The long jump buffer
    static jmp_buf INSOValidateReceipt_JumpBuf __unused;
    
#define INSOValidateReceipt_ASN1_get_object_00BC003D ((__INSOValidateReceipt_ASN1_get_object) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction004, 61, 37, 16))
#define INSOValidateReceipt_ASN1_INTEGER_free_00FB004F ((__INSOValidateReceipt_ASN1_INTEGER_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction009, 79, 187, 18))
#define INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF ((__INSOValidateReceipt_ASN1_INTEGER_get) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction00B, 223, 205, 17))
#define INSOValidateReceipt_ASN1_OBJECT_free_00BC00E0 ((__INSOValidateReceipt_ASN1_OBJECT_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction007, 224, 120, 17))
#define INSOValidateReceipt_BIO_free_00FB000D ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction00A, 13, 201, 16))
#define INSOValidateReceipt_BIO_new_0064013F ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction00C, 319, 196, 16))
#define INSOValidateReceipt_BIO_new_0064018B ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction003, 395, 1, 16))
#define INSOValidateReceipt_BIO_s_mem_00640139 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction005, 313, 88, 16))
#define INSOValidateReceipt_BIO_s_mem_00BC0100 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction009, 256, 71, 16))
#define INSOValidateReceipt_BIO_write_0064007E ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction007, 126, 90, 16))
#define INSOValidateReceipt_BIO_write_00FB0090 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction004, 144, 126, 16))
#define INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD ((__INSOValidateReceipt_c2i_ASN1_INTEGER) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction008, 461, 23, 17))
#define INSOValidateReceipt_CC_SHA1_Update_01B20193 ((__INSOValidateReceipt_CC_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction006, 403, 1, 16))
#define INSOValidateReceipt_CFArrayCreateMutable_010F00F2 ((__INSOValidateReceipt_CFArrayCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction008, 242, 203, 21))
#define INSOValidateReceipt_CFBundleGetMainBundle_007901A4 ((__INSOValidateReceipt_CFBundleGetMainBundle) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction004, 420, 192, 22))
#define INSOValidateReceipt_CFBundleUnloadExecutable_010F0145 ((__INSOValidateReceipt_CFBundleUnloadExecutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction003, 325, 66, 33))
#define INSOValidateReceipt_CFDataAppendBytes_010F01CE ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction00A, 462, 123, 18))
#define INSOValidateReceipt_CFDataCreateMutable_010F018D ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction005, 397, 41, 20))
#define INSOValidateReceipt_CFDataGetLength_00790136 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction009, 310, 175, 16))
#define INSOValidateReceipt_CFDateFormatterCreate_0169018C ((__INSOValidateReceipt_CFDateFormatterCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction006, 396, 129, 22))
#define INSOValidateReceipt_CFDateFormatterSetProperty_010F010E ((__INSOValidateReceipt_CFDateFormatterSetProperty) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction008, 270, 125, 35))
#define INSOValidateReceipt_CFDictionaryAddValue_007900DB ((__INSOValidateReceipt_CFDictionaryAddValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction00B, 219, 79, 21))
#define INSOValidateReceipt_CFDictionaryCreateMutable_010F0076 ((__INSOValidateReceipt_CFDictionaryCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction006, 118, 25, 34))
#define INSOValidateReceipt_CFDictionaryGetValue_0079002B ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction003, 43, 126, 21))
#define INSOValidateReceipt_CFDictionaryGetValue_0169002B ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, 43, 126, 21))
#define INSOValidateReceipt_CFDictionarySetValue_010F00CB ((__INSOValidateReceipt_CFDictionarySetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction008, 203, 184, 21))
#define INSOValidateReceipt_CFNumberCreate_007900A9 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction008, 169, 114, 16))
#define INSOValidateReceipt_CFRelease_00790053 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction005, 83, 15, 16))
#define INSOValidateReceipt_CFRelease_0079012C ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction007, 300, 113, 16))
#define INSOValidateReceipt_CFRelease_007901A6 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction003, 422, 19, 16))
#define INSOValidateReceipt_CFRelease_010F0053 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction005, 83, 15, 16))
#define INSOValidateReceipt_CFRelease_010F012C ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction007, 300, 113, 16))
#define INSOValidateReceipt_CFRelease_01690053 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction005, 83, 15, 16))
#define INSOValidateReceipt_CFRelease_0169012C ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction007, 300, 113, 16))
#define INSOValidateReceipt_CFRelease_016901A6 ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, 422, 19, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_006401D1 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction007, 465, 160, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_00FB01D0 ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction00A, 464, 197, 16))
#define INSOValidateReceipt_d2i_X509_bio_0064012E ((__INSOValidateReceipt_d2i_X509_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction003, 302, 108, 16))
#define INSOValidateReceipt_EVP_DigestFinal_00640014 ((__INSOValidateReceipt_EVP_DigestFinal) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction008, 20, 197, 16))
#define INSOValidateReceipt_EVP_DigestInit_006401A9 ((__INSOValidateReceipt_EVP_DigestInit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction008, 425, 240, 16))
#define INSOValidateReceipt_EVP_DigestUpdate_00FB00D2 ((__INSOValidateReceipt_EVP_DigestUpdate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction008, 210, 31, 17))
#define INSOValidateReceipt_EVP_get_digestbyname_00BC01B0 ((__INSOValidateReceipt_EVP_get_digestbyname) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction003, 432, 96, 21))
#define INSOValidateReceipt_EVP_MD_CTX_init_00FB009A ((__INSOValidateReceipt_EVP_MD_CTX_init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction008, 154, 16, 16))
#define INSOValidateReceipt_exit_01820128 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction006, 296, 55, 16))
#define INSOValidateReceipt_exit_0182016D ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction007, 365, 180, 16))
#define INSOValidateReceipt_exit_01820187 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction004, 391, 101, 16))
#define INSOValidateReceipt_exit_01B20128 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction006, 296, 55, 16))
#define INSOValidateReceipt_exit_01B20187 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction004, 391, 101, 16))
#define INSOValidateReceipt_exit_01E20128 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction006, 296, 55, 16))
#define INSOValidateReceipt_exit_01E2016D ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction007, 365, 180, 16))
#define INSOValidateReceipt_exit_01E20187 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction004, 391, 101, 16))
#define INSOValidateReceipt_VLGBCRXLZMHT_0079009D ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_VLGBCRXLZMHT, 103, 16))
#define INSOValidateReceipt_VLGBCRXLZMHT_007900E7 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_VLGBCRXLZMHT, 141, 17))
#define INSOValidateReceipt_VLGBCRXLZMHT_010F002B ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_VLGBCRXLZMHT, 126, 21))
#define INSOValidateReceipt_VLGBCRXLZMHT_010F00A9 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_VLGBCRXLZMHT, 114, 16))
#define INSOValidateReceipt_VLGBCRXLZMHT_01690147 ((__INSOValidateReceipt_CFReadStreamClose) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_VLGBCRXLZMHT, 119, 18))
#define INSOValidateReceipt_VLGBCRXLZMHT_0169018D ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_VLGBCRXLZMHT, 41, 20))
#define INSOValidateReceipt_YUURUMHMKAJI_007900A9 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_YUURUMHMKAJI, 114, 16))
#define INSOValidateReceipt_YUURUMHMKAJI_007900BE ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_YUURUMHMKAJI, 160, 16))
#define INSOValidateReceipt_YUURUMHMKAJI_010F01AB ((__INSOValidateReceipt_CFBundleGetIdentifier) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_YUURUMHMKAJI, 234, 22))
#define INSOValidateReceipt_YUURUMHMKAJI_0169002B ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_YUURUMHMKAJI, 126, 21))
#define INSOValidateReceipt_YUURUMHMKAJI_01690156 ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_YUURUMHMKAJI, 87, 16))
#define INSOValidateReceipt_YUURUMHMKAJI_01690158 ((__INSOValidateReceipt_CFArrayGetCount) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_YUURUMHMKAJI, 39, 16))
#define INSOValidateReceipt_AFVQTANHTLYF_00790057 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_AFVQTANHTLYF, 176, 37))
#define INSOValidateReceipt_AFVQTANHTLYF_007900E7 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_AFVQTANHTLYF, 141, 17))
#define INSOValidateReceipt_AFVQTANHTLYF_0079012A ((__INSOValidateReceipt_CFEqual) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_AFVQTANHTLYF, 123, 16))
#define INSOValidateReceipt_AFVQTANHTLYF_0079015E ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_AFVQTANHTLYF, 1, 20))
#define INSOValidateReceipt_AFVQTANHTLYF_010F0034 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_AFVQTANHTLYF, 127, 16))
#define INSOValidateReceipt_AFVQTANHTLYF_010F0084 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_AFVQTANHTLYF, 49, 21))
#define INSOValidateReceipt_AFVQTANHTLYF_010F0089 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_AFVQTANHTLYF, 37, 16))
#define INSOValidateReceipt_ACFEVVQVAIKY_00790071 ((__INSOValidateReceipt_CFReadStreamCreateWithFile) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_ACFEVVQVAIKY, 108, 35))
#define INSOValidateReceipt_ACFEVVQVAIKY_010F00F3 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_ACFEVVQVAIKY, 179, 37))
#define INSOValidateReceipt_ACFEVVQVAIKY_016900E3 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_ACFEVVQVAIKY, 39, 16))
#define INSOValidateReceipt_ACFEVVQVAIKY_0169014F ((__INSOValidateReceipt_CFArrayAppendValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_ACFEVVQVAIKY, 96, 19))
#define INSOValidateReceipt_ACFEVVQVAIKY_01820180 ((__INSOValidateReceipt_CC_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_ACFEVVQVAIKY, 219, 16))
#define INSOValidateReceipt_VQTNXJHMSZEL_00790068 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_VQTNXJHMSZEL, 217, 16))
#define INSOValidateReceipt_VQTNXJHMSZEL_00790081 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_VQTNXJHMSZEL, 161, 17))
#define INSOValidateReceipt_VQTNXJHMSZEL_007900A9 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_VQTNXJHMSZEL, 114, 16))
#define INSOValidateReceipt_VQTNXJHMSZEL_00790109 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_VQTNXJHMSZEL, 47, 21))
#define INSOValidateReceipt_VQTNXJHMSZEL_010F0045 ((__INSOValidateReceipt_CFArrayGetValueAtIndex) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_VQTNXJHMSZEL, 164, 23))
#define INSOValidateReceipt_VQTNXJHMSZEL_010F0105 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_VQTNXJHMSZEL, 231, 18))
#define INSOValidateReceipt_HTNSUGXHMGST_00790022 ((__INSOValidateReceipt_CFDateCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_HTNSUGXHMGST, 140, 16))
#define INSOValidateReceipt_HTNSUGXHMGST_010F0040 ((__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_HTNSUGXHMGST, 110, 48))
#define INSOValidateReceipt_HTNSUGXHMGST_0169011D ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_HTNSUGXHMGST, 191, 16))
#define INSOValidateReceipt_HTNSUGXHMGST_01B20063 ((__INSOValidateReceipt_CC_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_HTNSUGXHMGST, 214, 16))
#define INSOValidateReceipt_WRMDFVLFQRMA_010F0092 ((__INSOValidateReceipt_CFDateFormatterCreateDateFromString) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_WRMDFVLFQRMA, 68, 36))
#define INSOValidateReceipt_WRMDFVLFQRMA_010F0140 ((__INSOValidateReceipt_CFDateCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_WRMDFVLFQRMA, 77, 16))
#define INSOValidateReceipt_WRMDFVLFQRMA_010F0156 ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_WRMDFVLFQRMA, 87, 16))
#define INSOValidateReceipt_WRMDFVLFQRMA_016900B8 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_WRMDFVLFQRMA, 8, 18))
#define INSOValidateReceipt_WRMDFVLFQRMA_016900E3 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_WRMDFVLFQRMA, 39, 16))
#define INSOValidateReceipt_WRMDFVLFQRMA_01690120 ((__INSOValidateReceipt_CFReadStreamOpen) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_WRMDFVLFQRMA, 147, 17))
#define INSOValidateReceipt_UFGPFIPLDFOS_00790034 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_UFGPFIPLDFOS, 127, 16))
#define INSOValidateReceipt_UFGPFIPLDFOS_00790068 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_UFGPFIPLDFOS, 217, 16))
#define INSOValidateReceipt_UFGPFIPLDFOS_010F01BC ((__INSOValidateReceipt_CFDateFormatterSetFormat) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_UFGPFIPLDFOS, 215, 33))
#define INSOValidateReceipt_UFGPFIPLDFOS_0169013C ((__INSOValidateReceipt_CFAbsoluteTimeGetCurrent) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_UFGPFIPLDFOS, 3, 33))
#define INSOValidateReceipt_UFGPFIPLDFOS_01690150 ((__INSOValidateReceipt_CFReadStreamRead) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_UFGPFIPLDFOS, 201, 17))
#define INSOValidateReceipt_UFGPFIPLDFOS_01E2002D ((__INSOValidateReceipt_CC_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_UFGPFIPLDFOS, 69, 16))
#define INSOValidateReceipt_kCFBundleIdentifierKey_010F0028 ((__INSOValidateReceipt_kCFBundleIdentifierKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction004, 271, 138, 67, INSOValidateReceipt_ObfuscationFunction00B, 40, 126, 23))
#define INSOValidateReceipt_kCFDateFormatterTimeZone_0169007D ((__INSOValidateReceipt_kCFDateFormatterTimeZone) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction003, 125, 240, 33))
#define INSOValidateReceipt_kCFTypeArrayCallBacks_0169010B ((__INSOValidateReceipt_kCFTypeArrayCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction005, 267, 4, 22))
#define INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00790183 ((__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 121, 42, 67, INSOValidateReceipt_ObfuscationFunction005, 387, 132, 38))
#define INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_016900FA ((__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 361, 226, 67, INSOValidateReceipt_ObfuscationFunction00C, 250, 93, 32))
#define INSOValidateReceipt_longjmp_018200A0 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction00C, 160, 252, 16))
#define INSOValidateReceipt_longjmp_0182016E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction003, 366, 245, 16))
#define INSOValidateReceipt_longjmp_018201D9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 386, 184, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 74, 16))
#define INSOValidateReceipt_longjmp_01B2016E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction003, 366, 245, 16))
#define INSOValidateReceipt_longjmp_01B201D9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 74, 16))
#define INSOValidateReceipt_longjmp_01E200A0 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction00C, 160, 252, 16))
#define INSOValidateReceipt_longjmp_01E2016E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction003, 366, 245, 16))
#define INSOValidateReceipt_longjmp_01E201D9 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 482, 78, 33, INSOValidateReceipt_ObfuscationFunction00A, 473, 74, 16))
#define INSOValidateReceipt_OBJ_txt2obj_00FB00F4 ((__INSOValidateReceipt_OBJ_txt2obj) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction009, 244, 17, 16))
#define INSOValidateReceipt_objc_getClass_0069007F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction003, 127, 141, 16))
#define INSOValidateReceipt_objc_getClass_006901DB ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction008, 475, 14, 16))
#define INSOValidateReceipt_objc_getClass_00DD01AA ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction006, 426, 248, 16))
#define INSOValidateReceipt_objc_getClass_00DD01DB ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction008, 475, 14, 16))
#define INSOValidateReceipt_objc_getClass_0170007F ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction003, 127, 141, 16))
#define INSOValidateReceipt_objc_getClass_017001DB ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction008, 475, 14, 16))
#define INSOValidateReceipt_objc_lookUpClass_0069000F ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction009, 15, 145, 17))
#define INSOValidateReceipt_objc_lookUpClass_017000F5 ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction009, 245, 27, 17))
#define INSOValidateReceipt_objc_msgSend_00690038 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction008, 56, 173, 16))
#define INSOValidateReceipt_objc_msgSend_0069005A ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction00B, 90, 150, 16))
#define INSOValidateReceipt_objc_msgSend_00DD0038 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction008, 56, 173, 16))
#define INSOValidateReceipt_objc_msgSend_00DD005A ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction00B, 90, 150, 16))
#define INSOValidateReceipt_objc_msgSend_01700038 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction008, 56, 173, 16))
#define INSOValidateReceipt_objc_msgSend_0170005A ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction00B, 90, 150, 16))
#define INSOValidateReceipt_objc_msgSend_0170007A ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction003, 122, 87, 16))
#define INSOValidateReceipt_OpenSSL_add_all_digests_00FB0017 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction004, 23, 107, 32))
#define INSOValidateReceipt_OpenSSL_add_all_digests_00FB01B5 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction006, 437, 215, 32))
#define INSOValidateReceipt_PKCS7_free_00640015 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction007, 21, 253, 16))
#define INSOValidateReceipt_PKCS7_get0_signers_00FB0114 ((__INSOValidateReceipt_PKCS7_get0_signers) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction009, 276, 77, 19))
#define INSOValidateReceipt_PKCS7_verify_006400A6 ((__INSOValidateReceipt_PKCS7_verify) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction006, 166, 35, 16))
#define INSOValidateReceipt_sel_registerName_00690082 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 105, 173, 23, INSOValidateReceipt_ObfuscationFunction007, 130, 207, 17))
#define INSOValidateReceipt_sel_registerName_00DD0082 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction007, 130, 207, 17))
#define INSOValidateReceipt_sel_registerName_00DD014E ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 221, 102, 23, INSOValidateReceipt_ObfuscationFunction008, 334, 2, 17))
#define INSOValidateReceipt_sel_registerName_01700082 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction007, 130, 207, 17))
#define INSOValidateReceipt_sel_registerName_0170012B ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction005, 299, 144, 17))
#define INSOValidateReceipt_sel_registerName_0170014E ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 368, 201, 23, INSOValidateReceipt_ObfuscationFunction008, 334, 2, 17))
#define INSOValidateReceipt_setjmp_01B2002A ((__INSOValidateReceipt_setjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 434, 218, 33, INSOValidateReceipt_ObfuscationFunction003, 42, 68, 16))
#define INSOValidateReceipt_SHA1_00FB0032 ((__INSOValidateReceipt_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction004, 50, 33, 16))
#define INSOValidateReceipt_SHA1_Final_00FB00AC ((__INSOValidateReceipt_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction00A, 172, 4, 16))
#define INSOValidateReceipt_SHA1_Init_00640162 ((__INSOValidateReceipt_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction00A, 354, 82, 16))
#define INSOValidateReceipt_SHA1_Update_00FB0157 ((__INSOValidateReceipt_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction009, 343, 210, 16))
#define INSOValidateReceipt_sk_free_00BC0138 ((__INSOValidateReceipt_sk_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction004, 312, 43, 16))
#define INSOValidateReceipt_sk_num_00BC0153 ((__INSOValidateReceipt_sk_num) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction005, 339, 151, 16))
#define INSOValidateReceipt_sk_value_00640194 ((__INSOValidateReceipt_sk_value) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction009, 404, 157, 16))
#define INSOValidateReceipt_X509_digest_0064013A ((__INSOValidateReceipt_X509_digest) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction009, 314, 54, 16))
#define INSOValidateReceipt_X509_free_00BC00F1 ((__INSOValidateReceipt_X509_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction005, 241, 184, 16))
#define INSOValidateReceipt_X509_get_ext_by_OBJ_00FB010C ((__INSOValidateReceipt_X509_get_ext_by_OBJ) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction00C, 268, 28, 20))
#define INSOValidateReceipt_X509_NAME_get_text_by_NID_00BC01D5 ((__INSOValidateReceipt_X509_NAME_get_text_by_NID) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 188, 241, 16, INSOValidateReceipt_ObfuscationFunction007, 469, 109, 34))
#define INSOValidateReceipt_X509_STORE_add_cert_006400FD ((__INSOValidateReceipt_X509_STORE_add_cert) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction005, 253, 98, 20))
#define INSOValidateReceipt_X509_STORE_free_00FB0177 ((__INSOValidateReceipt_X509_STORE_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 251, 154, 16, INSOValidateReceipt_ObfuscationFunction004, 375, 117, 16))
#define INSOValidateReceipt_X509_STORE_new_006401D6 ((__INSOValidateReceipt_X509_STORE_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction003, 100, 51, 16, INSOValidateReceipt_ObfuscationFunction008, 470, 236, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction003(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction003CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction003(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[236])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction004(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction004CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction004(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[466])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction005(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction005CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction005(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[408])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction006(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction006CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction006(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[254])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction007(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction007CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction007(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction008(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction008CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction008(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[254])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction009(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction009CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction009(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction00A(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00ACF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00A(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[466])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00B(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00BCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction00B(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[408])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00C(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00CCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00C(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[466])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_decrypt INSOValidateReceipt_func1, int INSOValidateReceipt_index1, int INSOValidateReceipt_val1, int INSOValidateReceipt_len1, INSOValidateReceipt_decrypt INSOValidateReceipt_func2, int INSOValidateReceipt_index2, int INSOValidateReceipt_val2, int INSOValidateReceipt_len2) {
        char INSOValidateReceipt_tmp1[483], INSOValidateReceipt_tmp2[483];
        // Load the library if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] == NULL) {
            INSOValidateReceipt_func1(INSOValidateReceipt_Strings[INSOValidateReceipt_index1], INSOValidateReceipt_tmp1, INSOValidateReceipt_val1, INSOValidateReceipt_len1);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] = ((__INSOValidateReceipt_dlopen) INSOValidateReceipt_Pointers[479])(INSOValidateReceipt_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] == NULL) {
            INSOValidateReceipt_func2(INSOValidateReceipt_Strings[INSOValidateReceipt_index2], INSOValidateReceipt_tmp2, INSOValidateReceipt_val2, INSOValidateReceipt_len2);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] = ((__INSOValidateReceipt_dlsym) INSOValidateReceipt_Pointers[17])(INSOValidateReceipt_Pointers[INSOValidateReceipt_index1], INSOValidateReceipt_tmp2);
        }
        return INSOValidateReceipt_Pointers[INSOValidateReceipt_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetMainBundle016(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle");
        // Retrieve the main bundle
        INSOValidateReceipt_ctx->main_bundle = INSOValidateReceipt_CFBundleGetMainBundle_007901A4();
        if (!INSOValidateReceipt_ctx->main_bundle) {
            // Dead code
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_ctx->main_bundle);
            INSOValidateReceipt_CFBundleUnloadExecutable_010F0145((CFBundleRef) INSOValidateReceipt_ctx->main_bundle);
        }
        // Global variables computation
        // Set to 327
        INSOValidateReceipt_VLGBCRXLZMHT = 327;
        // Set to 350
        INSOValidateReceipt_AFVQTANHTLYF = 350;
        // Set to 113
        INSOValidateReceipt_ACFEVVQVAIKY = 113;
        // Set to 261
        INSOValidateReceipt_VQTNXJHMSZEL = 261;
        // Set to 288
        INSOValidateReceipt_WRMDFVLFQRMA = 288;
        // Set to 336
        INSOValidateReceipt_UFGPFIPLDFOS = 336;
    }
#else
#define INSOValidateReceipt_GetMainBundle016(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle"); \
INSOValidateReceipt_ctx->main_bundle = INSOValidateReceipt_CFBundleGetMainBundle_007901A4(); \
if (!INSOValidateReceipt_ctx->main_bundle) { \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_ctx->main_bundle); \
INSOValidateReceipt_CFBundleUnloadExecutable_010F0145((CFBundleRef) INSOValidateReceipt_ctx->main_bundle); \
} \
INSOValidateReceipt_VLGBCRXLZMHT = 327; \
INSOValidateReceipt_AFVQTANHTLYF = 350; \
INSOValidateReceipt_ACFEVVQVAIKY = 113; \
INSOValidateReceipt_VQTNXJHMSZEL = 261; \
INSOValidateReceipt_WRMDFVLFQRMA = 288; \
INSOValidateReceipt_UFGPFIPLDFOS = 336; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void INSOValidateReceipt_LoadReceipt042(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle;
        CFURLRef INSOValidateReceipt_url1;
        CFReadStreamRef INSOValidateReceipt_stream;
        CFMutableDataRef INSOValidateReceipt_data;
        CFIndex INSOValidateReceipt_count;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3;
        uint8_t INSOValidateReceipt_buffer[483];
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt");
        // Get NSBundle class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[193]), INSOValidateReceipt_str1_, 53, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_00DD01DB(INSOValidateReceipt_str1);
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[112]), INSOValidateReceipt_str2_, 193, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_0170014E(INSOValidateReceipt_str2);
        INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2);
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[340]), INSOValidateReceipt_str3_, 250, 19);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_0170014E(INSOValidateReceipt_str3);
        INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3));
        // Create a stream from the receipt file
        INSOValidateReceipt_stream = INSOValidateReceipt_ACFEVVQVAIKY_00790071(kCFAllocatorDefault, INSOValidateReceipt_url1);
        if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_WRMDFVLFQRMA_01690120(INSOValidateReceipt_stream)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_url1);
            INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_str1);
            goto INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail;
        }
        // Create the data object that will contains receipt data
        INSOValidateReceipt_data = INSOValidateReceipt_AFVQTANHTLYF_0079015E(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            INSOValidateReceipt_count = INSOValidateReceipt_UFGPFIPLDFOS_01690150(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483);
            if (INSOValidateReceipt_count > 0) {
                INSOValidateReceipt_VQTNXJHMSZEL_010F0105(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count);
            }
        } while (INSOValidateReceipt_count > 0);
        // Close the stream
        INSOValidateReceipt_VLGBCRXLZMHT_01690147(INSOValidateReceipt_stream);
        if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_ctx->receipt_data);
        INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data;
        // Global variables computation
        // From 288 to 342
        INSOValidateReceipt_WRMDFVLFQRMA -= 174; INSOValidateReceipt_WRMDFVLFQRMA *= 3;
    INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_stream);
    }
#else
#define INSOValidateReceipt_LoadReceipt042(INSOValidateReceipt_ctx) { \
id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle; \
CFURLRef INSOValidateReceipt_url1; \
CFReadStreamRef INSOValidateReceipt_stream; \
CFMutableDataRef INSOValidateReceipt_data; \
CFIndex INSOValidateReceipt_count; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3; \
uint8_t INSOValidateReceipt_buffer[483]; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[193]), INSOValidateReceipt_str1_, 53, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_getClass_00DD01DB(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[112]), INSOValidateReceipt_str2_, 193, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_0170014E(INSOValidateReceipt_str2); \
INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[340]), INSOValidateReceipt_str3_, 250, 19); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_0170014E(INSOValidateReceipt_str3); \
INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3)); \
INSOValidateReceipt_stream = INSOValidateReceipt_ACFEVVQVAIKY_00790071(kCFAllocatorDefault, INSOValidateReceipt_url1); \
if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_WRMDFVLFQRMA_01690120(INSOValidateReceipt_stream)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_url1); \
INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_str1); \
goto INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_data = INSOValidateReceipt_AFVQTANHTLYF_0079015E(kCFAllocatorDefault, 0); \
do { \
INSOValidateReceipt_count = INSOValidateReceipt_UFGPFIPLDFOS_01690150(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483); \
if (INSOValidateReceipt_count > 0) { \
INSOValidateReceipt_VQTNXJHMSZEL_010F0105(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count); \
} \
} while (INSOValidateReceipt_count > 0); \
INSOValidateReceipt_VLGBCRXLZMHT_01690147(INSOValidateReceipt_stream); \
if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data; \
INSOValidateReceipt_WRMDFVLFQRMA -= 174; INSOValidateReceipt_WRMDFVLFQRMA *= 3;  \
INSOValidateReceipt_LoadReceipt042_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_010F012C(INSOValidateReceipt_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        Class INSOValidateReceipt_deviceClass;
        id INSOValidateReceipt_device, INSOValidateReceipt_identifier;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4;
        uuid_t INSOValidateReceipt_uuid;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier");
        // Get the UIDevice class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[359]), INSOValidateReceipt_str1_, 165, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_0069000F(INSOValidateReceipt_str1);
        // Call [UIDevice currentDevice]
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[206]), INSOValidateReceipt_str2_, 0, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str2);
        INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2);
        // Call [device identifierForVendor]
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[326]), INSOValidateReceipt_str3_, 160, 20);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str3);
        INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3);
        // Call [identifier getUUIDBytes:INSOValidateReceipt_uuid]
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[107]), INSOValidateReceipt_str4_, 215, 16);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid);
        if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_010F0053(INSOValidateReceipt_ctx->guid_data);
        volatile int INSOValidateReceipt_size = 14; INSOValidateReceipt_size -= 9; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;
        INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_WRMDFVLFQRMA_010F0156(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size);
        // Global variables computation
        // Set to 427
        INSOValidateReceipt_YUURUMHMKAJI = 427;
        // From 350 to 87
        INSOValidateReceipt_AFVQTANHTLYF += 172; INSOValidateReceipt_AFVQTANHTLYF /= 6;
        // Set to 104
        INSOValidateReceipt_VQTNXJHMSZEL = 104;
    }
#else
#define INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_ctx) { \
Class INSOValidateReceipt_deviceClass; \
id INSOValidateReceipt_device, INSOValidateReceipt_identifier; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4; \
uuid_t INSOValidateReceipt_uuid; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[359]), INSOValidateReceipt_str1_, 165, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_0069000F(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[206]), INSOValidateReceipt_str2_, 0, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str2); \
INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[326]), INSOValidateReceipt_str3_, 160, 20); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str3); \
INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3); \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[107]), INSOValidateReceipt_str4_, 215, 16); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_01700082(INSOValidateReceipt_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid); \
if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_010F0053(INSOValidateReceipt_ctx->guid_data); \
volatile int INSOValidateReceipt_size = 14; INSOValidateReceipt_size -= 9; INSOValidateReceipt_size *= 3; INSOValidateReceipt_size += 1;  \
INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_WRMDFVLFQRMA_010F0156(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size); \
INSOValidateReceipt_YUURUMHMKAJI = 427; \
INSOValidateReceipt_AFVQTANHTLYF += 172; INSOValidateReceipt_AFVQTANHTLYF /= 6;  \
INSOValidateReceipt_VQTNXJHMSZEL = 104; \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleIdentifier05B(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49);
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier");
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_YUURUMHMKAJI_010F01AB((CFBundleRef) INSOValidateReceipt_ctx->main_bundle);
        if (INSOValidateReceipt_VQTNXJHMSZEL_00790068(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E201D9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str2);
        }
        // Global variables computation
        // From 113 to 243
        INSOValidateReceipt_ACFEVVQVAIKY -= 53; INSOValidateReceipt_ACFEVVQVAIKY *= 4; INSOValidateReceipt_ACFEVVQVAIKY += 3;
        // From 336 to 104
        INSOValidateReceipt_UFGPFIPLDFOS += 184; INSOValidateReceipt_UFGPFIPLDFOS /= 5;
        INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleIdentifier05B(INSOValidateReceipt_ctx) { \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier"); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_YUURUMHMKAJI_010F01AB((CFBundleRef) INSOValidateReceipt_ctx->main_bundle); \
if (INSOValidateReceipt_VQTNXJHMSZEL_00790068(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E201D9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str2); \
} \
INSOValidateReceipt_ACFEVVQVAIKY -= 53; INSOValidateReceipt_ACFEVVQVAIKY *= 4; INSOValidateReceipt_ACFEVVQVAIKY += 3;  \
INSOValidateReceipt_UFGPFIPLDFOS += 184; INSOValidateReceipt_UFGPFIPLDFOS /= 5;  \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleVersion05F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version");
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16);
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[94]), 242, 16);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_ACFEVVQVAIKY_010F00F3((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_UFGPFIPLDFOS_00790068(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B201D9(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2);
        }
        // Global variables computation
        // From 327 to 397
        INSOValidateReceipt_VLGBCRXLZMHT -= 195; INSOValidateReceipt_VLGBCRXLZMHT *= 3; INSOValidateReceipt_VLGBCRXLZMHT += 1;
        // From 427 to 190
        INSOValidateReceipt_YUURUMHMKAJI += 333; INSOValidateReceipt_YUURUMHMKAJI /= 4;
        // From 87 to 137
        INSOValidateReceipt_AFVQTANHTLYF -= 42; INSOValidateReceipt_AFVQTANHTLYF *= 3; INSOValidateReceipt_AFVQTANHTLYF += 2;
        // From 243 to 335
        INSOValidateReceipt_ACFEVVQVAIKY -= 132; INSOValidateReceipt_ACFEVVQVAIKY *= 3; INSOValidateReceipt_ACFEVVQVAIKY += 2;
        // From 104 to 129
        INSOValidateReceipt_VQTNXJHMSZEL -= 61; INSOValidateReceipt_VQTNXJHMSZEL *= 3;
        // Set to 64
        INSOValidateReceipt_HTNSUGXHMGST = 64;
        // From 342 to 146
        INSOValidateReceipt_WRMDFVLFQRMA += 242; INSOValidateReceipt_WRMDFVLFQRMA /= 4;
        // From 104 to 444
        INSOValidateReceipt_UFGPFIPLDFOS -= 30; INSOValidateReceipt_UFGPFIPLDFOS *= 6;
        INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2);
        INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleVersion05F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version"); \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[94]), 242, 16); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_ACFEVVQVAIKY_010F00F3((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_UFGPFIPLDFOS_00790068(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B201D9(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2); \
} \
INSOValidateReceipt_VLGBCRXLZMHT -= 195; INSOValidateReceipt_VLGBCRXLZMHT *= 3; INSOValidateReceipt_VLGBCRXLZMHT += 1;  \
INSOValidateReceipt_YUURUMHMKAJI += 333; INSOValidateReceipt_YUURUMHMKAJI /= 4;  \
INSOValidateReceipt_AFVQTANHTLYF -= 42; INSOValidateReceipt_AFVQTANHTLYF *= 3; INSOValidateReceipt_AFVQTANHTLYF += 2;  \
INSOValidateReceipt_ACFEVVQVAIKY -= 132; INSOValidateReceipt_ACFEVVQVAIKY *= 3; INSOValidateReceipt_ACFEVVQVAIKY += 2;  \
INSOValidateReceipt_VQTNXJHMSZEL -= 61; INSOValidateReceipt_VQTNXJHMSZEL *= 3;  \
INSOValidateReceipt_HTNSUGXHMGST = 64; \
INSOValidateReceipt_WRMDFVLFQRMA += 242; INSOValidateReceipt_WRMDFVLFQRMA /= 4;  \
INSOValidateReceipt_UFGPFIPLDFOS -= 30; INSOValidateReceipt_UFGPFIPLDFOS *= 6;  \
INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00790053(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetReceiptInformation063(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context;
        INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context;
        CFNumberRef INSOValidateReceipt_key;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2;
        int INSOValidateReceipt_type;
        int INSOValidateReceipt_xclass;
        long INSOValidateReceipt_length;
        CFDateFormatterRef INSOValidateReceipt_formatter = NULL;
        CFTimeZoneRef INSOValidateReceipt_tz = NULL;
        BIO *INSOValidateReceipt_bio_p7;
        PKCS7 *INSOValidateReceipt_pkcs7;
        ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content;
        ASN1_INTEGER *INSOValidateReceipt_value;
        const unsigned char *INSOValidateReceipt_seq_end;
        long INSOValidateReceipt_attr_type;
        long INSOValidateReceipt_attr_version;
        int INSOValidateReceipt_str_type;
        long INSOValidateReceipt_str_length;
        const unsigned char *INSOValidateReceipt_str_ptr;
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context;
        long INSOValidateReceipt_number;
        int INSOValidateReceipt_num_type;
        long INSOValidateReceipt_num_length;
        const unsigned char *INSOValidateReceipt_num_ptr;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_0064013F(INSOValidateReceipt_BIO_s_mem_00640139());
        INSOValidateReceipt_BIO_write_00FB0090(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VQTNXJHMSZEL_00790081((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_AFVQTANHTLYF_010F0089((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_006401D1(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_0169018C(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[204]), 203, 33);
        INSOValidateReceipt_UFGPFIPLDFOS_010F01BC(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1);
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1);
        INSOValidateReceipt_tz = INSOValidateReceipt_HTNSUGXHMGST_010F0040(NULL, 0.0);
        INSOValidateReceipt_CFDateFormatterSetProperty_010F010E(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_0169007D, INSOValidateReceipt_tz);
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_tz);
        // Initial context
        INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data;
        INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data;
        INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length;
        INSOValidateReceipt_receipt_context.parent = NULL;
        INSOValidateReceipt_receipt_context.dictionary = NULL;
        INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context;
        while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
            if (!INSOValidateReceipt_current_context->dictionary) {
                // Create the target dictionary
                INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_010F0076(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00790183, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_016900FA);
                // Decode payload from ASN.1
                INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SET) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
            }
            // Iterate over attributes
            while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
                // Parse attribute sequence
                INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length;
                INSOValidateReceipt_attr_type = 0;
                INSOValidateReceipt_attr_version = 0;
                // Parse the attribute type
                INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value);
                // Parse the attribute version
                INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value);
                // Check the attribute value
                INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 3));
                INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 3) + 1);
                INSOValidateReceipt_value1 = NULL;
                INSOValidateReceipt_value2 = NULL;
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type);
                switch (INSOValidateReceipt_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleId:
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion:
                    case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion:
                    case INSOValidateReceipt_InAppAttributeTypeProductIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false);
                        INSOValidateReceipt_value2 = INSOValidateReceipt_YUURUMHMKAJI_007900BE(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate:
                    case INSOValidateReceipt_InAppAttributeTypeCancellationDate:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypePurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_WRMDFVLFQRMA_010F0092(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case INSOValidateReceipt_InAppAttributeTypeQuantity:
                    case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId:
                    {
                        INSOValidateReceipt_num_type = 0;
                        INSOValidateReceipt_num_length = 0;
                        INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr);
                        if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length);
                        INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value);
                        INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberLongType, &INSOValidateReceipt_number);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue:
                    case INSOValidateReceipt_ReceiptAttributeTypeHash:
                    {
                        INSOValidateReceipt_value1 = INSOValidateReceipt_YUURUMHMKAJI_007900BE(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_AFVQTANHTLYF_010F0089((CFDataRef) INSOValidateReceipt_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length;
                        INSOValidateReceipt_inapp_context.dictionary = NULL;
                        INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context;
                        INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context;
                        goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key;
                    }
                    default:
                        break;
                }
                if (INSOValidateReceipt_value1) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                    INSOValidateReceipt_CFDictionaryAddValue_007900DB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1);
                }
                if (INSOValidateReceipt_value2) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFDictionaryAddValue_007900DB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2);
                    INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value2);
                }
                // Move past the attribute
                INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length;
            }
        INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key:
            // If the current context is a new one, continue parsing
            if (!INSOValidateReceipt_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (INSOValidateReceipt_current_context->parent) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase");
                INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
                INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                INSOValidateReceipt_value1 = INSOValidateReceipt_CFDictionaryGetValue_0169002B((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key);
                if (!INSOValidateReceipt_value1) {
                    INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_010F00F2(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_0169010B);
                    INSOValidateReceipt_CFDictionarySetValue_010F00CB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1);
                }
                INSOValidateReceipt_ACFEVVQVAIKY_0169014F((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
                // Switch to parent context
                INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent;
                // Move past the child context
                INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end;
            }
        }
        if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_ctx->receipt_dict);
        INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary;
        // Global variables computation
        // Set to 231
        INSOValidateReceipt_AFVQTANHTLYF = 231;
        // From 64 to 285
        INSOValidateReceipt_HTNSUGXHMGST -= 17; INSOValidateReceipt_HTNSUGXHMGST *= 6; INSOValidateReceipt_HTNSUGXHMGST += 3;
    INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_00640015(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00FB000D(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_formatter);
    }
#else
#define INSOValidateReceipt_GetReceiptInformation063(INSOValidateReceipt_ctx) { \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context; \
INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context; \
CFNumberRef INSOValidateReceipt_key; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2; \
int INSOValidateReceipt_type; \
int INSOValidateReceipt_xclass; \
long INSOValidateReceipt_length; \
CFDateFormatterRef INSOValidateReceipt_formatter = NULL; \
CFTimeZoneRef INSOValidateReceipt_tz = NULL; \
BIO *INSOValidateReceipt_bio_p7; \
PKCS7 *INSOValidateReceipt_pkcs7; \
ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content; \
ASN1_INTEGER *INSOValidateReceipt_value; \
const unsigned char *INSOValidateReceipt_seq_end; \
long INSOValidateReceipt_attr_type; \
long INSOValidateReceipt_attr_version; \
int INSOValidateReceipt_str_type; \
long INSOValidateReceipt_str_length; \
const unsigned char *INSOValidateReceipt_str_ptr; \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context; \
long INSOValidateReceipt_number; \
int INSOValidateReceipt_num_type; \
long INSOValidateReceipt_num_length; \
const unsigned char *INSOValidateReceipt_num_ptr; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_0064013F(INSOValidateReceipt_BIO_s_mem_00640139()); \
INSOValidateReceipt_BIO_write_00FB0090(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_VQTNXJHMSZEL_00790081((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_AFVQTANHTLYF_010F0089((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_006401D1(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_0169018C(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[204]), 203, 33); \
INSOValidateReceipt_UFGPFIPLDFOS_010F01BC(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1); \
INSOValidateReceipt_tz = INSOValidateReceipt_HTNSUGXHMGST_010F0040(NULL, 0.0); \
INSOValidateReceipt_CFDateFormatterSetProperty_010F010E(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_0169007D, INSOValidateReceipt_tz); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_tz); \
INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data; \
INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data; \
INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length; \
INSOValidateReceipt_receipt_context.parent = NULL; \
INSOValidateReceipt_receipt_context.dictionary = NULL; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context; \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
if (!INSOValidateReceipt_current_context->dictionary) { \
INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_CFDictionaryCreateMutable_010F0076(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00790183, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_016900FA); \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SET) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
} \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_attr_type = 0; \
INSOValidateReceipt_attr_version = 0; \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 3)); \
INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 3) + 1); \
INSOValidateReceipt_value1 = NULL; \
INSOValidateReceipt_value2 = NULL; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type); \
switch (INSOValidateReceipt_attr_type) { \
case INSOValidateReceipt_ReceiptAttributeTypeBundleId: \
case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion: \
case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion: \
case INSOValidateReceipt_InAppAttributeTypeProductIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false); \
INSOValidateReceipt_value2 = INSOValidateReceipt_YUURUMHMKAJI_007900BE(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate: \
case INSOValidateReceipt_InAppAttributeTypeCancellationDate: \
case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypePurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[208])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false); \
INSOValidateReceipt_value1 = INSOValidateReceipt_WRMDFVLFQRMA_010F0092(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_InAppAttributeTypeQuantity: \
case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId: \
{ \
INSOValidateReceipt_num_type = 0; \
INSOValidateReceipt_num_length = 0; \
INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_00BC003D(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr); \
if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_00BC01CD(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length); \
INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_00BC00DF(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_00FB004F(INSOValidateReceipt_value); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberLongType, &INSOValidateReceipt_number); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue: \
case INSOValidateReceipt_ReceiptAttributeTypeHash: \
{ \
INSOValidateReceipt_value1 = INSOValidateReceipt_YUURUMHMKAJI_007900BE(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_AFVQTANHTLYF_010F0089((CFDataRef) INSOValidateReceipt_value1)); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase: \
{ \
INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_inapp_context.dictionary = NULL; \
INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context; \
goto INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key; \
} \
default: \
break; \
} \
if (INSOValidateReceipt_value1) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_CFDictionaryAddValue_007900DB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1); \
} \
if (INSOValidateReceipt_value2) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key2); \
INSOValidateReceipt_CFDictionaryAddValue_007900DB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value2); \
} \
INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length; \
} \
INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_key: \
if (!INSOValidateReceipt_current_context->dictionary) { \
continue; \
} \
if (INSOValidateReceipt_current_context->parent) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDictionaryGetValue_0169002B((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key); \
if (!INSOValidateReceipt_value1) { \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_010F00F2(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_0169010B); \
INSOValidateReceipt_CFDictionarySetValue_010F00CB((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_value1); \
} \
INSOValidateReceipt_ACFEVVQVAIKY_0169014F((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent; \
INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end; \
} \
} \
if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary; \
INSOValidateReceipt_AFVQTANHTLYF = 231; \
INSOValidateReceipt_HTNSUGXHMGST -= 17; INSOValidateReceipt_HTNSUGXHMGST *= 6; INSOValidateReceipt_HTNSUGXHMGST += 3;  \
INSOValidateReceipt_GetReceiptInformation063_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_00640015(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00FB000D(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptSignature067(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        BIO *INSOValidateReceipt_bio_p7 = NULL;
        PKCS7 *INSOValidateReceipt_pkcs7 = NULL;
        STACK_OF(X509) *INSOValidateReceipt_certificates = NULL;
        X509 *INSOValidateReceipt_certificate = NULL;
        int INSOValidateReceipt_count, INSOValidateReceipt_index1;
        unsigned int INSOValidateReceipt_index2;
        ASN1_OBJECT *INSOValidateReceipt_oid = NULL;
        char *INSOValidateReceipt_str1;
        char *INSOValidateReceipt_str2;
        char *INSOValidateReceipt_str3;
        char *INSOValidateReceipt_str4;
        char *INSOValidateReceipt_str5;
        int INSOValidateReceipt_verify, INSOValidateReceipt_status;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_0064018B(INSOValidateReceipt_BIO_s_mem_00BC0100());
        INSOValidateReceipt_BIO_write_0064007E(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_AFVQTANHTLYF_007900E7((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HTNSUGXHMGST_0169011D((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00FB01D0(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_OpenSSL_add_all_digests_00FB0017();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        INSOValidateReceipt_verify = 0;
        INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert;
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_00BC0153((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00640194((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            char INSOValidateReceipt_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00BC01D5(NULL, NID_commonName, NULL, 0);
            if (INSOValidateReceipt_status > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
            }
            // Retrieve the common name
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00BC01D5(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483);
            if (INSOValidateReceipt_status <= 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
            }
            volatile unsigned int INSOValidateReceipt_digest_length = 8; INSOValidateReceipt_digest_length -= 3; INSOValidateReceipt_digest_length *= 4;
            char INSOValidateReceipt_str2_[483];
            INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[272]), INSOValidateReceipt_str2_, 214, 16);
            INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
            const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_00BC01B0(INSOValidateReceipt_str2);
            unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE];
            unsigned int INSOValidateReceipt_len = 0;
            // Check that the X509_digest function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_0064013A(NULL, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2984;
            if (INSOValidateReceipt_status == 2984 || INSOValidateReceipt_len > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
            }
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_0064013A(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2984;
            if (INSOValidateReceipt_status != 2984 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
            }
            char INSOValidateReceipt_fingerprint[483];
            volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 5; INSOValidateReceipt_increment += 3;
            for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) {
                snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]);
            }
            char INSOValidateReceipt_str3_[483];
            INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[114]), INSOValidateReceipt_str3_, 242, 68);
            INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
            // Check the common name and the fingerprint
            char INSOValidateReceipt_str1_[483];
            INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[240]), INSOValidateReceipt_str1_, 166, 16);
            INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
            volatile size_t INSOValidateReceipt_num = 7; INSOValidateReceipt_num -= 3; INSOValidateReceipt_num *= 3; INSOValidateReceipt_num += 1;
            if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[84])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[84])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) {
                INSOValidateReceipt_verify = 2984;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 2984) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[218]), INSOValidateReceipt_str4_, 39, 34);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_00FB00F4(INSOValidateReceipt_str4, 0);
        INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00FB010C(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
        INSOValidateReceipt_ASN1_OBJECT_free_00BC00E0(INSOValidateReceipt_oid);
        if (INSOValidateReceipt_verify >= 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char INSOValidateReceipt_str5_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[424]), INSOValidateReceipt_str5_, 188, 34);
        INSOValidateReceipt_str5 = INSOValidateReceipt_str5_;
        INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_00FB0114(INSOValidateReceipt_pkcs7, NULL, 0);
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_00BC0153((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00640194((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_00FB00F4(INSOValidateReceipt_str5, 0);
            INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00FB010C(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
            INSOValidateReceipt_ASN1_OBJECT_free_00BC00E0(INSOValidateReceipt_oid);
            if (INSOValidateReceipt_verify == -1) {
                sk_X509_free (INSOValidateReceipt_certificates);
                INSOValidateReceipt_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail;
        }
        // Global variables computation
        // From 190 to 169
        INSOValidateReceipt_YUURUMHMKAJI += 148; INSOValidateReceipt_YUURUMHMKAJI /= 2;
        // From 231 to 52
        INSOValidateReceipt_AFVQTANHTLYF += 81; INSOValidateReceipt_AFVQTANHTLYF /= 6;
        // From 129 to 265
        INSOValidateReceipt_VQTNXJHMSZEL -= 63; INSOValidateReceipt_VQTNXJHMSZEL *= 4; INSOValidateReceipt_VQTNXJHMSZEL += 1;
    INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00FB000D(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_00640015(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates);
    }
#else
#define INSOValidateReceipt_CheckReceiptSignature067(INSOValidateReceipt_ctx) { \
BIO *INSOValidateReceipt_bio_p7 = NULL; \
PKCS7 *INSOValidateReceipt_pkcs7 = NULL; \
STACK_OF(X509) *INSOValidateReceipt_certificates = NULL; \
X509 *INSOValidateReceipt_certificate = NULL; \
int INSOValidateReceipt_count, INSOValidateReceipt_index1; \
unsigned int INSOValidateReceipt_index2; \
ASN1_OBJECT *INSOValidateReceipt_oid = NULL; \
char *INSOValidateReceipt_str1; \
char *INSOValidateReceipt_str2; \
char *INSOValidateReceipt_str3; \
char *INSOValidateReceipt_str4; \
char *INSOValidateReceipt_str5; \
int INSOValidateReceipt_verify, INSOValidateReceipt_status; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_0064018B(INSOValidateReceipt_BIO_s_mem_00BC0100()); \
INSOValidateReceipt_BIO_write_0064007E(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_AFVQTANHTLYF_007900E7((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_HTNSUGXHMGST_0169011D((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00FB01D0(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_OpenSSL_add_all_digests_00FB0017(); \
INSOValidateReceipt_verify = 0; \
INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert; \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_00BC0153((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00640194((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
char INSOValidateReceipt_common_name[483]; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00BC01D5(NULL, NID_commonName, NULL, 0); \
if (INSOValidateReceipt_status > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_00BC01D5(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483); \
if (INSOValidateReceipt_status <= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
volatile unsigned int INSOValidateReceipt_digest_length = 8; INSOValidateReceipt_digest_length -= 3; INSOValidateReceipt_digest_length *= 4;  \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[272]), INSOValidateReceipt_str2_, 214, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_00BC01B0(INSOValidateReceipt_str2); \
unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE]; \
unsigned int INSOValidateReceipt_len = 0; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_0064013A(NULL, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2984; \
if (INSOValidateReceipt_status == 2984 || INSOValidateReceipt_len > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_0064013A(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 2984; \
if (INSOValidateReceipt_status != 2984 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_fingerprint[483]; \
volatile unsigned int INSOValidateReceipt_increment = 1; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 5; INSOValidateReceipt_increment += 3;  \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) { \
snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]); \
} \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[114]), INSOValidateReceipt_str3_, 242, 68); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[240]), INSOValidateReceipt_str1_, 166, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
volatile size_t INSOValidateReceipt_num = 7; INSOValidateReceipt_num -= 3; INSOValidateReceipt_num *= 3; INSOValidateReceipt_num += 1;  \
if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[84])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[84])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) { \
INSOValidateReceipt_verify = 2984; \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 2984) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction00B((INSOValidateReceipt_Strings[218]), INSOValidateReceipt_str4_, 39, 34); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_00FB00F4(INSOValidateReceipt_str4, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00FB010C(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_00BC00E0(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify >= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str5_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[424]), INSOValidateReceipt_str5_, 188, 34); \
INSOValidateReceipt_str5 = INSOValidateReceipt_str5_; \
INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_00FB0114(INSOValidateReceipt_pkcs7, NULL, 0); \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_00BC0153((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00640194((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_00FB00F4(INSOValidateReceipt_str5, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_00FB010C(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_00BC00E0(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify == -1) { \
sk_X509_free (INSOValidateReceipt_certificates); \
INSOValidateReceipt_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E2016E(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_YUURUMHMKAJI += 148; INSOValidateReceipt_YUURUMHMKAJI /= 2;  \
INSOValidateReceipt_AFVQTANHTLYF += 81; INSOValidateReceipt_AFVQTANHTLYF /= 6;  \
INSOValidateReceipt_VQTNXJHMSZEL -= 63; INSOValidateReceipt_VQTNXJHMSZEL *= 4; INSOValidateReceipt_VQTNXJHMSZEL += 1;  \
INSOValidateReceipt_CheckReceiptSignature067_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00FB000D(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_00640015(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_YUURUMHMKAJI_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_00790109((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
        if (INSOValidateReceipt_AFVQTANHTLYF_010F0034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_0182016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 397 to 169
        INSOValidateReceipt_VLGBCRXLZMHT += 279; INSOValidateReceipt_VLGBCRXLZMHT /= 4;
        // Set to 43
        INSOValidateReceipt_YUURUMHMKAJI = 43;
        // Set to 52
        INSOValidateReceipt_UFGPFIPLDFOS = 52;
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_YUURUMHMKAJI_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_00790109((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
if (INSOValidateReceipt_AFVQTANHTLYF_010F0034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0182016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_VLGBCRXLZMHT += 279; INSOValidateReceipt_VLGBCRXLZMHT /= 4;  \
INSOValidateReceipt_YUURUMHMKAJI = 43; \
INSOValidateReceipt_UFGPFIPLDFOS = 52; \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_YUURUMHMKAJI_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_00790109((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_01690053(INSOValidateReceipt_key);
        if (INSOValidateReceipt_AFVQTANHTLYF_010F0034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 397 to 169
        INSOValidateReceipt_VLGBCRXLZMHT += 279; INSOValidateReceipt_VLGBCRXLZMHT /= 4;
        // Set to 43
        INSOValidateReceipt_YUURUMHMKAJI = 43;
        // Set to 52
        INSOValidateReceipt_UFGPFIPLDFOS = 52;
        INSOValidateReceipt_CFRelease_01690053(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[123]), 126, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_YUURUMHMKAJI_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_00790109((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_01690053(INSOValidateReceipt_key); \
if (INSOValidateReceipt_AFVQTANHTLYF_010F0034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_VLGBCRXLZMHT += 279; INSOValidateReceipt_VLGBCRXLZMHT /= 4;  \
INSOValidateReceipt_YUURUMHMKAJI = 43; \
INSOValidateReceipt_UFGPFIPLDFOS = 52; \
INSOValidateReceipt_CFRelease_01690053(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_VLGBCRXLZMHT_010F00A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_YUURUMHMKAJI_0169002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
        if (INSOValidateReceipt_UFGPFIPLDFOS_00790034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01E200A0(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 169 to 231
        INSOValidateReceipt_VLGBCRXLZMHT -= 92; INSOValidateReceipt_VLGBCRXLZMHT *= 3;
        // From 43 to 342
        INSOValidateReceipt_YUURUMHMKAJI -= 5; INSOValidateReceipt_YUURUMHMKAJI *= 9;
        // From 52 to 298
        INSOValidateReceipt_AFVQTANHTLYF -= 10; INSOValidateReceipt_AFVQTANHTLYF *= 7; INSOValidateReceipt_AFVQTANHTLYF += 4;
        // From 335 to 384
        INSOValidateReceipt_ACFEVVQVAIKY -= 207; INSOValidateReceipt_ACFEVVQVAIKY *= 3;
        // From 265 to 169
        INSOValidateReceipt_VQTNXJHMSZEL += 242; INSOValidateReceipt_VQTNXJHMSZEL /= 3;
        // From 285 to 99
        INSOValidateReceipt_HTNSUGXHMGST += 111; INSOValidateReceipt_HTNSUGXHMGST /= 4;
        // From 146 to 184
        INSOValidateReceipt_WRMDFVLFQRMA -= 85; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 1;
        // From 52 to 45
        INSOValidateReceipt_UFGPFIPLDFOS += 38; INSOValidateReceipt_UFGPFIPLDFOS /= 2;
        INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_VLGBCRXLZMHT_010F00A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_YUURUMHMKAJI_0169002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
if (INSOValidateReceipt_UFGPFIPLDFOS_00790034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01E200A0(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_VLGBCRXLZMHT -= 92; INSOValidateReceipt_VLGBCRXLZMHT *= 3;  \
INSOValidateReceipt_YUURUMHMKAJI -= 5; INSOValidateReceipt_YUURUMHMKAJI *= 9;  \
INSOValidateReceipt_AFVQTANHTLYF -= 10; INSOValidateReceipt_AFVQTANHTLYF *= 7; INSOValidateReceipt_AFVQTANHTLYF += 4;  \
INSOValidateReceipt_ACFEVVQVAIKY -= 207; INSOValidateReceipt_ACFEVVQVAIKY *= 3;  \
INSOValidateReceipt_VQTNXJHMSZEL += 242; INSOValidateReceipt_VQTNXJHMSZEL /= 3;  \
INSOValidateReceipt_HTNSUGXHMGST += 111; INSOValidateReceipt_HTNSUGXHMGST /= 4;  \
INSOValidateReceipt_WRMDFVLFQRMA -= 85; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 1;  \
INSOValidateReceipt_UFGPFIPLDFOS += 38; INSOValidateReceipt_UFGPFIPLDFOS /= 2;  \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_VLGBCRXLZMHT_010F00A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_YUURUMHMKAJI_0169002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key);
        if (INSOValidateReceipt_UFGPFIPLDFOS_00790034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 169 to 231
        INSOValidateReceipt_VLGBCRXLZMHT -= 92; INSOValidateReceipt_VLGBCRXLZMHT *= 3;
        // From 43 to 342
        INSOValidateReceipt_YUURUMHMKAJI -= 5; INSOValidateReceipt_YUURUMHMKAJI *= 9;
        // From 52 to 298
        INSOValidateReceipt_AFVQTANHTLYF -= 10; INSOValidateReceipt_AFVQTANHTLYF *= 7; INSOValidateReceipt_AFVQTANHTLYF += 4;
        // From 335 to 384
        INSOValidateReceipt_ACFEVVQVAIKY -= 207; INSOValidateReceipt_ACFEVVQVAIKY *= 3;
        // From 265 to 169
        INSOValidateReceipt_VQTNXJHMSZEL += 242; INSOValidateReceipt_VQTNXJHMSZEL /= 3;
        // From 285 to 99
        INSOValidateReceipt_HTNSUGXHMGST += 111; INSOValidateReceipt_HTNSUGXHMGST /= 4;
        // From 146 to 184
        INSOValidateReceipt_WRMDFVLFQRMA -= 85; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 1;
        // From 52 to 45
        INSOValidateReceipt_UFGPFIPLDFOS += 38; INSOValidateReceipt_UFGPFIPLDFOS /= 2;
        INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[19]), 220, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_VLGBCRXLZMHT_010F00A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_YUURUMHMKAJI_0169002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_key); \
if (INSOValidateReceipt_UFGPFIPLDFOS_00790034(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_VLGBCRXLZMHT -= 92; INSOValidateReceipt_VLGBCRXLZMHT *= 3;  \
INSOValidateReceipt_YUURUMHMKAJI -= 5; INSOValidateReceipt_YUURUMHMKAJI *= 9;  \
INSOValidateReceipt_AFVQTANHTLYF -= 10; INSOValidateReceipt_AFVQTANHTLYF *= 7; INSOValidateReceipt_AFVQTANHTLYF += 4;  \
INSOValidateReceipt_ACFEVVQVAIKY -= 207; INSOValidateReceipt_ACFEVVQVAIKY *= 3;  \
INSOValidateReceipt_VQTNXJHMSZEL += 242; INSOValidateReceipt_VQTNXJHMSZEL /= 3;  \
INSOValidateReceipt_HTNSUGXHMGST += 111; INSOValidateReceipt_HTNSUGXHMGST /= 4;  \
INSOValidateReceipt_WRMDFVLFQRMA -= 85; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 1;  \
INSOValidateReceipt_UFGPFIPLDFOS += 38; INSOValidateReceipt_UFGPFIPLDFOS /= 2;  \
INSOValidateReceipt_CFRelease_016901A6(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptHash089(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3;
        CFMutableDataRef INSOValidateReceipt_data4;
        unsigned char INSOValidateReceipt_digest[483];
        volatile int INSOValidateReceipt_counter = 3; INSOValidateReceipt_counter -= 1; INSOValidateReceipt_counter *= 8; INSOValidateReceipt_counter += 4;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value;
        CFNumberRef INSOValidateReceipt_key;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash");
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue;
        INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData;
        INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash;
        INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key);
        INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_010F018D(NULL, 0);
        INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1));
        INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2));
        CC_SHA1_CTX INSOValidateReceipt_hashctx1;
        INSOValidateReceipt_ACFEVVQVAIKY_01820180(&INSOValidateReceipt_hashctx1);
        INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1));
        INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2));
        INSOValidateReceipt_UFGPFIPLDFOS_01E2002D(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1);
        SHA_CTX INSOValidateReceipt_hashctx2;
        INSOValidateReceipt_SHA1_Init_00640162(&INSOValidateReceipt_hashctx2);
        INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1));
        INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2));
        INSOValidateReceipt_SHA1_Final_00FB00AC(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2);
        CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_YUURUMHMKAJI_01690156(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter);
        if (!INSOValidateReceipt_AFVQTANHTLYF_0079012A(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid");
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5);
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_018200A0(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data1);
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data2);
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data4);
            INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5);
            goto INSOValidateReceipt_CheckReceiptHash089_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5);
        // Global variables computation
        // Set to 43
        INSOValidateReceipt_VLGBCRXLZMHT = 43;
        // Set to 227
        INSOValidateReceipt_ACFEVVQVAIKY = 227;
        // Set to 34
        INSOValidateReceipt_HTNSUGXHMGST = 34;
        // From 184 to 320
        INSOValidateReceipt_WRMDFVLFQRMA -= 78; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 2;
        // From 45 to 316
        INSOValidateReceipt_UFGPFIPLDFOS -= 10; INSOValidateReceipt_UFGPFIPLDFOS *= 9; INSOValidateReceipt_UFGPFIPLDFOS += 1;
    INSOValidateReceipt_CheckReceiptHash089_INSOValidateReceipt_bail:
        INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data4);
    }
#else
#define INSOValidateReceipt_CheckReceiptHash089(INSOValidateReceipt_ctx) { \
CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3; \
CFMutableDataRef INSOValidateReceipt_data4; \
unsigned char INSOValidateReceipt_digest[483]; \
volatile int INSOValidateReceipt_counter = 3; INSOValidateReceipt_counter -= 1; INSOValidateReceipt_counter *= 8; INSOValidateReceipt_counter += 4;  \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value; \
CFNumberRef INSOValidateReceipt_key; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash"); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue; \
INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData; \
INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash; \
INSOValidateReceipt_key = INSOValidateReceipt_VQTNXJHMSZEL_007900A9(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_0079002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_key); \
INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_010F018D(NULL, 0); \
INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1)); \
INSOValidateReceipt_WRMDFVLFQRMA_016900B8(INSOValidateReceipt_data4, INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2)); \
CC_SHA1_CTX INSOValidateReceipt_hashctx1; \
INSOValidateReceipt_ACFEVVQVAIKY_01820180(&INSOValidateReceipt_hashctx1); \
INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1)); \
INSOValidateReceipt_CC_SHA1_Update_01B20193(&INSOValidateReceipt_hashctx1, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2)); \
INSOValidateReceipt_UFGPFIPLDFOS_01E2002D(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx1); \
SHA_CTX INSOValidateReceipt_hashctx2; \
INSOValidateReceipt_SHA1_Init_00640162(&INSOValidateReceipt_hashctx2); \
INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_00790136((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data1)); \
INSOValidateReceipt_SHA1_Update_00FB0157(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_VLGBCRXLZMHT_007900E7(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_00790136(INSOValidateReceipt_data2)); \
INSOValidateReceipt_SHA1_Final_00FB00AC(INSOValidateReceipt_digest, &INSOValidateReceipt_hashctx2); \
CFDataRef INSOValidateReceipt_data5 = INSOValidateReceipt_YUURUMHMKAJI_01690156(NULL, (const UInt8 *) INSOValidateReceipt_digest, INSOValidateReceipt_counter); \
if (!INSOValidateReceipt_AFVQTANHTLYF_0079012A(INSOValidateReceipt_data3, INSOValidateReceipt_data5)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid"); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_018200A0(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data1); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data2); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data4); \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5); \
goto INSOValidateReceipt_CheckReceiptHash089_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data5); \
INSOValidateReceipt_VLGBCRXLZMHT = 43; \
INSOValidateReceipt_ACFEVVQVAIKY = 227; \
INSOValidateReceipt_HTNSUGXHMGST = 34; \
INSOValidateReceipt_WRMDFVLFQRMA -= 78; INSOValidateReceipt_WRMDFVLFQRMA *= 3; INSOValidateReceipt_WRMDFVLFQRMA += 2;  \
INSOValidateReceipt_UFGPFIPLDFOS -= 10; INSOValidateReceipt_UFGPFIPLDFOS *= 9; INSOValidateReceipt_UFGPFIPLDFOS += 1;  \
INSOValidateReceipt_CheckReceiptHash089_INSOValidateReceipt_bail: \
INSOValidateReceipt_CFRelease_0169012C(INSOValidateReceipt_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_WRMDFVLFQRMA_010F0140(NULL, INSOValidateReceipt_UFGPFIPLDFOS_0169013C());
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_ACFEVVQVAIKY_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_VLGBCRXLZMHT_010F002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
        if (INSOValidateReceipt_date2 && INSOValidateReceipt_HTNSUGXHMGST_00790022(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1);
        }
        // Global variables computation
        // From 43 to 157
        INSOValidateReceipt_VLGBCRXLZMHT -= 12; INSOValidateReceipt_VLGBCRXLZMHT *= 5; INSOValidateReceipt_VLGBCRXLZMHT += 2;
        // From 342 to 344
        INSOValidateReceipt_YUURUMHMKAJI -= 228; INSOValidateReceipt_YUURUMHMKAJI *= 3; INSOValidateReceipt_YUURUMHMKAJI += 2;
        // From 298 to 132
        INSOValidateReceipt_AFVQTANHTLYF += 230; INSOValidateReceipt_AFVQTANHTLYF /= 4;
        // From 169 to 69
        INSOValidateReceipt_VQTNXJHMSZEL += 107; INSOValidateReceipt_VQTNXJHMSZEL /= 4;
        // From 320 to 227
        INSOValidateReceipt_WRMDFVLFQRMA += 134; INSOValidateReceipt_WRMDFVLFQRMA /= 2;
        INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1);
    }
#else
#define INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_WRMDFVLFQRMA_010F0140(NULL, INSOValidateReceipt_UFGPFIPLDFOS_0169013C()); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_ACFEVVQVAIKY_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_VLGBCRXLZMHT_010F002B((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
if (INSOValidateReceipt_date2 && INSOValidateReceipt_HTNSUGXHMGST_00790022(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01B2016E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1); \
} \
INSOValidateReceipt_VLGBCRXLZMHT -= 12; INSOValidateReceipt_VLGBCRXLZMHT *= 5; INSOValidateReceipt_VLGBCRXLZMHT += 2;  \
INSOValidateReceipt_YUURUMHMKAJI -= 228; INSOValidateReceipt_YUURUMHMKAJI *= 3; INSOValidateReceipt_YUURUMHMKAJI += 2;  \
INSOValidateReceipt_AFVQTANHTLYF += 230; INSOValidateReceipt_AFVQTANHTLYF /= 4;  \
INSOValidateReceipt_VQTNXJHMSZEL += 107; INSOValidateReceipt_VQTNXJHMSZEL /= 4;  \
INSOValidateReceipt_WRMDFVLFQRMA += 134; INSOValidateReceipt_WRMDFVLFQRMA /= 2;  \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2;
        CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases");
        INSOValidateReceipt_key1 = INSOValidateReceipt_WRMDFVLFQRMA_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        // Extract InApp Purchase
        CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers;
        CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_AFVQTANHTLYF_010F0084((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1);
        if (INSOValidateReceipt_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                Boolean INSOValidateReceipt_found = false;
                // Iterate over the purchases
                for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) {
                    CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_purchases, INSOValidateReceipt_index2);
                    INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer;
                    INSOValidateReceipt_key2 = INSOValidateReceipt_WRMDFVLFQRMA_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
                    CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_AFVQTANHTLYF_010F0084(INSOValidateReceipt_purchase, INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (INSOValidateReceipt_VLGBCRXLZMHT_0079009D(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) {
                        INSOValidateReceipt_found |= true;
                        (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!INSOValidateReceipt_found) {
                    (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the INSOValidateReceipt_idents and call the block back
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
            }
        }
        INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key1);
    }
#else
#define INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_ctx) { \
CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2; \
CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_WRMDFVLFQRMA_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers; \
CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_AFVQTANHTLYF_010F0084((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1); \
if (INSOValidateReceipt_purchases) { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
Boolean INSOValidateReceipt_found = false; \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) { \
CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_purchases, INSOValidateReceipt_index2); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer; \
INSOValidateReceipt_key2 = INSOValidateReceipt_WRMDFVLFQRMA_016900E3(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_AFVQTANHTLYF_010F0084(INSOValidateReceipt_purchase, INSOValidateReceipt_key2); \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key2); \
if (INSOValidateReceipt_VLGBCRXLZMHT_0079009D(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) { \
INSOValidateReceipt_found |= true; \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase)); \
} \
} \
if (!INSOValidateReceipt_found) { \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
} else { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_YUURUMHMKAJI_01690158(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_VQTNXJHMSZEL_010F0045(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
INSOValidateReceipt_CFRelease_0079012C(INSOValidateReceipt_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up");
        CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data };
        if (INSOValidateReceipt_references[0]) {
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[0]);
            INSOValidateReceipt_references[0] = NULL;
        }
        if (INSOValidateReceipt_references[1]) {
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[1]);
            INSOValidateReceipt_references[1] = NULL;
        }
        if (INSOValidateReceipt_references[2]) {
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[2]);
            INSOValidateReceipt_references[2] = NULL;
        }
        if (INSOValidateReceipt_references[3]) {
            INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[3]);
            INSOValidateReceipt_references[3] = NULL;
        }
    }
#else
#define INSOValidateReceipt_CleanUp0AC(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up"); \
CFTypeRef INSOValidateReceipt_references[4] = { INSOValidateReceipt_ctx->receipt_data, INSOValidateReceipt_ctx->guid_data, INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_ctx->ca_data }; \
if (INSOValidateReceipt_references[0]) { \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[0]); \
INSOValidateReceipt_references[0] = NULL; \
} \
if (INSOValidateReceipt_references[1]) { \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[1]); \
INSOValidateReceipt_references[1] = NULL; \
} \
if (INSOValidateReceipt_references[2]) { \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[2]); \
INSOValidateReceipt_references[2] = NULL; \
} \
if (INSOValidateReceipt_references[3]) { \
INSOValidateReceipt_CFRelease_007901A6(INSOValidateReceipt_references[3]); \
INSOValidateReceipt_references[3] = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckInAppPurchases(NSArray *_inapp_identifiers, INSOValidateReceipt_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point");
        // Create contexts
        INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block);
        // Initial value
        int INSOValidateReceipt_index = 3449;
        // While loop
        while(INSOValidateReceipt_index != 1860) {
            if (!INSOValidateReceipt_setjmp_01B2002A(INSOValidateReceipt_JumpBuf)) {
                switch(INSOValidateReceipt_index) {
                    case 3335:
                        INSOValidateReceipt_CheckReceiptSignature067((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1201; INSOValidateReceipt_index /= 2;
                        break;
                    case 3449:
                        INSOValidateReceipt_GetMainBundle016((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1556; INSOValidateReceipt_index /= 5;
                        break;
                    case 2268:
                        INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 597; INSOValidateReceipt_index /= 5;
                        break;
                    case 1001:
                        INSOValidateReceipt_LoadReceipt042((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 358; INSOValidateReceipt_index *= 4; INSOValidateReceipt_index += 3;
                        break;
                    case 573:
                        INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 154; INSOValidateReceipt_index *= 6; INSOValidateReceipt_index += 5;
                        break;
                    case 4049:
                        INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 3823; INSOValidateReceipt_index /= 3; 
                        break;
                    case 2624:
                        INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 1660; INSOValidateReceipt_index *= 3; 
                        break;
                    case 2103:
                        INSOValidateReceipt_GetReceiptInformation063((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 992; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 2; 
                        break;
                    case 2575:
                        INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 1271; INSOValidateReceipt_index *= 3; 
                        break;
                    case 2892:
                        INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 2688; INSOValidateReceipt_index /= 3; 
                        break;
                    case 3912:
                        INSOValidateReceipt_CheckBundleIdentifier05B((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 2000; INSOValidateReceipt_index /= 2; 
                        break;
                    case 2956:
                        INSOValidateReceipt_CheckBundleVersion05F((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index += 1250; INSOValidateReceipt_index /= 2; 
                        break;
                    case 2519:
                        INSOValidateReceipt_CheckReceiptHash089((&INSOValidateReceipt_ctx1));
                        INSOValidateReceipt_index -= 1170; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 2; 
                        break;
                }
            } else {
                break;
            }
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define INSOValidateReceipt_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point"); \
INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block); \
int INSOValidateReceipt_index = 3449; \
while(INSOValidateReceipt_index != 1860) { \
if (!INSOValidateReceipt_setjmp_01B2002A(INSOValidateReceipt_JumpBuf)) { \
switch(INSOValidateReceipt_index) { \
case 3335: \
INSOValidateReceipt_CheckReceiptSignature067((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1201; INSOValidateReceipt_index /= 2;  \
break; \
case 3449: \
INSOValidateReceipt_GetMainBundle016((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1556; INSOValidateReceipt_index /= 5;  \
break; \
case 2268: \
INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 597; INSOValidateReceipt_index /= 5;  \
break; \
case 1001: \
INSOValidateReceipt_LoadReceipt042((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 358; INSOValidateReceipt_index *= 4; INSOValidateReceipt_index += 3;  \
break; \
case 573: \
INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 154; INSOValidateReceipt_index *= 6; INSOValidateReceipt_index += 5;  \
break; \
case 4049: \
INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 3823; INSOValidateReceipt_index /= 3;  \
break; \
case 2624: \
INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 1660; INSOValidateReceipt_index *= 3;  \
break; \
case 2103: \
INSOValidateReceipt_GetReceiptInformation063((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 992; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 2;  \
break; \
case 2575: \
INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 1271; INSOValidateReceipt_index *= 3;  \
break; \
case 2892: \
INSOValidateReceipt_CleanUp0AC((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 2688; INSOValidateReceipt_index /= 3;  \
break; \
case 3912: \
INSOValidateReceipt_CheckBundleIdentifier05B((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 2000; INSOValidateReceipt_index /= 2;  \
break; \
case 2956: \
INSOValidateReceipt_CheckBundleVersion05F((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index += 1250; INSOValidateReceipt_index /= 2;  \
break; \
case 2519: \
INSOValidateReceipt_CheckReceiptHash089((&INSOValidateReceipt_ctx1)); \
INSOValidateReceipt_index -= 1170; INSOValidateReceipt_index *= 3; INSOValidateReceipt_index += 2;  \
break; \
} \
} else { \
break; \
} \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

