//
// This code was generated by RECEIGEN 3.4.0.0 and will use:
//
// Platform                   : iOS
// CFBundleIdentifier         : com.intangiblesoftware.menslacrossestats
// CFBundleVersion            : 1
// Prefix                     : INSOValidateReceipt
// Success Behavior           : CheckInApp
// Failure Behavior           : DoNothing
//
// This generated code has to be linked to OpenSSL (either statically or dynamically)
// Refer to the website for more details and specific cases.
//

// C++ prologue
#ifdef __cplusplus
extern "C" {
#endif
    
    // Headers for general purpose functions
#import <AvailabilityMacros.h>
#import <objc/objc.h>
#import <objc/message.h>
#import <objc/runtime.h>
#import <CoreFoundation/CoreFoundation.h>
#import <Foundation/Foundation.h>
    // Headers for system calls
#import <dlfcn.h>
#import <setjmp.h>
#import <glob.h>
    
    // Headers for bundle security checks
#import <Security/Security.h>
#import <CommonCrypto/CommonDigest.h>
    
    // Headers from OpenSSL
#import <openssl/bio.h>
#import <openssl/err.h>
#import <openssl/objects.h>
#import <openssl/pkcs7.h>
#import <openssl/sha.h>
#import <openssl/x509.h>
    
    // Define this if you are linking a pre-1.0.0 OpenSSL (like the one found on OS X)
#ifdef RECEIGEN_USE_PRE_1_0_0_OPENSSL
#ifndef _STACK
#define _STACK STACK
#endif
#endif
    
    // Some compilers provide the capability to test if certain attributes are available.
    // This macro provides a compatibility path for other compilers.
#ifndef __has_feature
#define __has_feature(X)    0
#endif
    
    // Define macros that deal with ARC if enable.
#ifndef __SAFE_CAST
#if __has_feature(objc_arc)
#define __SAFE_CAST(T,X)    (__bridge T) X
#define __RETURN_RETAINED   __attribute__((ns_returns_retained))
#else
#define __SAFE_CAST(T,X)    (T) X
#define __RETURN_RETAINED
#endif
#endif
    
    // Define to turn-off debug logs
#ifndef RECEIGEN_QUIET_DEBUG
#define RECEIGEN_QUIET_DEBUG 1
#endif
    
    // Log statement for debugging purpose
#if RECEIGEN_QUIET_DEBUG
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#elif defined DEBUG
#if __OBJC__
#define __INSOValidateReceipt_RECEIPT_LOG(...)    NSLog(@__VA_ARGS__)
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)    fprintf(stderr, __VA_ARGS__); fprintf(stderr, "\n")
#endif
#else
#define __INSOValidateReceipt_RECEIPT_LOG(...)
#endif
    
    // Function pointer for string decryption
    typedef void (*INSOValidateReceipt_decrypt)(const char *, char *, int, int);
    
    // Block used when validating InApp purchases.
    typedef void (^INSOValidateReceipt_InAppValidateBlock)(NSString *identifier, BOOL isPresent, NSDictionary *purchaseInfo);
    
    // Keys for each receipt attribute
    typedef enum _INSOValidateReceipt_ReceiptAttributeType {
        
        // Bundle identifier
        INSOValidateReceipt_ReceiptAttributeTypeBundleId = 2,
        // Application version
        INSOValidateReceipt_ReceiptAttributeTypeBundleVersion = 3,
        // Opaque value
        INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue = 4,
        // Hash value
        INSOValidateReceipt_ReceiptAttributeTypeHash = 5,
        // In-app purchase receipt
        INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase = 17,
        // Original Application Version
        INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion = 19,
        // Receipt Expiration Date
        INSOValidateReceipt_ReceiptAttributeTypeExpirationDate = 21,
        // Quantity
        INSOValidateReceipt_InAppAttributeTypeQuantity = 1701,
        // Product identifier
        INSOValidateReceipt_InAppAttributeTypeProductIdentifer = 1702,
        // Transaction identifier
        INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer = 1703,
        // Purchase date
        INSOValidateReceipt_InAppAttributeTypePurchaseDate = 1704,
        // Original transaction identifier
        INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer = 1705,
        // Original purchase date
        INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate = 1706,
        // Subscription Expiration Date
        INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate = 1708,
        // Web Order Line Item ID
        INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId = 1711,
        // Cancellation Date
        INSOValidateReceipt_InAppAttributeTypeCancellationDate = 1712,
        
        // Storage key base value
        INSOValidateReceipt_StoreNone = 1103,
        // Bundle identifier
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1) + 1,
        // Application version
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleVersion << 1),
        INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersionData = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeBundleId << 1) + 1,
        // Opaque value
        INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue << 1),
        // Hash value
        INSOValidateReceipt_StoreReceiptAttributeTypeHash = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeHash << 1),
        // In-app purchase receipt
        INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase << 1),
        // Original Application Version
        INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion << 1),
        // Receipt Expiration Date
        INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_ReceiptAttributeTypeExpirationDate << 1),
        // Quantity
        INSOValidateReceipt_StoreInAppAttributeTypeQuantity = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeQuantity << 1),
        // Product identifier
        INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeProductIdentifer << 1),
        // Transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer << 1),
        // Purchase date
        INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypePurchaseDate << 1),
        // Original transaction identifier
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer << 1),
        // Original purchase date
        INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate << 1),
        // Subscription Expiration Date
        INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate << 1),
        // Web Order Line Item ID
        INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId << 1),
        // Cancellation Date
        INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate = INSOValidateReceipt_StoreNone + (INSOValidateReceipt_InAppAttributeTypeCancellationDate << 1)
        
    } INSOValidateReceipt_ReceiptAttributeType;
    
    // Constants for Receipt info query
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_ID                        [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleId]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_BUNDLE_VERSION                   [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_ORIGINAL_APPLICATION_VERSION     [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeOriginalApplicationVersion]
#define INSOValidateReceipt_RECEIPT_ATTRIBUTETYPE_EXPIRATION_DATE                  [NSNumber numberWithInt:INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate]
    
    // Constants for InApp info query
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_QUANTITY                           [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeQuantity]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PRODUCTIDENTIFER                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_TRANSACTIONIDENTIFER               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_PURCHASEDATE                       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypePurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALTRANSACTIONIDENTIFER       [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalTransactionIdentifer]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_ORIGINALPURCHASEDATE               [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeOriginalPurchaseDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_SUBSCRIPTIONEXPIRATIONDATE         [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeSubscriptionExpirationDate]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_WEBORDERLINEITEMID                 [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeWebOrderLineItemId]
#define INSOValidateReceipt_INAPP_ATTRIBUTETYPE_CANCELLATIONDATE                   [NSNumber numberWithInt:INSOValidateReceipt_StoreInAppAttributeTypeCancellationDate]
    
    // Shared context for receipt validation
    typedef struct _INSOValidateReceipt_CheckingContext {
        CFTypeRef guid_data;
        CFTypeRef inapp_identifiers;
        CFTypeRef dummy0003;
        CFTypeRef ca_data;
        CFTypeRef inapp_block;
        CFTypeRef dummy0002;
        CFTypeRef main_bundle;
        CFTypeRef receipt_dict;
        CFTypeRef receipt_data;
        CFTypeRef dummy0001;
        CFTypeRef dummy0000;
    } INSOValidateReceipt_CheckingContext;
    
    // Shared context for receipt parsing
    typedef struct _INSOValidateReceipt_ParsingContext {
        const unsigned char * end;
        CFTypeRef dummy0000;
        CFTypeRef dummy0006;
        struct _INSOValidateReceipt_ParsingContext * parent;
        CFTypeRef dummy0001;
        CFTypeRef dummy0003;
        CFTypeRef dummy0002;
        CFTypeRef dummy0005;
        CFTypeRef dictionary;
        const unsigned char * ptr;
        CFTypeRef dummy0004;
        CFTypeRef dummy0007;
    } INSOValidateReceipt_ParsingContext;
    
    // Symbol ASN1_get_object
    typedef int (*__INSOValidateReceipt_ASN1_get_object)(const unsigned char **pp, long *plength, int *ptag, int *pclass, long omax);
    // Symbol ASN1_INTEGER_free
    typedef void (*__INSOValidateReceipt_ASN1_INTEGER_free)(ASN1_INTEGER *a);
    // Symbol ASN1_INTEGER_get
    typedef long (*__INSOValidateReceipt_ASN1_INTEGER_get)(const ASN1_INTEGER *a);
    // Symbol ASN1_OBJECT_free
    typedef void (*__INSOValidateReceipt_ASN1_OBJECT_free)(ASN1_OBJECT *a);
    // Symbol BIO_free
    typedef int (*__INSOValidateReceipt_BIO_free)(BIO *a);
    // Symbol BIO_new
    typedef BIO *(*__INSOValidateReceipt_BIO_new)(BIO_METHOD *type);
    // Symbol BIO_s_mem
    typedef BIO_METHOD *(*__INSOValidateReceipt_BIO_s_mem)(void);
    // Symbol BIO_write
    typedef int (*__INSOValidateReceipt_BIO_write)(BIO *b, const void *buf, int len);
    // Symbol c2i_ASN1_INTEGER
    typedef ASN1_INTEGER *(*__INSOValidateReceipt_c2i_ASN1_INTEGER)(ASN1_INTEGER **a,const unsigned char **pp, long length);
    // Symbol CC_SHA1
    typedef unsigned char *(*__INSOValidateReceipt_CC_SHA1)(const void *data, CC_LONG len, unsigned char *md);
    // Symbol CC_SHA1_Final
    typedef int (*__INSOValidateReceipt_CC_SHA1_Final)(unsigned char *md, CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Init
    typedef int (*__INSOValidateReceipt_CC_SHA1_Init)(CC_SHA1_CTX *c);
    // Symbol CC_SHA1_Update
    typedef int (*__INSOValidateReceipt_CC_SHA1_Update)(CC_SHA1_CTX *c, const void *data, CC_LONG len);
    // Symbol CFAbsoluteTimeGetCurrent
    typedef CFAbsoluteTime (*__INSOValidateReceipt_CFAbsoluteTimeGetCurrent)();
    // Symbol CFArrayAppendValue
    typedef void (*__INSOValidateReceipt_CFArrayAppendValue)(CFMutableArrayRef theArray, const void *value);
    // Symbol CFArrayCreateMutable
    typedef CFMutableArrayRef (*__INSOValidateReceipt_CFArrayCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks);
    // Symbol CFArrayGetCount
    typedef CFIndex (*__INSOValidateReceipt_CFArrayGetCount)(CFArrayRef theArray);
    // Symbol CFArrayGetValueAtIndex
    typedef const void *(*__INSOValidateReceipt_CFArrayGetValueAtIndex)(CFArrayRef theArray, CFIndex idx);
    // Symbol CFBundleGetIdentifier
    typedef CFStringRef (*__INSOValidateReceipt_CFBundleGetIdentifier)(CFBundleRef bundle);
    // Symbol CFBundleGetMainBundle
    typedef CFBundleRef (*__INSOValidateReceipt_CFBundleGetMainBundle)();
    // Symbol CFBundleGetValueForInfoDictionaryKey
    typedef CFTypeRef (*__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey)(CFBundleRef bundle, CFStringRef key);
    // Symbol CFBundleUnloadExecutable
    typedef void (*__INSOValidateReceipt_CFBundleUnloadExecutable)(CFBundleRef bundle);
    // Symbol CFDataAppendBytes
    typedef void (*__INSOValidateReceipt_CFDataAppendBytes)(CFMutableDataRef theData, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreate
    typedef CFDataRef (*__INSOValidateReceipt_CFDataCreate)(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length);
    // Symbol CFDataCreateMutable
    typedef CFMutableDataRef (*__INSOValidateReceipt_CFDataCreateMutable)(CFAllocatorRef allocator, CFIndex capacity);
    // Symbol CFDataGetBytePtr
    typedef const UInt8 *(*__INSOValidateReceipt_CFDataGetBytePtr)(CFDataRef theData);
    // Symbol CFDataGetLength
    typedef CFIndex (*__INSOValidateReceipt_CFDataGetLength)(CFDataRef theData);
    // Symbol CFDateCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFDateCompare)(CFDateRef theString1, CFDateRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFDateCreate
    typedef CFDateRef (*__INSOValidateReceipt_CFDateCreate)(CFAllocatorRef allocator, CFAbsoluteTime at);
    // Symbol CFDateFormatterCreate
    typedef CFDateFormatterRef (*__INSOValidateReceipt_CFDateFormatterCreate)(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle);
    // Symbol CFDateFormatterCreateDateFromString
    typedef CFDateRef (*__INSOValidateReceipt_CFDateFormatterCreateDateFromString)(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFStringRef string, CFRange *rangep);
    // Symbol CFDateFormatterSetFormat
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetFormat)(CFDateFormatterRef formatter, CFStringRef formatString);
    // Symbol CFDateFormatterSetProperty
    typedef void (*__INSOValidateReceipt_CFDateFormatterSetProperty)(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value);
    // Symbol CFDictionaryAddValue
    typedef void (*__INSOValidateReceipt_CFDictionaryAddValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFDictionaryCreateMutable
    typedef CFMutableDictionaryRef (*__INSOValidateReceipt_CFDictionaryCreateMutable)(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks);
    // Symbol CFDictionaryGetValue
    typedef const void *(*__INSOValidateReceipt_CFDictionaryGetValue)(CFDictionaryRef theDict, const void *key);
    // Symbol CFDictionarySetValue
    typedef void (*__INSOValidateReceipt_CFDictionarySetValue)(CFMutableDictionaryRef theDict, const void *key, const void *value);
    // Symbol CFEqual
    typedef Boolean (*__INSOValidateReceipt_CFEqual)(CFTypeRef cf1, CFTypeRef cf2);
    // Symbol CFNumberCreate
    typedef CFNumberRef (*__INSOValidateReceipt_CFNumberCreate)(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr);
    // Symbol CFReadStreamClose
    typedef void (*__INSOValidateReceipt_CFReadStreamClose)(CFReadStreamRef stream);
    // Symbol CFReadStreamCreateWithFile
    typedef CFReadStreamRef (*__INSOValidateReceipt_CFReadStreamCreateWithFile)(CFAllocatorRef alloc, CFURLRef fileURL);
    // Symbol CFReadStreamOpen
    typedef Boolean (*__INSOValidateReceipt_CFReadStreamOpen)(CFReadStreamRef stream);
    // Symbol CFReadStreamRead
    typedef CFIndex (*__INSOValidateReceipt_CFReadStreamRead)(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength);
    // Symbol CFRelease
    typedef void (*__INSOValidateReceipt_CFRelease)(CFTypeRef cf);
    // Symbol CFStringCompare
    typedef CFComparisonResult (*__INSOValidateReceipt_CFStringCompare)(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions);
    // Symbol CFStringCreateWithBytes
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithBytes)(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation);
    // Symbol CFStringCreateWithCString
    typedef CFStringRef (*__INSOValidateReceipt_CFStringCreateWithCString)(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding);
    // Symbol CFTimeZoneCreateWithTimeIntervalFromGMT
    typedef CFTimeZoneRef (*__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT)(CFAllocatorRef allocator, CFTimeInterval ti);
    // Symbol d2i_PKCS7_bio
    typedef PKCS7 *(*__INSOValidateReceipt_d2i_PKCS7_bio)(BIO *bp,PKCS7 **p7);
    // Symbol d2i_X509_bio
    typedef X509 *(*__INSOValidateReceipt_d2i_X509_bio)(BIO *bp,X509 **x509);
    // Symbol dlopen
    typedef void *(*__INSOValidateReceipt_dlopen)(const char * __path, int __mode);
    // Symbol dlsym
    typedef void *(*__INSOValidateReceipt_dlsym)(void * __handle, const char * __symbol);
    // Symbol EVP_DigestFinal
    typedef int (*__INSOValidateReceipt_EVP_DigestFinal)(EVP_MD_CTX *ctx, unsigned char *md, unsigned int *s);
    // Symbol EVP_DigestInit
    typedef int (*__INSOValidateReceipt_EVP_DigestInit)(EVP_MD_CTX *ctx, const EVP_MD *type);
    // Symbol EVP_DigestUpdate
    typedef int (*__INSOValidateReceipt_EVP_DigestUpdate)(EVP_MD_CTX *ctx, const void *d, size_t cnt);
    // Symbol EVP_get_digestbyname
    typedef const EVP_MD *(*__INSOValidateReceipt_EVP_get_digestbyname)(const char *name);
    // Symbol EVP_MD_CTX_init
    typedef void (*__INSOValidateReceipt_EVP_MD_CTX_init)(EVP_MD_CTX *ctx);
    // Symbol exit
    typedef void (*__INSOValidateReceipt_exit)(int status);
    // Symbol kCFBundleIdentifierKey
    typedef const CFStringRef *__INSOValidateReceipt_kCFBundleIdentifierKey;
    // Symbol kCFDateFormatterTimeZone
    typedef const CFStringRef *__INSOValidateReceipt_kCFDateFormatterTimeZone;
    // Symbol kCFTypeArrayCallBacks
    typedef const CFArrayCallBacks *__INSOValidateReceipt_kCFTypeArrayCallBacks;
    // Symbol kCFTypeDictionaryKeyCallBacks
    typedef const CFDictionaryKeyCallBacks *__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks;
    // Symbol kCFTypeDictionaryValueCallBacks
    typedef const CFDictionaryValueCallBacks *__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks;
    // Symbol longjmp
    typedef void (*__INSOValidateReceipt_longjmp)(jmp_buf buf, int ret);
    // Symbol OBJ_txt2obj
    typedef ASN1_OBJECT *(*__INSOValidateReceipt_OBJ_txt2obj)(const char *s, int no_name);
    // Symbol objc_getClass
    typedef id (*__INSOValidateReceipt_objc_getClass)(const char *name);
    // Symbol objc_lookUpClass
    typedef id (*__INSOValidateReceipt_objc_lookUpClass)(const char *name);
    // Symbol objc_msgSend
    typedef id (*__INSOValidateReceipt_objc_msgSend)(id theReceiver, SEL theSelector, ...);
    // Symbol OpenSSL_add_all_digests
    typedef void (*__INSOValidateReceipt_OpenSSL_add_all_digests)();
    // Symbol PKCS7_free
    typedef void (*__INSOValidateReceipt_PKCS7_free)(PKCS7 *a);
    // Symbol PKCS7_get0_signers
    typedef STACK_OF(X509) *(*__INSOValidateReceipt_PKCS7_get0_signers)(PKCS7 *p7, STACK_OF(X509) *certs, int flags);
    // Symbol PKCS7_verify
    typedef int (*__INSOValidateReceipt_PKCS7_verify)(PKCS7 *p7, STACK_OF(X509) *certs, X509_STORE *store, BIO *indata, BIO *out, int flags);
    // Symbol sel_registerName
    typedef SEL (*__INSOValidateReceipt_sel_registerName)(const char *str);
    // Symbol setjmp
    typedef int (*__INSOValidateReceipt_setjmp)(jmp_buf buf);
    // Symbol SHA1
    typedef unsigned char *(*__INSOValidateReceipt_SHA1)(const unsigned char *d, unsigned long n, unsigned char *md);
    // Symbol SHA1_Final
    typedef int (*__INSOValidateReceipt_SHA1_Final)(unsigned char *md, SHA_CTX *c);
    // Symbol SHA1_Init
    typedef int (*__INSOValidateReceipt_SHA1_Init)(SHA_CTX *c);
    // Symbol SHA1_Update
    typedef int (*__INSOValidateReceipt_SHA1_Update)(SHA_CTX *c, const void *data, unsigned long len);
    // Symbol sk_free
    typedef void (*__INSOValidateReceipt_sk_free)(_STACK *);
    // Symbol sk_num
    typedef int (*__INSOValidateReceipt_sk_num)(const _STACK *);
    // Symbol sk_value
    typedef void *(*__INSOValidateReceipt_sk_value)(const _STACK *, int);
    // Symbol strlen
    typedef size_t (*__INSOValidateReceipt_strlen)(const char *);
    // Symbol strncmp
    typedef int (*__INSOValidateReceipt_strncmp)(const char *, const char *, size_t);
    // Symbol X509_digest
    typedef int (*__INSOValidateReceipt_X509_digest)(const X509 *data,const EVP_MD *type,unsigned char *md, unsigned int *len);
    // Symbol X509_free
    typedef void (*__INSOValidateReceipt_X509_free)(X509 *a);
    // Symbol X509_get_ext_by_OBJ
    typedef int (*__INSOValidateReceipt_X509_get_ext_by_OBJ)(X509 *x,ASN1_OBJECT *obj,int lastpos);
    // Symbol X509_NAME_get_text_by_NID
    typedef int (*__INSOValidateReceipt_X509_NAME_get_text_by_NID)(X509_NAME *name, int nid, char *buf,int len);
    // Symbol X509_STORE_add_cert
    typedef int (*__INSOValidateReceipt_X509_STORE_add_cert)(X509_STORE *ctx, X509 *x);
    // Symbol X509_STORE_free
    typedef void (*__INSOValidateReceipt_X509_STORE_free)(X509_STORE *v);
    // Symbol X509_STORE_new
    typedef X509_STORE *(*__INSOValidateReceipt_X509_STORE_new)();
    
    
    // Table for storing strings
    static const char *INSOValidateReceipt_Strings[483] = {
        // "X509_STORE_new" / M(Xor1) / S(31) / L(14)
        "\x47\x2a\x2f\x26\x40\x4c\x4b\x50\x4d\x5a\x40\x71\x7a\x68\x1f\x9b",
        // "CC_SHA1_Final" / M(Xor3) / S(100) / L(13)
        "\x37\x37\x2b\x27\x3c\x35\x45\x2b\x32\x1d\x1a\x15\x18\x74\x17\x74",
        // "" / M(None) / S(0) / L(0)
        "\x26\x7f\x18\x4d\xcc\x59\xed\xcd\x3b\x01\xab\xdd\x27\x3c\x3b\x66\xc7\xf3\x67\x8c\xba\x3c\x98\x1c\x14\x42\x81\xd6\xee\xb3\xb1\xf1",
        // "" / M(None) / S(0) / L(0)
        "\xfb\xc8\x5a\x9d\x34\x48\xe8\xf3\xe3\xce\x08\x58\x2e\xc7\xb9\x37\xed\x6b\xfb\x14\xb1\x74\xd4\x30\x39\xe9\x6e\xd0\xe8\x30\x59\xeb",
        // "CFBundleVersion" / M(Rot) / S(6) / L(15)
        "\x49\x4c\x48\x7b\x74\x6a\x72\x6b\x5c\x6b\x78\x79\x6f\x75\x74\x06",
        // "CFArrayGetCount" / M(Xor3) / S(110) / L(15)
        "\x3d\x38\x3f\x0c\x0c\x1f\x07\x39\x1b\x0a\x3d\x11\x0b\x10\x0a\x7e",
        // "currentDevice" / M(Xor1) / S(154) / L(13)
        "\xf9\xef\xe8\xe8\xff\xf4\xee\xde\xff\xec\xf3\xf9\xff\x9a\xed\xe3",
        // "BIO_free" / M(Xor4) / S(171) / L(8)
        "\xf2\xf9\xff\xef\xd6\xc2\xd5\xd5\xb0\xdb\xb2\x04\x09\xb0\x36\xcf",
        // "CFEqual" / M(Xor3) / S(65) / L(7)
        "\x12\x17\x14\x20\x24\x30\x3d\x51\xda\xaf\x3c\x01\x2b\xbb\xf5\x71",
        // "sk_value" / M(Xor4) / S(151) / L(8)
        "\x03\x1b\x2f\x06\x11\x1c\x05\x15\x70\xa4\x4e\xe1\x95\xb7\x16\x3c",
        // "" / M(None) / S(0) / L(0)
        "\x44\xd0\xb5\x23\xc1\x4b\x9f\xf4\x92\xfa\x0e\x46\xf8\x8d\x1c\xdb\xf7\x25\xbc\x3b\x66\x0d\x42\x3b\xc9\xbf\xdb\x7f\x02\x3c\xc7\xc3",
        // "" / M(None) / S(0) / L(0)
        "\x37\x68\x89\x10\x18\x81\xee\x3f\x98\xac\x2e\xf7\xef\xb9\xa6\xc1\xc6\xce\xd4\xd0\x88\x14\x24\x86\x7b\x26\xce\xd7\x21\x05\x50\xb6",
        // "." / M(Xor3) / S(250) / L(1)
        "\x24\x0a\xac\xb8\xb0\x20\xfc\xa5\x3b\xd6\x6f\x6e\x96\x62\x61\x6a",
        // "CFDictionaryAddValue" / M(Xor1) / S(154) / L(20)
        "\xd9\xdc\xde\xf3\xf9\xee\xf3\xf5\xf4\xfb\xe8\xe3\xdb\xfe\xfe\xcc\xfb\xf6\xef\xff\x9a",
        // "" / M(None) / S(0) / L(0)
        "\x01\xa3\xcd\x59\xa1\xca\x78\x4b\x07\x81\x44\x22\x73\x70\xf6\xa2\xa4\xc7\x97\xf2\x0f\x39\xbd\x1a\x4c\xdd\x58\x9c\x50\xd6\xe4\x55",
        // "PKCS7_verify" / M(Rot) / S(229) / L(12)
        "\x35\x30\x28\x38\x1c\x44\x5b\x4a\x57\x4e\x4b\x5e\xe5\x97\x33\x25",
        // "setDelegate:" / M(Xor1) / S(218) / L(12)
        "\xa9\xbf\xae\x9e\xbf\xb6\xbf\xbd\xbb\xae\xbf\xe0\xda\xa3\xdf\x3f",
        // "CC_SHA1_Init" / M(Rot) / S(52) / L(12)
        "\x77\x77\x93\x87\x7c\x75\x65\x93\x7d\xa2\x9d\xa8\x34\x23\x04\x6f",
        // "CFDictionarySetValue" / M(Xor2) / S(210) / L(20)
        "\x84\x81\x83\xae\xa4\xb3\xae\xa8\xa9\xa6\xb5\xbe\x94\xa2\xb3\x91\xa6\xab\xb2\xa2\xc7",
        // "CFBundleIdentifier" / M(Xor1) / S(58) / L(18)
        "\x79\x7c\x78\x4f\x54\x5e\x56\x5f\x73\x5e\x5f\x54\x4e\x53\x5c\x53\x5f\x48\x3a",
        // "" / M(None) / S(0) / L(0)
        "\xac\xbd\x5a\xd4\x11\xaf\x24\x15\x4e\x80\xe2\x0f\xfc\xf0\x04\x12\xc2\xc7\x04\x1b\x3e\x3a\x03\x0f\x45\x76\x86\x74\x98\x65\x51\x6c",
        // "" / M(None) / S(0) / L(0)
        "\x8c\x82\x66\x99\x53\x9c\x9e\xce\xb7\xeb\x43\xf1\x72\x0d\x93\xad\x0d\x1a\x6f\xe9\x32\xd7\xbf\x6e\x5c\xfc\xcd\x48\x6e\x64\x92\x3a",
        // "%02X" / M(Rot) / S(109) / L(4)
        "\x92\x9d\x9f\xc5\x6d\xac\x6a\xfc\x77\xdb\x36\xe8\xc6\xbe\xe9\x56",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor2) / S(72) / L(59)
        "\x3a\x3d\x36\x3d\x69\x36\x39\x6e\x36\x3a\x3a\x36\x3e\x6f\x36\x39\x35\x36\x3f\x6d\x36\x3c\x34\x36\x6a\x6a\x36\x39\x34\x36\x68\x3d\x36\x38\x6d\x36\x69\x3e\x36\x3e\x38\x36\x39\x3e\x36\x68\x3d\x36\x35\x34\x36\x68\x6a\x36\x3a\x6f\x36\x3a\x3c\x0c\x1d\xf0\x60\x98\x62\x93\x77\x15",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(81) / L(31)
        "\xbc\x94\x97\xa5\xca\xc1\xb6\x95\xba\xb4\xc5\xba\xc0\xbf\xb2\xc3\xca\xa7\xb2\xbd\xc6\xb6\x94\xb2\xbd\xbd\x93\xb2\xb4\xbc\xc4\x51",
        // "SHA1_Init" / M(Xor1) / S(44) / L(9)
        "\x7f\x64\x6d\x1d\x73\x65\x42\x45\x58\x2c\xb8\x28\x92\xdc\xbf\x1c",
        // "CFReadStreamOpen" / M(Rot) / S(37) / L(16)
        "\x68\x6b\x77\x8a\x86\x89\x78\x99\x97\x8a\x86\x92\x74\x95\x8a\x93\x25",
        // "getUUIDBytes:" / M(Xor2) / S(169) / L(13)
        "\xde\xdc\xcd\xec\xec\xf0\xfd\xfb\xc0\xcd\xdc\xca\x83\xb9\x7d\xf7",
        // "CFBundleGetIdentifier" / M(Xor4) / S(204) / L(21)
        "\xcb\xce\xca\xfd\xe6\xec\xe4\xed\xcf\xed\xfc\xc1\xec\xed\xe6\xfc\xe1\xee\xe1\xed\xfa\x88",
        // "CFDictionaryGetValue" / M(Xor2) / S(211) / L(20)
        "\x85\x80\x82\xaf\xa5\xb2\xaf\xa9\xa8\xa7\xb4\xbf\x81\xa3\xb2\x90\xa7\xaa\xb3\xa3\xc6",
        // "" / M(None) / S(0) / L(0)
        "\x9c\xed\x6e\xeb\xc8\xce\xe8\xdc\xda\x37\x90\x4f\xfe\xa7\x0a\x72\x6c\x52\xd2\xb6\xca\x5a\x22\xe1\x9a\x4e\x0a\x2b\x9f\x4a\x99\xf8",
        // "CFRelease" / M(Xor2) / S(201) / L(9)
        "\x9a\x9f\x8b\xbc\xb5\xbc\xb8\xaa\xbc\xd9\xaa\xb8\x14\xc8\xb6\x3e",
        // "CFDateFormatterSetFormat" / M(Xor3) / S(114) / L(24)
        "\xd0\xd5\xd7\xf2\xe7\xf6\xd5\xfc\xe1\xfe\xf2\xe7\xe7\xf6\xe1\xc0\xf6\xe7\xd5\xfc\xe1\xfe\xf2\xe7\x93\x22\x7c\x7d\x1a\x97\x9c\x44\xf2",
        // "EVP_get_digestbyname" / M(Xor2) / S(196) / L(20)
        "\x94\x87\x81\x8e\xb6\xb4\xa5\x8e\xb5\xb8\xb6\xb4\xa2\xa5\xb3\xa8\xbf\xb0\xbc\xb4\xd1",
        // "" / M(None) / S(0) / L(0)
        "\xe9\xf9\xb9\x57\x99\x60\x30\xe2\x17\xaa\x32\xba\xff\x28\xe8\xd5\x2e\x2d\x1b\xec\x52\x6e\x4b\xe9\xda\xd4\x52\x91\xe2\x29\x99\x0b",
        // "setjmp" / M(Xor1) / S(22) / L(6)
        "\x65\x73\x62\x7c\x7b\x66\x16\x33\x76\x92\x5b\xc0\x19\xd1\x93\x4d",
        // "CFReadStreamClose" / M(Xor1) / S(76) / L(17)
        "\x0f\x0a\x1e\x29\x2d\x28\x1f\x38\x3e\x29\x2d\x21\x0f\x20\x23\x3f\x29\x4c",
        // "1" / M(Xor1) / S(168) / L(1)
        "\x99\xa8\x55\xab\x0d\x16\xdf\xda\x93\xe5\xda\xac\x9f\x66\xc2\x2b",
        // "sel_registerName" / M(Xor3) / S(202) / L(16)
        "\xa8\xbe\xb7\x84\xa9\xbe\xbc\xb2\xa8\xaf\xbe\xa9\x95\xba\xb6\xbe\xdb",
        // "SHA1_Init" / M(Xor2) / S(249) / L(9)
        "\xba\xa1\xa8\xd8\xb6\xa0\x87\x80\x9d\xe9\xaa\x21\xcd\xf9\xd6\x4e",
        // "%02X:" / M(Xor1) / S(181) / L(5)
        "\x90\x85\x87\xed\x8f\xb5\xb1\xfc\xcf\xfc\xe0\x98\x5a\x17\xe8\x0c",
        // "ASN1_get_object" / M(Xor3) / S(31) / L(15)
        "\x6e\x7c\x61\x1e\x70\x48\x4a\x5b\x70\x40\x4d\x45\x4a\x4c\x5b\x2f",
        // "CFDictionaryGetValue" / M(Rot) / S(169) / L(20)
        "\xec\xef\xed\x12\x0c\x1d\x12\x18\x17\x0a\x1b\x22\xf0\x0e\x1d\xff\x0a\x15\x1e\x0e\xa9",
        // "strlen" / M(Xor3) / S(255) / L(6)
        "\x7c\x7b\x7d\x63\x6a\x61\x0f\xeb\xd6\x36\xcf\x37\xc5\xda\x9f\xa1",
        // "Apple Root CA" / M(Xor1) / S(104) / L(13)
        "\x29\x18\x18\x04\x0d\x48\x3a\x07\x07\x1c\x48\x2b\x29\x68\x2a\xc7",
        // "CFStringCompare" / M(Xor4) / S(57) / L(15)
        "\xd3\xd6\xc3\xe4\xe2\xf9\xfe\xf7\xd3\xff\xfd\xe0\xf1\xe2\xf5\x90",
        // "CFReadStreamRead" / M(Rot) / S(237) / L(16)
        "\x30\x33\x3f\x52\x4e\x51\x40\x61\x5f\x52\x4e\x5a\x3f\x52\x4e\x51\xed",
        // "X509_digest" / M(Xor1) / S(101) / L(11)
        "\x3d\x50\x55\x5c\x3a\x01\x0c\x02\x00\x16\x11\x65\xdf\xd5\xae\x0e",
        // "OpenSSL_add_all_digests" / M(Rot) / S(133) / L(23)
        "\xd4\xf5\xea\xf3\xd8\xd8\xd1\xe4\xe6\xe9\xe9\xe4\xe6\xf1\xf1\xe4\xe9\xee\xec\xea\xf8\xf9\xf8\x85\xe9\x9b\x32\x4f\x43\xef\x5f\x52",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor3) / S(87) / L(39)
        "\xc4\xc1\xd3\xee\xea\xe2\xdd\xe8\xe9\xe2\xc4\xf5\xe2\xe6\xf3\xe2\xd0\xee\xf3\xef\xd3\xee\xea\xe2\xce\xe9\xf3\xe2\xf5\xf1\xe6\xeb\xc1\xf5\xe8\xea\xc0\xca\xd3\x87\xaf\x8d\x66\xdb\xba\x09\xac\xcc",
        // "CFDictionarySetValue" / M(Rot) / S(243) / L(20)
        "\x36\x39\x37\x5c\x56\x67\x5c\x62\x61\x54\x65\x6c\x46\x58\x67\x49\x54\x5f\x68\x58\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x12\x46\x81\x07\x5d\x7d\xd3\xc6\x34\x02\x27\x02\x48\x0e\x81\x0d\xc8\x03\x7b\x71\x90\x62\xa1\x08\x05\x2f\x0e\xa8\x2c\xe8\xcd\x04",
        // "" / M(None) / S(0) / L(0)
        "\x49\x9e\xd4\x09\x1f\x2f\x17\xcb\x3a\x29\xe1\x18\xdb\xff\x1f\xa9\x8b\x5f\x5a\x1c\x20\x56\x27\x76\xc7\x3b\x71\x69\xe8\x07\x00\x3d",
        // "c2i_ASN1_INTEGER" / M(Xor2) / S(219) / L(16)
        "\xa9\xf8\xa3\x95\x8b\x99\x84\xfb\x95\x83\x84\x9e\x8f\x8d\x8f\x98\xca",
        // "X509_digest" / M(Rot) / S(37) / L(11)
        "\x7d\x5a\x55\x5e\x84\x89\x8e\x8c\x8a\x98\x99\x25\xa5\x53\xb5\xd0",
        // "PKCS7_free" / M(Xor4) / S(221) / L(10)
        "\x80\x9b\x93\x83\xe7\x8f\xb6\xa2\xb5\xb5\xd0\x8c\x10\xd7\x49\x99",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Rot) / S(128) / L(39)
        "\xc3\xc6\xd4\xe9\xed\xe5\xda\xef\xee\xe5\xc3\xf2\xe5\xe1\xf4\xe5\xd7\xe9\xf4\xe8\xd4\xe9\xed\xe5\xc9\xee\xf4\xe5\xf2\xf6\xe1\xec\xc6\xf2\xef\xed\xc7\xcd\xd4\x80\xab\x81\xfe\x84\x24\x94\x34\x82",
        // "CFBundleGetIdentifier" / M(Xor2) / S(236) / L(21)
        "\xb9\xbc\xb8\x8f\x94\x9e\x96\x9f\xbd\x9f\x8e\xb3\x9e\x9f\x94\x8e\x93\x9c\x93\x9f\x88\xfa",
        // "strncmp" / M(Xor3) / S(148) / L(7)
        "\xd7\xd0\xd6\xca\xc7\xc9\xd4\xa4\x2d\x3c\x46\x7d\x03\x53\x7a\x94",
        // "mainBundle" / M(Xor3) / S(102) / L(10)
        "\x1b\x17\x1f\x18\x34\x03\x18\x12\x1a\x13\x76\xda\xe8\xb7\x4a\xc9",
        // "objc_lookUpClass" / M(Xor3) / S(37) / L(16)
        "\x59\x54\x5c\x55\x69\x5a\x59\x59\x5d\x63\x46\x75\x5a\x57\x45\x45\x36",
        // "" / M(None) / S(0) / L(0)
        "\xb0\xb9\xea\x3f\x48\x77\x77\xa9\x5b\xd5\x11\x02\xb5\xa4\x09\x47\xbe\x51\x5e\x46\x48\x53\x47\x12\xe3\xc6\x4b\x6b\x52\x14\xee\x36",
        // "OBJ_txt2obj" / M(Xor3) / S(21) / L(11)
        "\x6a\x67\x6f\x7a\x51\x5d\x51\x17\x4a\x47\x4f\x25\xbf\x5c\xcc\x55",
        // "CFDateFormatterCreate" / M(Xor3) / S(139) / L(21)
        "\xe2\xe7\xe5\xc0\xd5\xc4\xe7\xce\xd3\xcc\xc0\xd5\xd5\xc4\xd3\xe2\xd3\xc4\xc0\xd5\xc4\xa1",
        // "" / M(None) / S(0) / L(0)
        "\xd0\xdc\x0e\x25\x3d\xbc\xf4\xe3\x1f\x73\x4f\x01\x77\x5e\xaa\x9e\x4a\xa1\x95\x32\x4d\x5e\x39\xee\x3a\x28\x47\xff\xcc\xd4\xcf\x44",
        // "longjmp" / M(Xor2) / S(140) / L(7)
        "\xf0\xf3\xf2\xfb\xf6\xf1\xec\x9c\x6e\xfe\x78\xdc\x4c\x50\xb9\xac",
        // "EVP_DigestFinal" / M(Xor3) / S(109) / L(15)
        "\x38\x2b\x2d\x22\x39\x14\x1a\x18\x0e\x09\x3b\x14\x13\x1c\x11\x7d",
        // "BIO_write" / M(Xor3) / S(0) / L(9)
        "\x52\x59\x5f\x4f\x67\x62\x79\x64\x75\x10\xfb\x10\x6b\x72\x09\xd4",
        // "%02X:" / M(Rot) / S(17) / L(5)
        "\x36\x41\x43\x69\x4b\x11\x06\x84\xc2\x60\x4c\x9c\x40\x2a\x44\xaf",
        // "CFBundleUnloadExecutable" / M(Xor1) / S(12) / L(24)
        "\x4f\x4a\x4e\x79\x62\x68\x60\x69\x59\x62\x60\x63\x6d\x68\x49\x74\x69\x6f\x79\x78\x6d\x6e\x60\x69\x0c\x6b\xb3\x19\xfd\xf5\x57\x8e\x27",
        // "%02X:" / M(Xor3) / S(159) / L(5)
        "\x8a\x9f\x9d\xf7\x95\xaf\x63\x02\x2d\x28\x4a\xbc\xd5\x98\x0b\xda",
        // "." / M(Rot) / S(131) / L(1)
        "\xb1\x83\xb2\x1e\xec\xfb\x42\x9a\xee\x93\x47\xca\x3e\xd4\x8f\xcd",
        // "setjmp" / M(Xor2) / S(216) / L(6)
        "\xbb\xad\xbc\xa2\xa5\xb8\xc8\x4a\x96\xad\x16\xf1\x51\x22\x87\x4e",
        // "CFDictionaryGetValue" / M(Xor3) / S(96) / L(20)
        "\x36\x33\x31\x1c\x16\x01\x1c\x1a\x1b\x14\x07\x0c\x32\x10\x01\x23\x14\x19\x00\x10\x75",
        // "d2i_PKCS7_bio" / M(Xor2) / S(203) / L(13)
        "\xbf\xe9\xb2\x84\x8b\x90\x98\x88\xec\x84\xb9\xb2\xb4\xdb\xdf\xda",
        // "%02x" / M(Xor1) / S(154) / L(4)
        "\xbf\xaa\xa8\xe2\x9a\xda\x1f\xa4\x8f\x9f\x5b\x8c\x77\x2b\x6c\xea",
        // "dlopen" / M(Xor4) / S(224) / L(6)
        "\x64\x6c\x6f\x70\x65\x6e\x00\x56\x79\xbb\xf5\x13\x40\x6a\x00\x44",
        // "BIO_free" / M(Xor1) / S(74) / L(8)
        "\x08\x03\x05\x15\x2c\x38\x2f\x2f\x4a\xaa\x32\x5b\x96\x1c\x02\x7c",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor4) / S(180) / L(40)
        "\x42\x45\x45\x31\x41\x36\x42\x42\x46\x37\x41\x4d\x47\x35\x44\x4c\x32\x32\x41\x4c\x30\x45\x40\x35\x31\x46\x46\x40\x41\x46\x30\x45\x4d\x4c\x30\x32\x42\x37\x42\x44\x74\x03\xb7\xaf\x6a\xe9\x1e\x16\xf7",
        // "" / M(None) / S(0) / L(0)
        "\x62\xf2\xd3\xdf\xd6\xc8\x3a\xc9\xd8\x66\xe9\x24\x51\x2d\x9f\xcc\x7d\xc8\xbc\x65\x4f\x36\xba\x4c\x80\x81\x35\x70\xf2\x5a\x93\x89",
        // "d2i_PKCS7_bio" / M(Rot) / S(18) / L(13)
        "\x76\x44\x7b\x71\x62\x5d\x55\x65\x49\x71\x74\x7b\x81\x12\x47\x23",
        // "CFDateCompare" / M(Rot) / S(49) / L(13)
        "\x74\x77\x75\x92\xa5\x96\x74\xa0\x9e\xa1\x92\xa3\x96\x31\xe8\x5e",
        // "EVP_MD_CTX_init" / M(Xor1) / S(119) / L(15)
        "\x32\x21\x27\x28\x3a\x33\x28\x34\x23\x2f\x28\x1e\x19\x1e\x03\x77",
        // "CFStringCompare" / M(Rot) / S(51) / L(15)
        "\x76\x79\x86\xa7\xa5\x9c\xa1\x9a\x76\xa2\xa0\xa3\x94\xa5\x98\x33",
        // "SHA1_Final" / M(Xor3) / S(36) / L(10)
        "\x67\x7c\x75\x05\x6b\x72\x5d\x5a\x55\x58\x34\xdd\xbd\xc3\x87\x2f",
        // "" / M(None) / S(0) / L(0)
        "\x02\x14\xc9\x69\xed\x5e\x18\x5f\x42\x16\x45\x8f\xe5\x51\x67\x07\x3a\xd7\x73\x42\x6c\x1f\x5d\x2c\xb1\x43\x70\x19\x34\x05\x17\x70",
        // "strlen" / M(Xor2) / S(135) / L(6)
        "\xe4\xe3\xe5\xfb\xf2\xf9\x97\x5c\x9f\xe8\x5b\xb4\x21\xa6\xd1\xc4",
        // "alloc" / M(Rot) / S(85) / L(5)
        "\xb6\xc1\xc1\xc4\xb8\x55\xf7\x8b\xb3\x07\x82\x2c\x6f\x31\xe9\xc9",
        // "" / M(None) / S(0) / L(0)
        "\xaa\x5f\xa0\x91\x43\xcf\xd2\xe8\x2c\xaf\x9f\xe9\x4f\xa9\xa3\x5d\xb3\x77\x3d\x15\x60\x9c\x91\x93\x9c\x36\x94\x86\x9d\xcb\x4c\xc5",
        // "" / M(None) / S(0) / L(0)
        "\x93\x71\xeb\xbf\x7d\x9d\x69\xb5\x2b\x02\x49\x87\x80\xca\xb6\x68\x87\x8a\x84\xec\xae\x1c\x5f\x08\x4d\xf1\xca\x2b\x09\xdc\xa8\x2e",
        // "CFBundleGetIdentifier" / M(Xor4) / S(160) / L(21)
        "\x83\x86\x82\xb5\xae\xa4\xac\xa5\x87\xa5\xb4\x89\xa4\xa5\xae\xb4\xa9\xa6\xa9\xa5\xb2\xc0",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor1) / S(194) / L(40)
        "\xf4\xf3\xf3\x87\xf7\x80\xf4\xf4\xf0\x81\xf7\xfb\xf1\x83\xf2\xfa\x84\x84\xf7\xfa\x86\xf3\xf6\x83\x87\xf0\xf0\xf6\xf7\xf0\x86\xf3\xfb\xfa\x86\x84\xf4\x81\xf4\xf2\xc2\x19\xb9\xbf\xaf\x8a\xb1\x7f\xfc",
        // "X509_digest" / M(Xor2) / S(216) / L(11)
        "\x90\xfd\xf8\xf1\x97\xac\xa1\xaf\xad\xbb\xbc\xc8\x4a\x2b\x87\xad",
        // "X509_get_ext_by_OBJ" / M(Xor4) / S(15) / L(19)
        "\x74\x19\x1c\x15\x73\x4b\x49\x58\x73\x49\x54\x58\x73\x4e\x55\x73\x63\x6e\x66\x2c",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(230) / L(26)
        "\x31\x34\x20\x17\x13\x16\x21\x06\x00\x17\x13\x1f\x31\x00\x17\x13\x06\x17\x25\x1b\x06\x1a\x34\x1b\x1e\x17\x72\xef\xd9\x19\x00\x1b\x44\x4d\x6b",
        // "%02X" / M(Xor2) / S(196) / L(4)
        "\xf1\xe4\xe6\x8c\xd4\x33\xa9\xf2\x13\x6a\x45\x01\x7e\x80\x75\x0c",
        // "%02x" / M(Xor1) / S(231) / L(4)
        "\xc2\xd7\xd5\x9f\xe7\x56\xd3\x2f\x1f\xb5\xeb\x22\xd4\x95\x5e\xcd",
        // "CFDateFormatterSetProperty" / M(Xor1) / S(86) / L(26)
        "\x15\x10\x12\x37\x22\x33\x10\x39\x24\x3b\x37\x22\x22\x33\x24\x05\x33\x22\x06\x24\x39\x26\x33\x24\x22\x2f\x56\xb3\xcc\xe3\x44\x55\xba\xce\x55",
        // "strncmp" / M(Xor2) / S(153) / L(7)
        "\xfa\xfd\xfb\xe7\xea\xe4\xf9\x89\x71\xe0\x2c\x5d\x5e\x2b\xf3\x14",
        // "sk_free" / M(Xor4) / S(24) / L(7)
        "\xf3\xeb\xdf\xe6\xf2\xe5\xe5\x80\xf0\x92\xc0\x0b\x92\xd4\xbe\x9c",
        // "CFStringCreateWithCString" / M(Rot) / S(109) / L(25)
        "\xb0\xb3\xc0\xe1\xdf\xd6\xdb\xd4\xb0\xdf\xd2\xce\xe1\xd2\xc4\xd6\xe1\xd5\xb0\xc0\xe1\xdf\xd6\xdb\xd4\x6d\x79\x52\xff\x96\x75\xc5\xb4\x8a",
        // "UIDevice" / M(Xor1) / S(143) / L(8)
        "\xda\xc6\xcb\xea\xf9\xe6\xec\xea\x8f\x97\xa3\xef\x18\xed\x52\xa3",
        // "BIO_s_mem" / M(Rot) / S(113) / L(9)
        "\xb3\xba\xc0\xd0\xe4\xd0\xde\xd6\xde\x71\xae\x6f\xa2\x2a\x37\xb1",
        // "CFDataAppendBytes" / M(Xor4) / S(178) / L(17)
        "\xc7\xc2\xc0\xe5\xf0\xe5\xc5\xf4\xf4\xe1\xea\xe0\xc6\xfd\xf0\xe1\xf7\x84",
        // "" / M(None) / S(0) / L(0)
        "\x4e\x88\x7a\xe9\x42\xd4\xb2\xfa\x5c\x39\x3d\x62\x07\x37\x7e\x61\x94\xa7\x7f\x33\x0e\xf5\xad\x1c\xc9\x39\x71\x46\x31\x45\xab\x77",
        // "CFDataCreate" / M(Xor1) / S(113) / L(12)
        "\x32\x37\x35\x10\x05\x10\x32\x03\x14\x10\x05\x14\x71\x59\x95\x53",
        // "" / M(None) / S(0) / L(0)
        "\xe0\xf4\xa6\x9a\x55\xc7\x62\xd1\xee\x2c\xa0\x38\x14\x35\xac\x4c\xb8\x25\xa9\x6a\x21\x30\x8e\xbd\x23\xd7\x12\x82\xd6\xe2\x7f\xad",
        // "X509_STORE_add_cert" / M(Xor1) / S(103) / L(19)
        "\x3f\x52\x57\x5e\x38\x34\x33\x28\x35\x22\x38\x06\x03\x03\x38\x04\x02\x15\x13\x67",
        // "CFEqual" / M(Xor2) / S(181) / L(7)
        "\xe6\xe3\xe0\xd4\xd0\xc4\xc9\xa5\xd8\xdb\xf3\x13\xaa\xe0\xe1\x64",
        // "CFBundleGetMainBundle" / M(Xor4) / S(34) / L(21)
        "\xaf\xaa\xae\x99\x82\x88\x80\x89\xab\x89\x98\xa1\x8d\x85\x82\xae\x99\x82\x88\x80\x89\xec",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x70\x99\xad\x63\xf3\xc4\xe4\xb8\x6e\x73\xff\x02\x38\x59\x13\xe6\x4e\xbd\x41\x6f\x93\x23\x54\x92\x4f\xf9\x04\xf6\xd6\x2d\x20",
        // "" / M(None) / S(0) / L(0)
        "\x31\xba\xff\x1a\xfa\x5c\x86\x9f\xbd\x57\xe2\xba\xeb\x2b\xee\x40\x9a\x49\x12\xbf\x8a\x7d\x93\x6c\x7b\xb1\xb8\xc2\x7d\xb5\x3a\xe8",
        // "SHA1" / M(Xor2) / S(107) / L(4)
        "\x28\x33\x3a\x4a\x7b\x98\xe2\x7a\x02\x54\x5c\xe2\xcf\x8e\x61\x5b",
        // "PKCS7_verify" / M(Xor4) / S(118) / L(12)
        "\x30\x2b\x23\x33\x57\x3f\x16\x05\x12\x09\x06\x19\x60\xd5\x76\x98",
        // "CFDataCreateMutable" / M(Xor1) / S(139) / L(19)
        "\xc8\xcd\xcf\xea\xff\xea\xc8\xf9\xee\xea\xff\xee\xc6\xfe\xff\xea\xe9\xe7\xee\x8b",
        // "" / M(None) / S(0) / L(0)
        "\x61\xda\x7d\x05\x76\x9e\x8a\x9c\xf1\x6a\x19\x63\xbb\x8d\xad\x72\x97\xad\x7e\x63\x4f\x32\x7d\x64\xd3\xd6\xb6\x81\x2d\x77\x05\xf1",
        // "SHA1_Update" / M(Xor1) / S(9) / L(11)
        "\x5a\x41\x48\x38\x56\x5c\x79\x6d\x68\x7d\x6c\x09\x8b\x1d\x21\xc4",
        // "" / M(None) / S(0) / L(0)
        "\xb6\x12\x30\x6f\x4a\x22\xbc\x30\xd5\xb4\x16\xef\x63\xe9\x40\x84\xd2\x4b\x07\x87\xed\xd8\x42\x84\x01\x46\xbc\x36\x1e\xb8\xaf\xf4",
        // "CC_SHA1_Final" / M(Xor2) / S(207) / L(13)
        "\x9c\x9c\x80\x8c\x97\x9e\xee\x80\x99\xb6\xb1\xbe\xb3\xdf\x22\x4e",
        // "" / M(None) / S(0) / L(0)
        "\x20\x1e\xb4\x3c\x48\x1c\x18\xe8\x02\xb9\xaf\xf4\xb6\xd7\x91\x17\x3b\xad\xd9\xec\xcb\x75\xd6\x43\xec\xe3\xd5\xe0\x90\x07\xfe\x79",
        // "EVP_get_digestbyname" / M(Xor1) / S(98) / L(20)
        "\x27\x34\x32\x3d\x05\x07\x16\x3d\x06\x0b\x05\x07\x11\x16\x00\x1b\x0c\x03\x0f\x07\x62",
        // "" / M(None) / S(0) / L(0)
        "\x4b\x7b\x1e\x40\x45\x6a\x35\x02\xa7\xb0\xbe\xa9\xa1\xcb\x85\x1f\xdb\x2b\x02\x8f\x31\xbd\x82\x1d\xeb\x87\xde\xbb\xbb\x0d\xe3\xf5",
        // "CFStringCreateWithBytes" / M(Rot) / S(107) / L(23)
        "\xae\xb1\xbe\xdf\xdd\xd4\xd9\xd2\xae\xdd\xd0\xcc\xdf\xd0\xc2\xd4\xdf\xd3\xad\xe4\xdf\xd0\xde\x6b\xb4\xd0\x66\xba\xf0\x89\x7f\x29",
        // "CC_SHA1" / M(Xor3) / S(79) / L(7)
        "\x1c\x1c\x00\x0c\x17\x1e\x6e\x5f\x1d\x03\xfa\x5f\xe8\x46\x79\x9b",
        // "CFStringCompare" / M(Xor2) / S(25) / L(15)
        "\x4a\x4f\x5a\x7d\x7b\x60\x67\x6e\x4a\x66\x64\x79\x68\x7b\x6c\x09",
        // "kCFTypeDictionaryKeyCallBacks" / M(Xor3) / S(194) / L(29)
        "\x83\xab\xae\xbc\x91\x98\x8d\xac\x81\x8b\x9c\x81\x87\x86\x89\x9a\x91\xa3\x8d\x91\xab\x89\x84\x84\xaa\x89\x8b\x83\x9b\xe8\xc8\x2d\xef\x5d\x15\x71\x94\x61",
        // "" / M(None) / S(0) / L(0)
        "\xf6\xb7\x26\x63\x54\x9c\xba\xcf\xba\xce\x58\xcf\x94\x6f\xc8\x83\xf3\x10\xb2\xd3\x20\xa3\x7b\x0e\xd5\xa5\x36\xfe\x8b\x2a\x90\xe5",
        // "CFDateFormatterSetFormat" / M(Xor2) / S(159) / L(24)
        "\xfd\xf8\xfa\xdf\xca\xdb\xf8\xd1\xcc\xd3\xdf\xca\xca\xdb\xcc\xed\xdb\xca\xf8\xd1\xcc\xd3\xdf\xca\xbe\x0e\x31\x06\x5f\x22\xfd\xe7\xf4",
        // "CFDataGetBytePtr" / M(Xor1) / S(179) / L(16)
        "\xf0\xf5\xf7\xd2\xc7\xd2\xf4\xd6\xc7\xf1\xca\xc7\xd6\xe3\xc7\xc1\xb3",
        // "CFDataAppendBytes" / M(Xor1) / S(81) / L(17)
        "\x12\x17\x15\x30\x25\x30\x10\x21\x21\x34\x3f\x35\x13\x28\x25\x34\x22\x51",
        // "EVP_DigestFinal" / M(Xor1) / S(159) / L(15)
        "\xda\xc9\xcf\xc0\xdb\xf6\xf8\xfa\xec\xeb\xd9\xf6\xf1\xfe\xf3\x9f",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor2) / S(215) / L(59)
        "\xa5\xa2\xa9\xa2\xd6\xa9\xa6\xd1\xa9\xa5\xa5\xa9\xa1\xd0\xa9\xa6\xaa\xa9\xa0\xd2\xa9\xa3\xab\xa9\xd5\xd5\xa9\xa6\xab\xa9\xd7\xa2\xa9\xa7\xd2\xa9\xd6\xa1\xa9\xa1\xa7\xa9\xa6\xa1\xa9\xd7\xa2\xa9\xaa\xab\xa9\xd7\xd5\xa9\xa5\xd0\xa9\xa5\xa3\x93\x1e\xc5\x56\x7e\xa8\xaf\x5a\x71",
        // "" / M(None) / S(0) / L(0)
        "\x5b\x8a\x2e\x62\xec\xa1\xe5\x44\x4f\x8d\x08\x78\x48\x31\x78\xc2\x3d\x33\xea\x95\x22\xa8\x4a\xfc\xf3\x70\x76\xb7\x99\xfd\xef\x0e",
        // "BIO_s_mem" / M(Xor1) / S(247) / L(9)
        "\xb5\xbe\xb8\xa8\x84\xa8\x9a\x92\x9a\xf7\x43\x8f\x94\x66\x14\x9d",
        // "BIO_new" / M(Xor3) / S(118) / L(7)
        "\xc4\xcf\xc9\xd9\xe8\xe3\xf1\x86\x84\x4d\x14\xb2\x2b\xc4\x30\xca",
        // "" / M(None) / S(0) / L(0)
        "\xd8\x98\x2a\xc2\xc2\xc3\x9e\x65\xc0\x20\x5a\x76\x2f\xb3\xe9\x4f\xe4\xa9\x1f\x94\x62\xa3\x56\xb6\x97\xe6\x87\x81\x37\x2e\x8a\x3d",
        // "" / M(None) / S(0) / L(0)
        "\xda\xed\xf3\x63\x0c\x26\xb7\x23\x3b\x5f\xca\x82\x9d\x8c\xd2\xff\x43\x56\x86\x95\x9c\x85\x88\xfc\x43\x10\x61\x08\x0f\x8a\x7e\x9f",
        // "sha1" / M(Xor3) / S(209) / L(4)
        "\x92\x89\x80\xd0\xe1\xdf\x10\x39\xec\xff\xb5\x3e\x4b\xf8\xf3\x0f",
        // "CC_SHA1_Final" / M(Xor4) / S(143) / L(13)
        "\xb3\xb3\xaf\xa3\xb8\xb1\xc1\xaf\xb6\x99\x9e\x91\x9c\xf0\xa1\x5e",
        // "c2i_ASN1_INTEGER" / M(Xor4) / S(81) / L(16)
        "\x02\x53\x08\x3e\x20\x32\x2f\x50\x3e\x28\x2f\x35\x24\x26\x24\x33\x61",
        // "CFDataCreateMutable" / M(Xor1) / S(227) / L(19)
        "\xa0\xa5\xa7\x82\x97\x82\xa0\x91\x86\x82\x97\x86\xae\x96\x97\x82\x81\x8f\x86\xe3",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor3) / S(229) / L(40)
        "\x20\x27\x27\x73\x23\x74\x20\x20\x24\x75\x23\x2f\x25\x77\x26\x2e\x70\x70\x23\x2e\x72\x27\x22\x77\x73\x24\x24\x22\x23\x24\x72\x27\x2f\x2e\x72\x70\x20\x75\x20\x26\x16\x41\x85\x29\x53\xc0\x57\x41\xb4",
        // "Apple Root CA" / M(Rot) / S(180) / L(13)
        "\xf5\x24\x24\x20\x19\xd4\x06\x23\x23\x28\xd4\xf7\xf5\xb4\xfa\xa4",
        // "CFBundleVersion" / M(Xor1) / S(20) / L(15)
        "\x57\x52\x56\x61\x7a\x70\x78\x71\x42\x71\x66\x67\x7d\x7b\x7a\x14",
        // "CC_SHA1" / M(Xor2) / S(155) / L(7)
        "\xc8\xc8\xd4\xd8\xc3\xca\xba\x8b\x6a\xcb\x86\x3c\xb4\x0a\xd9\xfe",
        // "sk_value" / M(Xor2) / S(160) / L(8)
        "\xc3\xdb\xef\xc6\xd1\xdc\xc5\xd5\xb0\x1a\x2b\x6a\x4d\x5f\xac\xf3",
        // "" / M(None) / S(0) / L(0)
        "\x7f\xd9\x31\x55\xa2\x39\x44\xb4\xdf\x44\xfe\xf6\x3d\xee\x69\x81\x73\xb3\x46\x78\x6c\x03\xa2\x00\xe9\x1f\x33\xdd\xbe\x18\x0b\x4a",
        // "" / M(None) / S(0) / L(0)
        "\x25\x05\x80\xe6\x1c\xbe\x31\x40\x9a\xbe\x2a\x2e\xab\x68\xed\x4b\xd0\x0e\x58\x3d\x17\xf4\x7f\xcc\x19\xf3\xd9\x73\xdd\xeb\xca\x3a",
        // "alloc" / M(Xor1) / S(8) / L(5)
        "\x69\x64\x64\x67\x6b\x08\x27\x2f\x74\xdf\x30\x75\x6f\xd3\x28\x20",
        // "SHA1_Final" / M(Rot) / S(102) / L(10)
        "\xb9\xae\xa7\x97\xc5\xac\xcf\xd4\xc7\xd2\x66\x8b\xef\xa4\x9c\x16",
        // "%02x:" / M(Xor3) / S(15) / L(5)
        "\x3a\x2f\x2d\x67\x25\x1f\x35\xf2\x01\x73\xed\x07\xf9\x40\x1f\x1f",
        // "CFBundleUnloadExecutable" / M(Xor4) / S(135) / L(24)
        "\x24\x21\x25\x12\x09\x03\x0b\x02\x32\x09\x0b\x08\x06\x03\x22\x1f\x02\x04\x12\x13\x06\x05\x0b\x02\x67\x08\xb4\xe6\xee\xd7\x87\xb0\x03",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(92) / L(66)
        "\x30\x4c\x66\x6c\x6b\x7a\x72\x30\x53\x76\x7d\x6d\x7e\x6d\x66\x30\x59\x6d\x7e\x72\x7a\x68\x70\x6d\x74\x6c\x30\x5c\x70\x6d\x7a\x59\x70\x6a\x71\x7b\x7e\x6b\x76\x70\x71\x31\x79\x6d\x7e\x72\x7a\x68\x70\x6d\x74\x30\x5c\x70\x6d\x7a\x59\x70\x6a\x71\x7b\x7e\x6b\x76\x70\x71\x1f",
        // "CFStringCreateWithCString" / M(Xor1) / S(174) / L(25)
        "\xed\xe8\xfd\xda\xdc\xc7\xc0\xc9\xed\xdc\xcb\xcf\xda\xcb\xf9\xc7\xda\xc6\xed\xfd\xda\xdc\xc7\xc0\xc9\xae\x80\x29\x36\xca\x8f\xbf\xa2\x19",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(253) / L(35)
        "\x62\x67\x65\x40\x55\x44\x67\x4e\x53\x4c\x40\x55\x55\x44\x53\x62\x53\x44\x40\x55\x44\x65\x40\x55\x44\x67\x53\x4e\x4c\x72\x55\x53\x48\x4f\x46\x21",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor4) / S(108) / L(40)
        "\xcf\xc3\xc1\x82\xc5\xc2\xd8\xcd\xc2\xcb\xc5\xce\xc0\xc9\xdf\xc3\xca\xd8\xdb\xcd\xde\xc9\x82\xc1\xc9\xc2\xdf\xc0\xcd\xcf\xde\xc3\xdf\xdf\xc9\xdf\xd8\xcd\xd8\xdf\xac\x41\x66\x7d\x71\xad\x60\x35\x4d",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor4) / S(169) / L(59)
        "\xd2\xd5\xde\xd5\x81\xde\xd1\x86\xde\xd2\xd2\xde\xd6\x87\xde\xd1\xdd\xde\xd7\x85\xde\xd4\xdc\xde\x82\x82\xde\xd1\xdc\xde\x80\xd5\xde\xd0\x85\xde\x81\xd6\xde\xd6\xd0\xde\xd1\xd6\xde\x80\xd5\xde\xdd\xdc\xde\x80\x82\xde\xd2\x87\xde\xd2\xd4\xe4\x27\xaf\x13\x4d\xce\x48\xf6\xbb",
        // "CFBundleGetMainBundle" / M(Xor2) / S(149) / L(21)
        "\xc0\xc5\xc1\xf6\xed\xe7\xef\xe6\xc4\xe6\xf7\xce\xe2\xea\xed\xc1\xf6\xed\xe7\xef\xe6\x83",
        // "EVP_MD_CTX_init" / M(Rot) / S(59) / L(15)
        "\x80\x91\x8b\x9a\x88\x7f\x9a\x7e\x8f\x93\x9a\xa4\xa9\xa4\xaf\x3b",
        // "setDelegate:" / M(Xor1) / S(106) / L(12)
        "\x19\x0f\x1e\x2e\x0f\x06\x0f\x0d\x0b\x1e\x0f\x50\x6a\x95\x1e\xf7",
        // "CFArrayGetCount" / M(Xor4) / S(61) / L(15)
        "\x93\x96\x91\xa2\xa2\xb1\xa9\x97\xb5\xa4\x93\xbf\xa5\xbe\xa4\xd0",
        // "" / M(None) / S(0) / L(0)
        "\x02\x59\xf2\xab\x17\xe9\xa3\x50\x9e\xe9\xcf\x9e\xe2\xa8\x7f\xb4\x25\x10\xec\x32\xfa\x1b\xdb\x31\x5b\x93\xf0\x6d\x5d\xdd\x5a\x7c",
        // "c2i_ASN1_INTEGER" / M(Rot) / S(153) / L(16)
        "\xfc\xcb\x02\xf8\xda\xec\xe7\xca\xf8\xe2\xe7\xed\xde\xe0\xde\xeb\x99",
        // "OpenSSL_add_all_digests" / M(Xor3) / S(65) / L(23)
        "\x2e\x11\x04\x0f\x32\x32\x2d\x3e\x00\x05\x05\x3e\x00\x0d\x0d\x3e\x05\x08\x06\x04\x12\x15\x12\x61\xff\xd2\x40\x60\xba\x61\x42\x0c",
        // "" / M(None) / S(0) / L(0)
        "\xb1\xde\x06\xbe\xc6\x41\xe0\x33\xc4\x06\xd6\x78\x50\x9e\x09\x7e\xc9\xe3\x8a\xb2\x0f\x6b\xc1\xd7\xfe\xac\x10\xcd\x87\xe6\xe5\xc1",
        // "X509_STORE_add_cert" / M(Xor1) / S(177) / L(19)
        "\xe9\x84\x81\x88\xee\xe2\xe5\xfe\xe3\xf4\xee\xd0\xd5\xd5\xee\xd2\xd4\xc3\xc5\xb1",
        // "getUUIDBytes:" / M(Rot) / S(200) / L(13)
        "\x2f\x2d\x3c\x1d\x1d\x11\x0c\x0a\x41\x3c\x2d\x3b\x02\xc8\x0a\xe6",
        // "init" / M(Xor4) / S(231) / L(4)
        "\x19\x1e\x19\x04\x70\x5e\x08\xfc\x38\x2f\x83\x7e\x1d\xb8\x8c\xa5",
        // "." / M(Xor4) / S(16) / L(1)
        "\x2e\x00\x28\xc7\xd8\xcc\x12\xdf\x66\x86\xd5\x39\x29\xe2\x42\x0f",
        // "" / M(None) / S(0) / L(0)
        "\x47\x3e\x48\x87\x95\x7d\x32\xee\x47\x28\xe5\x33\xc4\x6b\x0c\x1e\xd0\x1c\xb8\xf7\x09\x78\x7c\xeb\xe0\x91\x1f\x1d\xa7\xe9\xe3\xd6",
        // "" / M(None) / S(0) / L(0)
        "\x29\xf2\x65\xd2\x81\xfc\x4d\xb7\xa7\x6f\x32\x3c\x0f\x12\xe0\xee\x30\x53\xa9\xeb\x0e\x2a\x44\x7c\x58\x5d\xae\x1d\x37\x4b\x9d\xe1",
        // "CFDateCreate" / M(Xor2) / S(39) / L(12)
        "\x74\x71\x73\x56\x43\x52\x74\x45\x52\x56\x43\x52\x37\x91\xb9\xd3",
        // "CFArrayAppendValue" / M(Xor2) / S(115) / L(18)
        "\x23\x26\x21\x12\x12\x01\x19\x21\x10\x10\x05\x0e\x04\x36\x01\x0c\x15\x05\x60",
        // "BIO_s_mem" / M(Xor3) / S(66) / L(9)
        "\x10\x1b\x1d\x0d\x21\x0d\x3f\x37\x3f\x52\x4d\x9f\xc7\x0d\x26\x72",
        // "ASN1_OBJECT_free" / M(Xor3) / S(47) / L(16)
        "\x01\x13\x0e\x71\x1f\x0f\x02\x0a\x05\x03\x14\x1f\x26\x32\x25\x25\x40",
        // "CFDataGetBytePtr" / M(Xor4) / S(46) / L(16)
        "\x4d\x48\x4a\x6f\x7a\x6f\x49\x6b\x7a\x4c\x77\x7a\x6b\x5e\x7a\x7c\x0e",
        // "%02x:" / M(Xor3) / S(19) / L(5)
        "\x06\x13\x11\x5b\x19\x23\x48\x99\x26\x45\x9e\x77\x10\xed\xfb\xc0",
        // "SKReceiptRefreshRequest" / M(Rot) / S(213) / L(23)
        "\x28\x20\x27\x3a\x38\x3a\x3e\x45\x49\x27\x3a\x3b\x47\x3a\x48\x3d\x27\x3a\x46\x4a\x3a\x48\x49\xd5\xd6\x2d\xa5\xa2\xf0\x99\xa5\xd9",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(42) / L(25)
        "\x5b\x58\x5c\x58\x62\x5e\x5a\x58\x5b\x5b\x5d\x60\x5d\x5f\x58\x5b\x5a\x5a\x58\x60\x58\x5b\x5b\x58\x5b\x2a\xce\x59\xcf\x6a\x2a\x07\x34\xfe",
        // "CFDateFormatterSetProperty" / M(Xor2) / S(183) / L(26)
        "\xd7\xd2\xd0\xf5\xe0\xf1\xd2\xfb\xe6\xf9\xf5\xe0\xe0\xf1\xe6\xc7\xf1\xe0\xc4\xe6\xfb\xe4\xf1\xe6\xe0\xed\x94\x37\x47\x4d\xfc\x46\x9a\x99\xc6",
        // "CFReadStreamClose" / M(Xor2) / S(185) / L(17)
        "\xe8\xed\xf9\xce\xca\xcf\xf8\xdf\xd9\xce\xca\xc6\xe8\xc7\xc4\xd8\xce\xab",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor3) / S(28) / L(32)
        "\x44\x44\x44\x44\x1a\x10\x1a\x70\x70\x1a\x10\x1a\x59\x59\x1a\x69\x1a\x75\x75\x1a\x07\x1a\x50\x50\x1a\x07\x1a\x4e\x4e\x1a\x67\x1a\x3d",
        // "CC_SHA1" / M(Xor2) / S(104) / L(7)
        "\x3b\x3b\x27\x2b\x30\x39\x49\x78\xdd\xb6\x45\xbf\xc1\x03\x15\x54",
        // "objc_getClass" / M(Xor4) / S(74) / L(13)
        "\xcf\xc2\xca\xc3\xff\xc7\xc5\xd4\xe3\xcc\xc1\xd3\xd3\xa0\x60\x63",
        // "CFDateCompare" / M(Xor4) / S(133) / L(13)
        "\x13\x16\x14\x31\x24\x35\x13\x3f\x3d\x20\x31\x22\x35\x50\x55\xce",
        // "" / M(None) / S(0) / L(0)
        "\x34\x12\xf9\x70\xf5\xc1\x20\xc8\x72\x69\x4e\x30\x95\xc6\x21\x2e\xc8\x9a\xbb\xeb\x63\x8c\x5e\x1a\xed\x38\x6d\xce\x51\x00\xf1\x7c",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor1) / S(236) / L(66)
        "\xc3\xbf\x95\x9f\x98\x89\x81\xc3\xa0\x85\x8e\x9e\x8d\x9e\x95\xc3\xaa\x9e\x8d\x81\x89\x9b\x83\x9e\x87\x9f\xc3\xaf\x83\x9e\x89\xaa\x83\x99\x82\x88\x8d\x98\x85\x83\x82\xc2\x8a\x9e\x8d\x81\x89\x9b\x83\x9e\x87\xc3\xaf\x83\x9e\x89\xaa\x83\x99\x82\x88\x8d\x98\x85\x83\x82\xec",
        // "NSBundle" / M(Xor1) / S(167) / L(8)
        "\xe9\xf4\xe5\xd2\xc9\xc3\xcb\xc2\xa7\xf2\xb9\x40\x5e\x29\x0e\x8a",
        // "exit" / M(Xor1) / S(79) / L(4)
        "\x2a\x37\x26\x3b\x4f\x2e\x64\x01\x49\xc1\x05\xf9\xbe\xe6\x08\x1c",
        // "CFRelease" / M(Xor2) / S(147) / L(9)
        "\xc0\xc5\xd1\xe6\xef\xe6\xe2\xf0\xe6\x83\x0d\xf5\xad\xbd\xc4\xdd",
        // "" / M(None) / S(0) / L(0)
        "\x36\xa9\x97\xd8\xd7\x69\xa8\x97\x32\xf7\x9f\xa3\xdb\xe3\xb7\xd0\xb3\xea\x93\xa5\x83\xfc\x23\x7e\xc0\xb5\x52\x43\x70\x7b\x25\x70",
        // "PKCS7_verify" / M(Rot) / S(167) / L(12)
        "\xf7\xf2\xea\xfa\xde\x06\x1d\x0c\x19\x10\x0d\x20\xa7\xe9\x5a\xcd",
        // "CC_SHA1_Init" / M(Xor3) / S(169) / L(12)
        "\xfa\xfa\xe6\xea\xf1\xf8\x88\xe6\xf0\xd7\xd0\xcd\xb9\x1b\x7f\xb0",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(86) / L(21)
        "\x3d\x15\x10\x02\x2f\x26\x33\x17\x24\x24\x37\x2f\x15\x37\x3a\x3a\x14\x37\x35\x3d\x25\x56",
        // "" / M(None) / S(0) / L(0)
        "\x9a\x29\x95\x7b\xbd\xe9\xd9\xee\x21\x2d\xc1\x0e\x2a\xf6\x34\x7f\xb0\xce\x88\xe6\x79\xcd\xe2\x31\x06\xa5\x92\x5b\xc7\xe3\x14\x68",
        // "BIO_write" / M(Xor4) / S(115) / L(9)
        "\x72\x79\x7f\x6f\x47\x42\x59\x44\x55\x30\xc5\xa2\x58\x39\x87\x00",
        // "X509_STORE_new" / M(Rot) / S(1) / L(14)
        "\x59\x36\x31\x3a\x60\x54\x55\x50\x53\x46\x60\x6f\x66\x78\x01\xb0",
        // "kCFDateFormatterTimeZone" / M(Rot) / S(146) / L(24)
        "\xfd\xd5\xd8\xd6\xf3\x06\xf7\xd8\x01\x04\xff\xf3\x06\x06\xf7\x04\xe6\xfb\xff\xf7\xec\x01\x00\xf7\x92\x37\xd8\x92\x97\x62\xc7\xdc\xaf",
        // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(93) / L(29)
        "\xc8\xa0\xa3\xb1\xd6\xcd\xc2\xa1\xc6\xc0\xd1\xc6\xcc\xcb\xbe\xcf\xd6\xa8\xc2\xd6\xa0\xbe\xc9\xc9\x9f\xbe\xc0\xc8\xd0\x5d\xd0\x38\xdc\x14\x26\x86\x98\x0a",
        // "BIO_write" / M(Xor1) / S(156) / L(9)
        "\xde\xd5\xd3\xc3\xeb\xee\xf5\xe8\xf9\x9c\x17\x69\xed\xd4\x83\x21",
        // "sel_registerName" / M(Xor3) / S(137) / L(16)
        "\xe9\xff\xf6\xc5\xe8\xff\xfd\xf3\xe9\xee\xff\xe8\xd4\xfb\xf7\xff\x9a",
        // "SHA1_Update" / M(Rot) / S(193) / L(11)
        "\x14\x09\x02\xf2\x20\x16\x31\x25\x22\x35\x26\xc1\x89\x4f\x81\x52",
        // "identifierForVendor" / M(Rot) / S(42) / L(19)
        "\x93\x8e\x8f\x98\x9e\x93\x90\x93\x8f\x9c\x70\x99\x9c\x80\x8f\x98\x8e\x99\x9c\x2a",
        // "PKCS7_get0_signers" / M(Xor4) / S(119) / L(18)
        "\x85\x9e\x96\x86\xe2\x8a\xb2\xb0\xa1\xe5\x8a\xa6\xbc\xb2\xbb\xb0\xa7\xa6\xd5",
        // "CFNumberCreate" / M(Xor1) / S(17) / L(14)
        "\x52\x57\x5f\x64\x7c\x73\x74\x63\x52\x63\x74\x70\x65\x74\x11\xba",
        // "" / M(None) / S(0) / L(0)
        "\x2f\x90\xec\xf1\xfc\x05\x76\xe4\x2e\x1d\xd2\x21\x2b\x70\x14\x43\xd6\xce\x7e\xf7\x92\xde\x22\xbc\x40\xde\x12\x43\xac\x63\xae\x83",
        // "" / M(None) / S(0) / L(0)
        "\x1e\x37\xe1\xe0\x4c\x4c\x0f\xac\xfd\x37\x33\x7b\xdd\x61\xa8\x3e\xa9\x7b\x7a\x3f\x9d\xa7\xa6\xae\x76\x08\x85\x7a\xa3\x2b\xa8\x22",
        // "sk_num" / M(Xor2) / S(120) / L(6)
        "\x1b\x03\x37\x06\x1d\x05\x68\x66\x36\x4d\x66\x4b\x70\xf3\xf6\x65",
        // "com.intangiblesoftware.menslacrossestats" / M(Rot) / S(255) / L(40)
        "\x62\x6e\x6c\x2d\x68\x6d\x73\x60\x6d\x66\x68\x61\x6b\x64\x72\x6e\x65\x73\x76\x60\x71\x64\x2d\x6c\x64\x6d\x72\x6b\x60\x62\x71\x6e\x72\x72\x64\x72\x73\x60\x73\x72\xff\xb3\x5a\x4e\xa2\xd3\xcb\x11\xd9",
        // "CFDateCreate" / M(Xor1) / S(168) / L(12)
        "\xeb\xee\xec\xc9\xdc\xcd\xeb\xda\xcd\xc9\xdc\xcd\xa8\x0b\x5f\xdf",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(169) / L(25)
        "\x88\x8d\x8f\xa2\xa8\xbf\xa2\xa4\xa5\xaa\xb9\xb2\x88\xb9\xae\xaa\xbf\xae\x86\xbe\xbf\xaa\xa9\xa7\xae\xcb\x6f\x79\xc4\xde\xc9\xef\x23\x9f",
        // "CFDataCreateMutable" / M(Xor4) / S(251) / L(19)
        "\xdf\xda\xd8\xfd\xe8\xfd\xdf\xee\xf9\xfd\xe8\xf9\xd1\xe9\xe8\xfd\xfe\xf0\xf9\x9c",
        // "EVP_DigestUpdate" / M(Xor4) / S(202) / L(16)
        "\x2f\x3c\x3a\x35\x2e\x03\x0d\x0f\x19\x1e\x3f\x1a\x0e\x0b\x1e\x0f\x6a",
        // "" / M(None) / S(0) / L(0)
        "\xdf\x85\x1d\x94\x1c\x05\x85\x6a\x52\xc1\x3f\x3d\x71\x99\x2b\x7c\xbe\x04\xc3\x56\x73\xb6\x33\x02\xeb\x76\x3b\xaf\xab\x25\xda\xed",
        // "CFReadStreamRead" / M(Xor2) / S(181) / L(16)
        "\xe7\xe2\xf6\xc1\xc5\xc0\xf7\xd0\xd6\xc1\xc5\xc9\xf6\xc1\xc5\xc0\xa4",
        // "CFBundleUnloadExecutable" / M(Xor1) / S(174) / L(24)
        "\xed\xe8\xec\xdb\xc0\xca\xc2\xcb\xfb\xc0\xc2\xc1\xcf\xca\xeb\xd6\xcb\xcd\xdb\xda\xcf\xcc\xc2\xcb\xae\x55\xd4\x09\x10\xfe\xaf\xc7\x34",
        // "" / M(None) / S(0) / L(0)
        "\xbe\x8c\x6a\xc9\x1b\xd0\x45\x39\xd1\x3d\xd5\x5b\x22\x37\xd9\xfd\x13\xb4\x98\x64\x5b\xaf\xa0\x4e\xb3\x57\xe3\x86\x0d\x39\x30\x24",
        // "" / M(None) / S(0) / L(0)
        "\xfe\x87\xe8\x74\x96\x47\xf6\xc7\xbf\x29\xa2\x6e\x86\xfa\x22\xcd\x06\x77\xaa\xda\x69\xf3\xe3\xb5\x7c\xc0\x4b\xd8\xd6\x65\x65\xb4",
        // "CFArrayGetCount" / M(Xor3) / S(225) / L(15)
        "\xb2\xb7\xb0\x83\x83\x90\x88\xb6\x94\x85\xb2\x9e\x84\x9f\x85\xf1",
        // "kCFBundleIdentifierKey" / M(Xor2) / S(225) / L(22)
        "\x9d\xb5\xb0\xb4\x83\x98\x92\x9a\x93\xbf\x92\x93\x98\x82\x9f\x90\x9f\x93\x84\xbd\x93\x8f\xf6",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(94) / L(31)
        "\xc9\xa1\xa4\xb2\xd7\xce\xc3\xa2\xc7\xc1\xd2\xc7\xcd\xcc\xbf\xd0\xd7\xb4\xbf\xca\xd3\xc3\xa1\xbf\xca\xca\xa0\xbf\xc1\xc9\xd1\x5e",
        // "currentDevice" / M(Xor3) / S(101) / L(13)
        "\x16\x00\x07\x07\x10\x1b\x01\x31\x10\x03\x1c\x16\x10\x75\x54\xd2",
        // "/usr/lib/libobjc.dylib" / M(Xor4) / S(144) / L(22)
        "\xdf\x85\x83\x82\xdf\x9c\x99\x92\xdf\x9c\x99\x92\x9f\x92\x9a\x93\xde\x94\x89\x9c\x99\x92\xf0",
        // "" / M(None) / S(0) / L(0)
        "\x42\xef\x2a\x01\xd5\xb8\x0b\x26\xc9\xe2\x56\xa8\xfd\x29\xf9\x8b\x38\xe2\xdd\x76\xca\xb5\xe2\x96\x76\xcc\xef\x09\x09\x6b\x7b\x96",
        // "RTLD_MAIN_ONLY" / M(Xor1) / S(77) / L(14)
        "\x1f\x19\x01\x09\x12\x00\x0c\x04\x03\x12\x02\x03\x01\x14\x4d\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x93\x8e\x09\xfa\xc5\xdf\x66\x54\xcb\xef\x06\x2f\x9d\x53\x28\x8a\xf3\xd7\xcf\x66\x6e\x70\x39\x78\xb1\x68\xb1\xee\x25\x37\x7d\x72",
        // "/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation" / M(Xor2) / S(68) / L(66)
        "\x28\x54\x7e\x74\x73\x62\x6a\x28\x4b\x6e\x65\x75\x66\x75\x7e\x28\x41\x75\x66\x6a\x62\x70\x68\x75\x6c\x74\x28\x44\x68\x75\x62\x41\x68\x72\x69\x63\x66\x73\x6e\x68\x69\x29\x61\x75\x66\x6a\x62\x70\x68\x75\x6c\x28\x44\x68\x75\x62\x41\x68\x72\x69\x63\x66\x73\x6e\x68\x69\x07",
        // "PKCS7_get0_signers" / M(Xor2) / S(57) / L(18)
        "\x7a\x61\x69\x79\x1d\x75\x4d\x4f\x5e\x1a\x75\x59\x43\x4d\x44\x4f\x58\x59\x2a",
        // "appStoreReceiptURL" / M(Xor3) / S(192) / L(18)
        "\xb2\xa3\xa3\x80\xa7\xbc\xa1\xb6\x81\xb6\xb0\xb6\xba\xa3\xa7\x86\x81\x9f\xd3",
        // "CFAbsoluteTimeGetCurrent" / M(Xor3) / S(236) / L(24)
        "\x4e\x4b\x4c\x6f\x7e\x62\x61\x78\x79\x68\x59\x64\x60\x68\x4a\x68\x79\x4e\x78\x7f\x7f\x68\x63\x79\x0d\x64\xb2\x56\x5e\x87\x6b\x15\xaf",
        // "exit" / M(Xor1) / S(134) / L(4)
        "\xe3\xfe\xef\xf2\x86\x55\xf3\x9e\x9c\x79\x55\x00\x42\x63\xc7\x49",
        // "BIO_free" / M(Rot) / S(241) / L(8)
        "\x33\x3a\x40\x50\x57\x63\x56\x56\xf1\xda\x63\x52\x97\xf0\x53\x5b",
        // "" / M(None) / S(0) / L(0)
        "\x45\xae\xfe\xc9\x89\xce\x32\x27\xbe\x23\x11\x55\x7e\xc8\x38\xd9\x1f\x5c\x92\x83\xd6\xea\x81\x93\x1d\xd3\xd3\x34\xeb\xec\xbc\xe4",
        // "sha1" / M(Rot) / S(120) / L(4)
        "\xeb\xe0\xd9\xa9\x78\xf1\x47\xda\x32\x61\x3c\x98\xea\xc4\xe6\x3b",
        // "kCFBundleIdentifierKey" / M(Xor1) / S(101) / L(22)
        "\x0e\x26\x23\x27\x10\x0b\x01\x09\x00\x2c\x01\x00\x0b\x11\x0c\x03\x0c\x00\x17\x2e\x00\x1c\x65",
        // "CFDateFormatterSetProperty" / M(Rot) / S(117) / L(26)
        "\xb8\xbb\xb9\xd6\xe9\xda\xbb\xe4\xe7\xe2\xd6\xe9\xe9\xda\xe7\xc8\xda\xe9\xc5\xe7\xe4\xe5\xda\xe7\xe9\xee\x75\x62\x0d\x88\xbd\xc3\x83\x5d\xdb",
        // "objc_msgSend" / M(Xor3) / S(249) / L(12)
        "\x66\x6b\x63\x6a\x56\x64\x7a\x6e\x5a\x6c\x67\x6d\x09\xee\xc4\xce",
        // "sha1" / M(Xor3) / S(167) / L(4)
        "\xc4\xdf\xd6\x86\xb7\x49\x45\xea\xee\xfc\xa0\xa6\x7f\x13\x8e\xeb",
        // "strlen" / M(Xor4) / S(199) / L(6)
        "\x03\x04\x02\x1c\x15\x1e\x70\x2d\x5e\x19\x3b\xae\x45\x16\x29\x7f",
        // "OBJ_txt2obj" / M(Xor4) / S(107) / L(11)
        "\xff\xf2\xfa\xef\xc4\xc8\xc4\x82\xdf\xd2\xda\xb0\x8e\x54\xbf\xa4",
        // "init" / M(Xor2) / S(184) / L(4)
        "\xc1\xc6\xc1\xdc\xa8\x5a\xd0\x03\x10\x33\xb7\x7d\xbf\x17\xed\x72",
        // "" / M(None) / S(0) / L(0)
        "\x7f\x18\x46\x28\xb4\x7c\x92\xe7\xcf\x1e\xfe\xb4\x78\xf4\xca\x77\x94\x32\x2c\xbf\x8d\x88\x80\xa8\x27\x94\x91\xdc\x27\x18\xbb\xd9",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(182) / L(24)
        "\xf5\xf0\xf7\xd4\xc5\xd9\xda\xc3\xc2\xd3\xe2\xdf\xdb\xd3\xf1\xd3\xc2\xf5\xc3\xc4\xc4\xd3\xd8\xc2\xb6\xc3\xa6\xf8\xde\x41\xff\x40\x90",
        // "CFDictionaryCreateMutable" / M(Xor3) / S(187) / L(25)
        "\x9e\x9b\x99\xb4\xbe\xa9\xb4\xb2\xb3\xbc\xaf\xa4\x9e\xaf\xb8\xbc\xa9\xb8\x90\xa8\xa9\xbc\xbf\xb1\xb8\xdd\xeb\xfa\x5c\xf4\x5f\x8c\x6c\xdc",
        // "CFDataGetBytePtr" / M(Rot) / S(95) / L(16)
        "\xa2\xa5\xa3\xc0\xd3\xc0\xa6\xc4\xd3\xa1\xd8\xd3\xc4\xaf\xd3\xd1\x5f",
        // "OpenSSL_add_all_digests" / M(Xor1) / S(113) / L(23)
        "\x3e\x01\x14\x1f\x22\x22\x3d\x2e\x10\x15\x15\x2e\x10\x1d\x1d\x2e\x15\x18\x16\x14\x02\x05\x02\x71\x10\x2b\x77\x00\x7a\xfb\xfa\x64",
        // "" / M(None) / S(0) / L(0)
        "\xd2\x87\x63\x5b\xdc\xee\xa8\x32\x2c\x2f\x14\x0b\xd9\x13\xe3\x62\x6a\x71\xab\xbd\x65\x3b\x98\xc5\xcc\x29\xfb\x87\x8d\xcb\xf3\xd3",
        // "" / M(None) / S(0) / L(0)
        "\x46\x46\x44\x11\xa7\xbf\x1c\x77\xe8\xe8\x2a\xb0\x79\x35\x1f\xcb\x95\x3c\x2c\x76\x5b\x1f\x68\x69\xc8\xa2\x51\xb6\xf5\x25\x86\x4b",
        // "" / M(None) / S(0) / L(0)
        "\xd4\xcd\x08\x16\xbb\x5f\xae\x92\xd3\x1f\xfe\x61\x7e\xba\x20\xda\xdb\x28\x56\x2c\x53\x68\x0c\xdb\xf7\xf7\x9e\x24\x8d\xf1\x2d\x77",
        // "CFArrayGetValueAtIndex" / M(Rot) / S(163) / L(22)
        "\xe6\xe9\xe4\x15\x15\x04\x1c\xea\x08\x17\xf9\x04\x0f\x18\x08\xe4\x17\xec\x11\x07\x08\x1b\xa3",
        // "CFArrayGetValueAtIndex" / M(Xor2) / S(54) / L(22)
        "\x62\x67\x60\x53\x53\x40\x58\x66\x44\x55\x77\x40\x4d\x54\x44\x60\x55\x68\x4f\x45\x44\x59\x21",
        // "CFDataCreate" / M(Xor4) / S(98) / L(12)
        "\x63\x66\x64\x41\x54\x41\x63\x52\x45\x41\x54\x45\x20\x71\xae\xca",
        // "objc_lookUpClass" / M(Xor2) / S(97) / L(16)
        "\x1f\x12\x1a\x13\x2f\x1c\x1f\x1f\x1b\x25\x00\x33\x1c\x11\x03\x03\x70",
        // "CC_SHA1_Update" / M(Rot) / S(155) / L(14)
        "\xde\xde\xfa\xee\xe3\xdc\xcc\xfa\xf0\x0b\xff\xfc\x0f\x00\x9b\xa6",
        // "CFStringCreateWithCString" / M(Xor4) / S(75) / L(25)
        "\xb5\xb0\xa5\x82\x84\x9f\x98\x91\xb5\x84\x93\x97\x82\x93\xa1\x9f\x82\x9e\xb5\xa5\x82\x84\x9f\x98\x91\xf6\xdb\xc2\x18\x1c\x8e\x21\x7b\xce",
        // "611E5B662C593A08FF58D14AE22452D198DF6C60" / M(Xor2) / S(107) / L(40)
        "\x6c\x6b\x6b\x1f\x6f\x18\x6c\x6c\x68\x19\x6f\x63\x69\x1b\x6a\x62\x1c\x1c\x6f\x62\x1e\x6b\x6e\x1b\x1f\x68\x68\x6e\x6f\x68\x1e\x6b\x63\x62\x1e\x1c\x6c\x19\x6c\x6a\x5a\x00\xe9\xa3\xb1\xcc\xae\x5b\x09",
        // "CFBundleGetMainBundle" / M(Xor4) / S(25) / L(21)
        "\x65\x60\x64\x53\x48\x42\x4a\x43\x61\x43\x52\x6b\x47\x4f\x48\x64\x53\x48\x42\x4a\x43\x26",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor3) / S(20) / L(59)
        "\x6e\x69\x62\x69\x1d\x62\x6d\x1a\x62\x6e\x6e\x62\x6a\x1b\x62\x6d\x61\x62\x6b\x19\x62\x68\x60\x62\x1e\x1e\x62\x6d\x60\x62\x1c\x69\x62\x6c\x19\x62\x1d\x6a\x62\x6a\x6c\x62\x6d\x6a\x62\x1c\x69\x62\x61\x60\x62\x1c\x1e\x62\x6e\x1b\x62\x6e\x68\x58\xad\x3d\x99\xdc\x58\x29\x23\x84",
        // "" / M(None) / S(0) / L(0)
        "\x27\x72\xdc\x26\x09\x0f\x1a\xec\xbd\x95\xf9\x48\x49\x37\x26\xde\x6f\xee\x58\x5e\x14\x6c\x74\xca\xe0\x84\xab\xa3\x30\x71\xd6\x6d",
        // "getUUIDBytes:" / M(Xor1) / S(129) / L(13)
        "\xe6\xe4\xf5\xd4\xd4\xc8\xc5\xc3\xf8\xf5\xe4\xf2\xbb\x81\x90\x6e",
        // "CFTimeZoneCreateWithTimeIntervalFromGMT" / M(Xor1) / S(240) / L(39)
        "\xb3\xb6\xa4\x99\x9d\x95\xaa\x9f\x9e\x95\xb3\x82\x95\x91\x84\x95\xa7\x99\x84\x98\xa4\x99\x9d\x95\xb9\x9e\x84\x95\x82\x86\x91\x9c\xb6\x82\x9f\x9d\xb7\xbd\xa4\xf0\x54\x5e\xda\x97\x24\x86\xd3\xc6",
        // "longjmp" / M(Rot) / S(79) / L(7)
        "\xbb\xbe\xbd\xb6\xb9\xbc\xbf\x4f\x62\xb5\x97\x18\xaf\x0c\x76\x0a",
        // "CFReadStreamClose" / M(Xor3) / S(48) / L(17)
        "\x01\x04\x10\x27\x23\x26\x11\x36\x30\x27\x23\x2f\x01\x2e\x2d\x31\x27\x42",
        // "SHA1_Final" / M(Xor3) / S(52) / L(10)
        "\x17\x0c\x05\x75\x1b\x02\x2d\x2a\x25\x28\x44\xdc\x6e\x46\x4f\x8a",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(194) / L(36)
        "\x49\x4c\x48\x7f\x64\x6e\x66\x6f\x4d\x6f\x7e\x5c\x6b\x66\x7f\x6f\x4c\x65\x78\x43\x64\x6c\x65\x4e\x63\x69\x7e\x63\x65\x64\x6b\x78\x73\x41\x6f\x73\x0a",
        // "EVP_DigestInit" / M(Xor2) / S(142) / L(14)
        "\xdb\xc8\xce\xc1\xda\xf7\xf9\xfb\xed\xea\xd7\xf0\xf7\xea\x9e\xe3",
        // "CFRelease" / M(Xor3) / S(245) / L(9)
        "\x46\x43\x57\x60\x69\x60\x64\x76\x60\x05\x6d\x3f\x79\x01\x01\xde",
        // "CFDateFormatterCreate" / M(Xor4) / S(91) / L(21)
        "\x91\x94\x96\xb3\xa6\xb7\x94\xbd\xa0\xbf\xb3\xa6\xa6\xb7\xa0\x91\xa0\xb7\xb3\xa6\xb7\xd2",
        // "CFArrayAppendValue" / M(Xor1) / S(42) / L(18)
        "\x69\x6c\x6b\x58\x58\x4b\x53\x6b\x5a\x5a\x4f\x44\x4e\x7c\x4b\x46\x5f\x4f\x2a",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Xor4) / S(220) / L(36)
        "\x8f\x8a\x8e\xb9\xa2\xa8\xa0\xa9\x8b\xa9\xb8\x9a\xad\xa0\xb9\xa9\x8a\xa3\xbe\x85\xa2\xaa\xa3\x88\xa5\xaf\xb8\xa5\xa3\xa2\xad\xbe\xb5\x87\xa9\xb5\xcc",
        // "CFDateCreate" / M(Xor4) / S(103) / L(12)
        "\x33\x36\x34\x11\x04\x15\x33\x02\x15\x11\x04\x15\x70\x00\x94\xf1",
        // "X509_NAME_get_text_by_NID" / M(Xor4) / S(129) / L(25)
        "\x7a\x17\x12\x1b\x7d\x6c\x63\x6f\x67\x7d\x45\x47\x56\x7d\x56\x47\x5a\x56\x7d\x40\x5b\x7d\x6c\x6b\x66\x22\x7f\x59\xba\x8a\xa7\x7d\xad\xc4",
        // "d2i_X509_bio" / M(Xor3) / S(22) / L(12)
        "\x42\x14\x4f\x79\x7e\x13\x16\x1f\x79\x44\x4f\x49\x26\xba\x34\x5d",
        // "CFBundleVersion" / M(Xor4) / S(211) / L(15)
        "\x73\x76\x72\x45\x5e\x54\x5c\x55\x66\x55\x42\x43\x59\x5f\x5e\x30",
        // "X509_get_ext_by_OBJ" / M(Xor2) / S(207) / L(19)
        "\x83\xee\xeb\xe2\x84\xbc\xbe\xaf\x84\xbe\xa3\xaf\x84\xb9\xa2\x84\x94\x99\x91\xdb",
        // "objc_lookUpClass" / M(Xor1) / S(35) / L(16)
        "\x4c\x41\x49\x40\x7c\x4f\x4c\x4c\x48\x76\x53\x60\x4f\x42\x50\x50\x23",
        // "" / M(None) / S(0) / L(0)
        "\xa7\x62\x50\x21\x28\xc0\x1e\x2b\xa2\x6b\xba\xf0\x44\xa0\x4f\xb3\x38\xc6\x3f\x48\xee\xd8\x4f\x9c\x69\xaf\xfa\x21\x6d\x9c\xb4\x9a",
        // "CFArrayCreateMutable" / M(Xor4) / S(77) / L(20)
        "\x12\x17\x10\x23\x23\x30\x28\x12\x23\x34\x30\x25\x34\x1c\x24\x25\x30\x33\x3d\x34\x51",
        // "kCFTypeArrayCallBacks" / M(Xor4) / S(100) / L(21)
        "\xf3\xdb\xde\xcc\xe1\xe8\xfd\xd9\xea\xea\xf9\xe1\xdb\xf9\xf4\xf4\xda\xf9\xfb\xf3\xeb\x98",
        // "" / M(None) / S(0) / L(0)
        "\x0e\xdb\xab\xe2\x1c\x46\x1c\xa6\x87\x56\x92\x1d\x9d\xf6\x9b\xe7\x64\x5a\xfe\xe0\x3d\x14\xd9\x5d\xe0\x04\x71\x88\x49\xfb\x55\xa6",
        // "" / M(None) / S(0) / L(0)
        "\x67\x0b\x11\x82\x9d\x3f\x13\x1d\xf9\xe5\x0f\x68\xae\x13\x32\x11\xb7\x32\xac\x7a\x57\xab\x01\x33\xcb\x0d\x97\xa0\xc8\x12\xb1\x5f",
        // "CFBundleShortVersionString" / M(Xor3) / S(212) / L(26)
        "\xb4\xb1\xb5\x82\x99\x93\x9b\x92\xa4\x9f\x98\x85\x83\xa1\x92\x85\x84\x9e\x98\x99\xa4\x83\x85\x9e\x99\x90\xf7\x57\xcb\x4e\xf4\xe0\x5a\x4e\xd7",
        // "X509_get_ext_by_OBJ" / M(Xor1) / S(78) / L(19)
        "\x16\x7b\x7e\x77\x11\x29\x2b\x3a\x11\x2b\x36\x3a\x11\x2c\x37\x11\x01\x0c\x04\x4e",
        // "CFAbsoluteTimeGetCurrent" / M(Xor1) / S(245) / L(24)
        "\xb6\xb3\xb4\x97\x86\x9a\x99\x80\x81\x90\xa1\x9c\x98\x90\xb2\x90\x81\xb6\x80\x87\x87\x90\x9b\x81\xf5\x20\x60\xd8\xc7\xb8\x92\xd5\xd5",
        // "RTLD_MAIN_ONLY" / M(Xor4) / S(132) / L(14)
        "\x12\x14\x0c\x04\x1f\x0d\x01\x09\x0e\x1f\x0f\x0e\x0c\x19\x40\xd3",
        // "CFReadStreamOpen" / M(Xor3) / S(62) / L(16)
        "\x0c\x09\x1d\x2a\x2e\x2b\x1c\x3b\x3d\x2a\x2e\x22\x00\x3f\x2a\x21\x4f",
        // "kCFTypeArrayCallBacks" / M(Xor1) / S(72) / L(21)
        "\x23\x0b\x0e\x1c\x31\x38\x2d\x09\x3a\x3a\x29\x31\x0b\x29\x24\x24\x0a\x29\x2b\x23\x3b\x48",
        // "" / M(None) / S(0) / L(0)
        "\xcf\xd1\x91\xb6\x4e\xa1\x49\x6c\x35\x37\xba\x22\xd2\x00\x07\xfe\x42\x7a\xae\x5c\xf8\x21\x8a\xec\x4e\x1f\x6c\xf0\x33\x8a\xdc\xf5",
        // "dlopen" / M(Xor2) / S(131) / L(6)
        "\xf7\xff\xfc\xe3\xf6\xfd\x93\x3b\x9e\x2c\x28\xa8\x3b\x3b\x87\x58",
        // "EVP_DigestInit" / M(Xor3) / S(34) / L(14)
        "\x77\x64\x62\x6d\x76\x5b\x55\x57\x41\x46\x7b\x5c\x5b\x46\x32\xda",
        // "CFReadStreamRead" / M(Xor2) / S(139) / L(16)
        "\xd9\xdc\xc8\xff\xfb\xfe\xc9\xee\xe8\xff\xfb\xf7\xc8\xff\xfb\xfe\x9a",
        // "" / M(None) / S(0) / L(0)
        "\xbc\xfd\xfc\x04\xc8\x2a\xc9\x2c\x11\x7d\x9e\x1a\x65\xc3\xb9\x44\xd7\x1c\xbb\xc7\x35\x57\x18\xd0\x3c\xc2\x90\x01\x11\x91\x4f\x2f",
        // "CFDictionarySetValue" / M(Xor4) / S(70) / L(20)
        "\xfd\xf8\xfa\xd7\xdd\xca\xd7\xd1\xd0\xdf\xcc\xc7\xed\xdb\xca\xe8\xdf\xd2\xcb\xdb\xbe",
        // "setDelegate:" / M(Xor3) / S(240) / L(12)
        "\x73\x65\x74\x44\x65\x6c\x65\x67\x61\x74\x65\x3a\x00\x1f\x1c\xd9",
        // "CFReadStreamCreateWithFile" / M(Xor4) / S(71) / L(26)
        "\xf6\xf3\xe7\xd0\xd4\xd1\xe6\xc1\xc7\xd0\xd4\xd8\xf6\xc7\xd0\xd4\xc1\xd0\xe2\xdc\xc1\xdd\xf3\xdc\xd9\xd0\xb5\x35\x27\xb9\x43\x76\x9c\x2a\xa4",
        // "CFBundleIdentifier" / M(Xor1) / S(8) / L(18)
        "\x4b\x4e\x4a\x7d\x66\x6c\x64\x6d\x41\x6c\x6d\x66\x7c\x61\x6e\x61\x6d\x7a\x08",
        // "" / M(None) / S(0) / L(0)
        "\x4f\xb0\x82\x7c\xa3\x4c\x10\x3a\xf7\x4c\xf8\x26\x6c\x95\xec\x0a\x21\x6e\xae\x69\x75\xdc\x46\x0a\x81\xcd\x74\x4e\x6e\x96\xd0\x6c",
        // "SHA1" / M(Rot) / S(248) / L(4)
        "\x4b\x40\x39\x29\xf8\xe8\x0b\xac\xd9\x2e\x09\xfd\x96\xe3\xe3\x8e",
        // "%02x:" / M(Xor2) / S(101) / L(5)
        "\x50\x45\x47\x0d\x4f\x75\x06\xfa\xab\x8e\xc4\xfc\x6c\x27\x0e\x1d",
        // "%02X" / M(Xor1) / S(154) / L(4)
        "\xbf\xaa\xa8\xc2\x9a\x2d\x36\xb4\xbf\x73\xa7\xf1\xdb\x68\x3c\xd2",
        // "Apple Root CA" / M(Rot) / S(203) / L(13)
        "\x0c\x3b\x3b\x37\x30\xeb\x1d\x3a\x3a\x3f\xeb\x0e\x0c\xcb\xdf\x2a",
        // "mainBundle" / M(Xor2) / S(123) / L(10)
        "\x06\x0a\x02\x05\x29\x1e\x05\x0f\x07\x0e\x6b\x94\xdd\xc4\xe5\xfc",
        // "" / M(None) / S(0) / L(0)
        "\x7a\x22\xec\x52\x30\xbe\x9d\xff\xec\x70\xa2\x35\x8a\x30\x7b\x0d\xbd\x5b\x5b\x46\x7e\xa1\x71\x72\x50\x45\xbb\x9a\x7d\xba\x70\x65",
        // "CFDateFormatterSetFormat" / M(Xor1) / S(25) / L(24)
        "\x5a\x5f\x5d\x78\x6d\x7c\x5f\x76\x6b\x74\x78\x6d\x6d\x7c\x6b\x4a\x7c\x6d\x5f\x76\x6b\x74\x78\x6d\x19\xc2\xb9\xc4\x31\x22\xc0\xa7\xf3",
        // "CFReadStreamOpen" / M(Xor2) / S(37) / L(16)
        "\x77\x72\x66\x51\x55\x50\x67\x40\x46\x51\x55\x59\x7b\x44\x51\x5a\x34",
        // "1" / M(Xor4) / S(168) / L(1)
        "\xb1\x80\xf0\xf7\x2c\x94\xb7\x7f\x40\x72\xf7\xa4\x62\xd4\x05\xe2",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Rot) / S(205) / L(32)
        "\x46\x46\x46\x46\xf4\xfa\xf4\x1a\x1a\xf4\xfa\xf4\x31\x31\xf4\x21\xf4\x15\x15\xf4\x07\xf4\x3a\x3a\xf4\x07\xf4\x40\x40\xf4\x27\xf4\xcd",
        // "strncmp" / M(Xor1) / S(144) / L(7)
        "\xe3\xe4\xe2\xfe\xf3\xfd\xe0\x90\x3c\x37\xd2\x72\x09\xd7\xf0\xaa",
        // "CFNumberCreate" / M(Xor2) / S(148) / L(14)
        "\xc7\xc2\xca\xf1\xe9\xe6\xe1\xf6\xc7\xf6\xe1\xe5\xf0\xe1\x84\xc9",
        // "SKReceiptRefreshRequest" / M(Xor4) / S(131) / L(23)
        "\x33\x2b\x32\x05\x03\x05\x09\x10\x14\x32\x05\x06\x12\x05\x13\x08\x32\x05\x11\x15\x05\x13\x14\x60\x9b\x69\x6d\x73\x90\x2d\x62\x96",
        // "X509_free" / M(Xor2) / S(146) / L(9)
        "\xda\xb7\xb2\xbb\xdd\xe4\xf0\xe7\xe7\x82\x7f\x49\x23\xe1\x6b\xe8",
        // "dlopen" / M(Xor1) / S(103) / L(6)
        "\x03\x0b\x08\x17\x02\x09\x67\x80\xf0\x6a\x21\x33\x3f\xbb\x35\x99",
        // "X509_NAME_get_text_by_NID" / M(Rot) / S(23) / L(25)
        "\x6f\x4c\x47\x50\x76\x65\x58\x64\x5c\x76\x7e\x7c\x8b\x76\x8b\x7c\x8f\x8b\x76\x79\x90\x76\x65\x60\x5b\x17\x55\x52\x37\x21\x67\x9d\xda\x58",
        // "ASN1_INTEGER_get" / M(Xor3) / S(98) / L(16)
        "\x32\x20\x3d\x42\x2c\x3a\x3d\x27\x36\x34\x36\x21\x2c\x14\x16\x07\x73",
        // "setjmp" / M(Xor1) / S(213) / L(6)
        "\xa6\xb0\xa1\xbf\xb8\xa5\xd5\xa7\x39\xc4\x2b\x4a\x7f\x78\xe7\xb4",
        // "alloc" / M(Xor3) / S(56) / L(5)
        "\x29\x24\x24\x27\x2b\x48\x59\x36\xd1\xf1\x52\xd0\x66\xd7\xdf\x0d",
        // "yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'" / M(Xor2) / S(46) / L(32)
        "\x76\x76\x76\x76\x28\x22\x28\x42\x42\x28\x22\x28\x6b\x6b\x28\x5b\x28\x47\x47\x28\x35\x28\x62\x62\x28\x35\x28\x7c\x7c\x28\x55\x28\x0f",
        // "dlsym" / M(Xor1) / S(154) / L(5)
        "\xfe\xf6\xe9\xe3\xf7\x9a\x9e\xc5\x2f\xe5\x75\xa5\x1b\x49\xe8\x34",
        // "ASN1_INTEGER_free" / M(Xor4) / S(13) / L(17)
        "\xab\xb9\xa4\xdb\xb5\xa3\xa4\xbe\xaf\xad\xaf\xb8\xb5\x8c\x98\x8f\x8f\xea",
        // "" / M(None) / S(0) / L(0)
        "\x64\x10\xae\xc3\x02\x60\xcd\x97\x78\x40\x73\x32\xbc\x48\x96\xc6\x14\x98\x8e\xda\x3b\x6a\x31\x9b\x9e\xfd\x75\x49\xa3\x7b\xdf\xa6",
        // "X509_free" / M(Xor4) / S(232) / L(9)
        "\xd8\xb5\xb0\xb9\xdf\xe6\xf2\xe5\xe5\x80\xab\x3e\x2a\xd6\xaf\xf2",
        // "CC_SHA1_Update" / M(Xor1) / S(225) / L(14)
        "\xa2\xa2\xbe\xb2\xa9\xa0\xd0\xbe\xb4\x91\x85\x80\x95\x84\xe1\x91",
        // "" / M(None) / S(0) / L(0)
        "\x85\x1f\x35\x3f\x1c\x38\x00\x99\x3f\x78\xf5\x31\x47\xf4\xa7\x60\xe4\xf4\x3f\x9f\x9f\x16\xf2\x22\x23\xeb\xd6\x49\x77\x0f\x61\x17",
        // "/usr/lib/libSystem.dylib" / M(Xor2) / S(200) / L(24)
        "\xc6\x9c\x9a\x9b\xc6\x85\x80\x8b\xc6\x85\x80\x8b\xba\x90\x9a\x9d\x8c\x84\xc7\x8d\x90\x85\x80\x8b\xe9\x6b\xc9\xd5\x5d\x18\xbb\xca\x63",
        // "" / M(None) / S(0) / L(0)
        "\xe6\xcb\xb6\x5e\x2f\xec\x3d\x81\xed\xb6\x53\x2b\x2b\x9b\x67\x29\xf3\x33\xaa\xb0\x80\x26\x4b\x4d\x66\xf7\x1f\x5d\x41\x84\xa3\x43",
        // "" / M(None) / S(0) / L(0)
        "\xf7\x41\x51\x29\x3a\x42\x60\x34\xea\x3a\x97\x10\x19\xd3\xae\x70\xba\x5f\x07\x7e\xc3\xd0\x95\x32\x07\xb2\x9b\x6d\x85\x5d\x23\x8b",
        // "X509_STORE_free" / M(Xor3) / S(235) / L(15)
        "\xa3\xce\xcb\xc2\xa4\xa8\xaf\xb4\xa9\xbe\xa4\x9d\x89\x9e\x9e\xfb",
        // "" / M(None) / S(0) / L(0)
        "\x25\x73\xa8\xad\xed\xc2\x45\x68\x22\xdb\xc8\xfa\x49\xa2\x3c\x26\xe8\x8a\xe4\x89\x1e\x6d\x01\x08\x5c\x91\x42\x2e\x25\x53\x94\x1b",
        // "X509_STORE_free" / M(Xor2) / S(111) / L(15)
        "\x27\x4a\x4f\x46\x20\x2c\x2b\x30\x2d\x3a\x20\x19\x0d\x1a\x1a\x7f",
        // "sk_num" / M(Xor4) / S(25) / L(6)
        "\xe3\xfb\xcf\xfe\xe5\xfd\x90\x08\xbb\xff\x6d\x56\x28\xb6\x33\x81",
        // "" / M(None) / S(0) / L(0)
        "\x8f\x60\x30\x8b\x82\x9e\x05\xba\xb3\x69\x74\x49\x16\xcd\xe0\x20\x95\x69\x32\x94\x8f\xcc\x73\xeb\xc0\xba\x57\x30\xb2\xed\x85\x2d",
        // "CFDictionaryAddValue" / M(Rot) / S(97) / L(20)
        "\xa4\xa7\xa5\xca\xc4\xd5\xca\xd0\xcf\xc2\xd3\xda\xa2\xc5\xc5\xb7\xc2\xcd\xd6\xc6\x61",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Rot) / S(76) / L(40)
        "\x82\x7d\x7d\xb1\x81\xae\x82\x82\x7e\xaf\x81\x85\x7f\xad\x7c\x84\xb2\xb2\x81\x84\xb0\x7d\x80\xad\xb1\x7e\x7e\x80\x81\x7e\xb0\x7d\x85\x84\xb0\xb2\x82\xaf\x82\x7c\x4c\x3d\xc2\xf2\x4d\xac\x9a\x77\xcf",
        // "init" / M(Xor2) / S(238) / L(4)
        "\x97\x90\x97\x8a\xfe\x5a\xfe\x6e\x80\x8b\xd6\x10\x0a\x5c\x86\x04",
        // "" / M(None) / S(0) / L(0)
        "\x5a\x59\x40\xf3\xa9\x80\x8b\x66\x16\xb3\xb4\x1b\xeb\xc5\x3f\xa5\xac\xd1\x9a\xbe\x10\xc7\xde\x82\xf3\x44\x8b\x19\xb1\x5b\x75\xe3",
        // "CFReadStreamCreateWithFile" / M(Rot) / S(153) / L(26)
        "\xdc\xdf\xeb\xfe\xfa\xfd\xec\x0d\x0b\xfe\xfa\x06\xdc\x0b\xfe\xfa\x0d\xfe\xf0\x02\x0d\x01\xdf\x02\x05\xfe\x99\xec\x9e\xeb\xac\x3e\x90\xde\xd7",
        // "appStoreReceiptURL" / M(Xor2) / S(116) / L(18)
        "\x06\x17\x17\x34\x13\x08\x15\x02\x35\x02\x04\x02\x0e\x17\x13\x32\x35\x2b\x67",
        // "CFNumberCreate" / M(Xor4) / S(71) / L(14)
        "\x33\x36\x3e\x05\x1d\x12\x15\x02\x33\x02\x15\x11\x04\x15\x70\x4d",
        // "X509_STORE_new" / M(Xor1) / S(190) / L(14)
        "\xe6\x8b\x8e\x87\xe1\xed\xea\xf1\xec\xfb\xe1\xd0\xdb\xc9\xbe\x84",
        // "" / M(None) / S(0) / L(0)
        "\xde\x1d\xa4\x14\xbf\xbc\x66\x57\x1b\xd6\x77\x53\x63\xfd\x44\x7a\x4c\x2a\xde\x8f\xb7\xf0\xba\xea\xe8\xf5\x19\xec\x12\xb3\xdb\x64",
        // "CFDictionaryCreateMutable" / M(Xor2) / S(35) / L(25)
        "\x42\x47\x45\x68\x62\x75\x68\x6e\x6f\x60\x73\x78\x42\x73\x64\x60\x75\x64\x4c\x74\x75\x60\x63\x6d\x64\x01\x42\xc2\xa3\x44\x53\x97\xdb\x21",
        // "start" / M(Rot) / S(64) / L(5)
        "\xb3\xb4\xa1\xb2\xb4\x40\x46\x0b\xa3\x8f\x05\x64\x35\x3f\x3e\x0c",
        // "61:1e:5b:66:2c:59:3a:08:ff:58:d1:4a:e2:24:52:d1:98:df:6c:60" / M(Xor1) / S(247) / L(59)
        "\xc1\xc6\xcd\xc6\x92\xcd\xc2\x95\xcd\xc1\xc1\xcd\xc5\x94\xcd\xc2\xce\xcd\xc4\x96\xcd\xc7\xcf\xcd\x91\x91\xcd\xc2\xcf\xcd\x93\xc6\xcd\xc3\x96\xcd\x92\xc5\xcd\xc5\xc3\xcd\xc2\xc5\xcd\x93\xc6\xcd\xce\xcf\xcd\x93\x91\xcd\xc1\x94\xcd\xc1\xc7\xf7\xea\xe4\x57\xa4\xf7\xb5\x71\x12",
        // "EVP_DigestUpdate" / M(Xor1) / S(155) / L(16)
        "\xde\xcd\xcb\xc4\xdf\xf2\xfc\xfe\xe8\xef\xce\xeb\xff\xfa\xef\xfe\x9b",
        // "" / M(None) / S(0) / L(0)
        "\x70\x98\xe4\x2a\xf7\x96\x28\x37\x93\x1f\xa8\x8c\xa7\x23\x96\xbf\xa2\x5f\x15\xd9\x0a\x2c\x0f\x38\x0d\xe0\x27\x42\xdd\x08\xf7\xfb",
        // "d2i_X509_bio" / M(Xor2) / S(236) / L(12)
        "\x98\xce\x95\xa3\xa4\xc9\xcc\xc5\xa3\x9e\x95\x93\xfc\x2b\x7f\xfd",
        // "/usr/lib/libSystem.dylib" / M(Xor1) / S(36) / L(24)
        "\x0b\x51\x57\x56\x0b\x48\x4d\x46\x0b\x48\x4d\x46\x77\x5d\x57\x50\x41\x49\x0a\x40\x5d\x48\x4d\x46\x24\xc7\x3a\xaa\xba\x76\x85\x36\x35",
        // "611e5b662c593a08ff58d14ae22452d198df6c60" / M(Xor2) / S(204) / L(40)
        "\xcb\xcc\xcc\x98\xc8\x9f\xcb\xcb\xcf\x9e\xc8\xc4\xce\x9c\xcd\xc5\x9b\x9b\xc8\xc5\x99\xcc\xc9\x9c\x98\xcf\xcf\xc9\xc8\xcf\x99\xcc\xc4\xc5\x99\x9b\xcb\x9e\xcb\xcd\xfd\x19\xb2\xd7\x35\x36\x58\xe3\x04",
        // "" / M(None) / S(0) / L(0)
        "\xd6\x4e\x62\x01\x7b\x27\x2a\xa9\x4d\x1e\x83\xe9\x97\x32\x4e\x00\x75\x26\x70\x17\x49\x5c\xc3\x05\x87\xf9\x7e\xae\x05\xe6\x60\x6b",
        // "CFDataGetLength" / M(Rot) / S(1) / L(15)
        "\x44\x47\x45\x62\x75\x62\x48\x66\x75\x4d\x66\x6f\x68\x75\x69\x01",
        // "kCFTypeDictionaryKeyCallBacks" / M(Rot) / S(246) / L(29)
        "\x61\x39\x3c\x4a\x6f\x66\x5b\x3a\x5f\x59\x6a\x5f\x65\x64\x57\x68\x6f\x41\x5b\x6f\x39\x57\x62\x62\x38\x57\x59\x61\x69\xf6\xb7\x3a\xdb\xc0\xcc\x82\xdf\xc7",
        // "" / M(None) / S(0) / L(0)
        "\xe1\xe7\x0c\x75\x3f\x51\xd0\x99\x7a\x0a\x5b\x18\x9c\x7d\x8e\xe7\xfc\x80\x18\xd2\x5a\xf8\x2c\xff\xe5\x61\xe1\x14\x1c\x3d\x64\x06",
        // "sk_num" / M(Xor1) / S(191) / L(6)
        "\xcc\xd4\xe0\xd1\xca\xd2\xbf\xb5\x95\xfc\xa0\x64\x53\xce\x0a\x33",
        // "X509_STORE_add_cert" / M(Xor4) / S(100) / L(19)
        "\x88\xe5\xe0\xe9\x8f\x83\x84\x9f\x82\x95\x8f\xb1\xb4\xb4\x8f\xb3\xb5\xa2\xa4\xd0",
        // "CFDateFormatterCreate" / M(Xor3) / S(6) / L(21)
        "\x5f\x5a\x58\x7d\x68\x79\x5a\x73\x6e\x71\x7d\x68\x68\x79\x6e\x5f\x6e\x79\x7d\x68\x79\x1c",
        // "/usr/lib/libSystem.dylib" / M(Xor3) / S(82) / L(24)
        "\x5c\x06\x00\x01\x5c\x1f\x1a\x11\x5c\x1f\x1a\x11\x20\x0a\x00\x07\x16\x1e\x5d\x17\x0a\x1f\x1a\x11\x73\x65\xee\x04\x37\x57\x57\x82\xec",
        // "1.2.840.113635.100.6.11.1" / M(Xor1) / S(174) / L(25)
        "\x9f\x80\x9c\x80\x96\x9a\x9e\x80\x9f\x9f\x9d\x98\x9d\x9b\x80\x9f\x9e\x9e\x80\x98\x80\x9f\x9f\x80\x9f\xae\x41\xb1\x34\x2e\x77\x0f\xd9\x47",
        // "" / M(None) / S(0) / L(0)
        "\x8c\xa5\xab\x74\x6f\xee\xfa\x18\xca\x89\x8b\x88\x00\x3f\x4b\x8a\x59\x70\xcb\xef\x77\xf2\x19\xb3\x94\xec\xb7\x88\xdb\x4f\xe6\x41",
        // "EVP_DigestUpdate" / M(Rot) / S(193) / L(16)
        "\x06\x17\x11\x20\x05\x2a\x28\x26\x34\x35\x16\x31\x25\x22\x35\x26\xc1",
        // "objc_msgSend" / M(Xor3) / S(184) / L(12)
        "\xa7\xaa\xa2\xab\x97\xa5\xbb\xaf\x9b\xad\xa6\xac\xc8\x73\xff\x27",
        // "" / M(None) / S(0) / L(0)
        "\xed\xe5\x84\x4a\xc0\x8f\x4f\x0d\x3a\x65\x3e\x4e\x50\x81\xb5\x5d\xee\x58\xd1\x07\x01\xdc\xc3\x92\x07\x54\x31\xcb\xf2\x10\x31\xac",
        // "" / M(None) / S(0) / L(0)
        "\x23\x2f\xe4\x33\x45\x4e\xde\xea\xf3\x8d\x9c\x08\xac\x87\x14\x99\xa1\x89\x32\x49\xe4\x67\xc7\x08\x08\x53\x16\x54\x2a\xf5\xf3\x1f",
        // "" / M(None) / S(0) / L(0)
        "\x08\xe2\x6d\xa1\x45\x4c\xee\xe2\x4f\x10\xd9\x35\x29\x53\x00\x1c\x5b\x68\x56\xe9\x89\xfb\xa2\xc2\x7b\xcd\x81\x1b\x2f\xd1\xd5\xac",
        // "ASN1_get_object" / M(Xor3) / S(169) / L(15)
        "\xf8\xea\xf7\x88\xe6\xde\xdc\xcd\xe6\xd6\xdb\xd3\xdc\xda\xcd\xb9",
        // "start" / M(Xor2) / S(19) / L(5)
        "\x70\x77\x62\x71\x77\x03\x58\xd0\x0a\xf9\x76\x23\x56\x3b\xda\x0d",
        // "EVP_MD_CTX_init" / M(Xor1) / S(202) / L(15)
        "\x8f\x9c\x9a\x95\x87\x8e\x95\x89\x9e\x92\x95\xa3\xa4\xa3\xbe\xca",
        // "CC_SHA1_Init" / M(Xor4) / S(189) / L(12)
        "\x93\x93\x8f\x83\x98\x91\xe1\x8f\x99\xbe\xb9\xa4\xd0\x5e\x30\x89",
        // "SHA1_Init" / M(Xor1) / S(136) / L(9)
        "\xdb\xc0\xc9\xb9\xd7\xc1\xe6\xe1\xfc\x88\x27\x82\x99\xf0\x8a\xf1",
        // "CFStringCreateWithBytes" / M(Xor3) / S(126) / L(23)
        "\xdd\xd8\xcd\xea\xec\xf7\xf0\xf9\xdd\xec\xfb\xff\xea\xfb\xc9\xf7\xea\xf6\xdc\xe7\xea\xfb\xed\x9e\x15\x7f\xc2\xea\xd5\x2c\xcd\x9c",
        // "" / M(None) / S(0) / L(0)
        "\x94\xcb\xa8\xc2\x7e\x54\xa5\x68\x06\x6b\x89\x2d\x67\xec\xd6\x92\x51\x97\xa7\xa9\x71\x7f\x3e\x68\xfb\xdb\x4d\x31\x00\x87\xb4\xb5",
        // "" / M(None) / S(0) / L(0)
        "\x95\x04\x97\x41\x36\xba\xbb\x5e\xfe\x2b\x4b\x77\x7b\x58\xf9\xce\x9a\xcf\x59\x21\x4b\xd3\x39\x12\x6f\x01\x71\x80\xfb\xb0\x35\xf9",
        // "ASN1_OBJECT_free" / M(Xor1) / S(151) / L(16)
        "\xd6\xc4\xd9\xa6\xc8\xd8\xd5\xdd\xd2\xd4\xc3\xc8\xf1\xe5\xf2\xf2\x97",
        // "UIDevice" / M(Xor3) / S(144) / L(8)
        "\xf5\xe9\xe4\xc5\xd6\xc9\xc3\xc5\xa0\x6c\x96\x9c\x81\xb6\xae\x02",
        // "CFEqual" / M(Xor1) / S(109) / L(7)
        "\x2e\x2b\x28\x1c\x18\x0c\x01\x6d\x76\x1e\xfb\x9e\x28\x2a\x90\x86",
        // "CFArrayCreateMutable" / M(Xor1) / S(233) / L(20)
        "\xaa\xaf\xa8\x9b\x9b\x88\x90\xaa\x9b\x8c\x88\x9d\x8c\xa4\x9c\x9d\x88\x8b\x85\x8c\xe9",
        // "CFBundleShortVersionString" / M(Xor4) / S(244) / L(26)
        "\x1f\x1a\x1e\x29\x32\x38\x30\x39\x0f\x34\x33\x2e\x28\x0a\x39\x2e\x2f\x35\x33\x32\x0f\x28\x2e\x35\x32\x3b\x5c\x4f\xf6\x77\x9a\x33\xf0\x59\x8a",
        // "EVP_DigestFinal" / M(Xor2) / S(88) / L(15)
        "\x0d\x1e\x18\x17\x0c\x21\x2f\x2d\x3b\x3c\x0e\x21\x26\x29\x24\x48",
        // "ASN1_OBJECT_free" / M(Xor4) / S(26) / L(16)
        "\xfb\xe9\xf4\x8b\xe5\xf5\xf8\xf0\xff\xf9\xee\xe5\xdc\xc8\xdf\xdf\xba",
        // "start" / M(Xor3) / S(139) / L(5)
        "\xe8\xef\xfa\xe9\xef\x9b\xd7\xd2\x7e\xaa\x4f\x24\x2e\x99\xf8\x57",
        // "dlsym" / M(Rot) / S(9) / L(5)
        "\x6d\x75\x7c\x82\x76\x09\x64\x7e\xec\xd4\x9b\xde\x69\x2c\x59\x04",
        // "CFArrayAppendValue" / M(Xor1) / S(202) / L(18)
        "\x89\x8c\x8b\xb8\xb8\xab\xb3\x8b\xba\xba\xaf\xa4\xae\x9c\xab\xa6\xbf\xaf\xca",
        // "d2i_X509_bio" / M(Xor1) / S(103) / L(12)
        "\x03\x55\x0e\x38\x3f\x52\x57\x5e\x38\x05\x0e\x08\x67\xb0\x52\x5a",
        // "CFDateFormatterCreateDateFromString" / M(Xor3) / S(238) / L(35)
        "\x51\x54\x56\x73\x66\x77\x54\x7d\x60\x7f\x73\x66\x66\x77\x60\x51\x60\x77\x73\x66\x77\x56\x73\x66\x77\x54\x60\x7d\x7f\x41\x66\x60\x7b\x7c\x75\x12",
        // "SHA1_Update" / M(Xor2) / S(68) / L(11)
        "\x07\x1c\x15\x65\x0b\x01\x24\x30\x35\x20\x31\x54\x9b\x10\xba\x64",
        // "" / M(None) / S(0) / L(0)
        "\xd3\x1f\xf4\x4a\xf1\x4a\x99\x36\x7c\xa1\x37\xdc\x8e\xdb\xee\x2f\x04\xf4\xaf\x9f\x43\xf8\x57\xa9\xb0\x41\x10\xc9\xaa\xa2\x66\x19",
        // "CFDataAppendBytes" / M(Xor3) / S(29) / L(17)
        "\x6c\x69\x6b\x4e\x5b\x4e\x6e\x5f\x5f\x4a\x41\x4b\x6d\x56\x5b\x4a\x5c\x2f",
        // "exit" / M(Xor2) / S(73) / L(4)
        "\x3c\x21\x30\x2d\x59\x2a\x29\x59\xb0\x5e\x1d\xd3\x4e\x19\x78\xa7",
        // "PKCS7_free" / M(Xor4) / S(84) / L(10)
        "\x10\x0b\x03\x13\x77\x1f\x26\x32\x25\x25\x40\x01\x74\xa2\x91\x96",
        // "" / M(None) / S(0) / L(0)
        "\x59\x21\x44\x67\x8d\x7a\x9e\xbd\x64\xf7\xa8\x08\xf2\xbc\xd9\x87\x25\x08\xac\x1c\xf0\xba\x95\x0c\x81\x6f\xd9\x9f\x2d\x63\x9d\x2f",
        // "CFDateCompare" / M(Xor2) / S(46) / L(13)
        "\x7d\x78\x7a\x5f\x4a\x5b\x7d\x51\x53\x4e\x5f\x4c\x5b\x3e\x28\x57",
        // "sk_free" / M(Xor4) / S(85) / L(7)
        "\x23\x3b\x0f\x36\x22\x35\x35\x50\x25\xc0\xc0\x8f\xbf\x86\xaa\xba",
        // "CFBundleIdentifier" / M(Rot) / S(163) / L(18)
        "\xe6\xe9\xe5\x18\x11\x07\x0f\x08\xec\x07\x08\x11\x17\x0c\x09\x0c\x08\x15\xa3",
        // "X509_STORE_free" / M(Xor1) / S(22) / L(15)
        "\x4e\x23\x26\x2f\x49\x45\x42\x59\x44\x53\x49\x70\x64\x73\x73\x16",
        // "CFDataGetLength" / M(Rot) / S(239) / L(15)
        "\x32\x35\x33\x50\x63\x50\x36\x54\x63\x3b\x54\x5d\x56\x63\x57\xef",
        // "CFArrayGetValueAtIndex" / M(Xor4) / S(16) / L(22)
        "\x33\x36\x31\x02\x02\x11\x09\x37\x15\x04\x26\x11\x1c\x05\x15\x31\x04\x39\x1e\x14\x15\x08\x70",
        // "" / M(None) / S(0) / L(0)
        "\xef\x95\xf6\x36\x6f\x5d\xc1\x66\x5d\x6c\x3b\x72\x8b\xa5\x0c\xee\xf8\x58\x12\x24\xa4\x43\x12\x24\x17\xe6\xd2\xdc\x2e\x8c\x67\x0a",
        // "sk_free" / M(Xor4) / S(207) / L(7)
        "\x83\x9b\xaf\x96\x82\x95\x95\xf0\x45\x11\xf3\xe2\xa2\x9b\xa0\xd3",
        // "" / M(None) / S(0) / L(0)
        "\xca\xcd\x8c\x98\x28\x1e\xe8\xb9\x48\xaf\x2e\xc6\x83\x7e\xc0\x29\x36\x3c\xb0\x26\x08\xf9\x70\xd1\xe9\xb9\x8c\x16\x37\xe2\x04\xd1",
        // "objc_getClass" / M(Xor4) / S(159) / L(13)
        "\x9f\x92\x9a\x93\xaf\x97\x95\x84\xb3\x9c\x91\x83\x83\xf0\x65\x8d",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(67) / L(22)
        "\x75\x2f\x29\x28\x75\x36\x33\x38\x75\x36\x33\x38\x35\x38\x30\x39\x74\x3e\x23\x36\x33\x38\x5a",
        // "" / M(None) / S(0) / L(0)
        "\xe5\x0d\x1d\xa0\x18\x0f\x7d\x37\xa6\xe4\x73\xb8\x55\xc8\x3b\xf5\x1f\xbf\xca\x3a\xd8\x8f\xce\x71\x03\x26\xd1\x01\x25\x1a\x26\x49",
        // "/usr/lib/libobjc.dylib" / M(Xor3) / S(247) / L(22)
        "\x21\x7b\x7d\x7c\x21\x62\x67\x6c\x21\x62\x67\x6c\x61\x6c\x64\x6d\x20\x6a\x77\x62\x67\x6c\x0e",
        // "" / M(None) / S(0) / L(0)
        "\x65\xe6\x28\xf5\x7c\xad\xd3\x09\x9a\x2f\x79\xc7\xbc\x27\x1b\x89\x46\x4d\x4a\x84\xb1\xb4\x58\x44\x21\xb0\xf4\x8f\xf6\xa5\x87\x0d",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(51) / L(24)
        "\x58\x70\x75\x77\x52\x47\x56\x75\x5c\x41\x5e\x52\x47\x47\x56\x41\x67\x5a\x5e\x56\x69\x5c\x5d\x56\x33\x16\xd9\x8e\x62\x2a\x7a\xcd\x75",
        // "" / M(None) / S(0) / L(0)
        "\x2b\x3b\x3d\x88\xcb\x5f\xfe\x87\x7c\x48\x61\xdf\x2f\x7c\x1c\x7b\xd5\x0a\xba\x3a\x73\x45\xe1\x75\x81\xa9\xa4\x49\xf1\x8e\xd9\xf1",
        // "" / M(None) / S(0) / L(0)
        "\x2c\x9a\x8c\x63\xbb\x05\xed\xf5\xe0\xeb\x42\x19\xdd\x29\xc8\x42\x15\xde\x54\x5f\xb0\x55\x15\x0b\x9f\x6b\x42\xe7\xc5\x66\xd0\xa8",
        // "SKReceiptRefreshRequest" / M(Xor3) / S(154) / L(23)
        "\xe9\xf1\xe8\xdf\xd9\xdf\xd3\xca\xce\xe8\xdf\xdc\xc8\xdf\xc9\xd2\xe8\xdf\xcb\xcf\xdf\xc9\xce\xba\xcd\x98\x20\x12\xe7\x23\xba\xb9",
        // "" / M(None) / S(0) / L(0)
        "\xb5\x1a\x94\xbc\xe6\xa0\x7a\x9a\x57\x24\x32\x09\x5f\x06\x1c\x8d\xa4\xeb\x1d\x5c\xd4\x89\xf4\x07\x2d\x24\x73\xd9\x19\x7d\x97\x9b",
        // "identifierForVendor" / M(Xor1) / S(117) / L(19)
        "\x1c\x11\x10\x1b\x01\x1c\x13\x1c\x10\x07\x33\x1a\x07\x23\x10\x1b\x11\x1a\x07\x75",
        // "" / M(None) / S(0) / L(0)
        "\xca\x58\x2a\xb3\xf5\x70\xc5\xf0\xe3\x68\x51\x9e\x86\x1a\x31\xea\xbb\x89\x17\xd4\x89\x95\x2b\x4d\xa0\x43\xc9\x9d\x51\x44\xe4\x33",
        // "CFDataCreate" / M(Xor3) / S(97) / L(12)
        "\x32\x37\x35\x10\x05\x10\x32\x03\x14\x10\x05\x14\x71\x10\xae\x19",
        // "" / M(None) / S(0) / L(0)
        "\xd1\x71\xcf\xaf\xd6\x77\x1c\x1d\xc8\x5a\x86\x52\xa5\xf7\x63\xc7\x5c\xe3\x4a\xff\xf9\x33\x0f\x4b\x56\x36\x39\xb7\xe5\x99\x3f\xc7",
        // "ASN1_get_object" / M(Xor1) / S(89) / L(15)
        "\x18\x0a\x17\x68\x06\x3e\x3c\x2d\x06\x36\x3b\x33\x3c\x3a\x2d\x59",
        // "" / M(None) / S(0) / L(0)
        "\xb8\x17\x50\x70\xfa\xa3\x60\xfb\x02\x87\x53\xb2\x19\xcd\x2c\x3e\x28\x32\x60\x05\xfd\x9c\x3a\xf1\x78\x1f\xe4\x8a\x1d\x23\x0c\x3c",
        // "longjmp" / M(Xor4) / S(254) / L(7)
        "\x8c\x8f\x8e\x87\x8a\x8d\x90\xe0\x74\x04\xf5\xbf\x47\x38\x82\x58",
        // "" / M(None) / S(0) / L(0)
        "\xc9\xa5\x62\x5f\xef\xd7\xca\x0f\xbf\x7f\x87\x64\x03\x3f\x48\x4d\x4f\x56\xdc\xb4\x63\xbc\x9f\xfc\x72\x14\x25\xa5\xcf\x44\x8f\x94",
        // "kCFTypeDictionaryValueCallBacks" / M(Rot) / S(63) / L(31)
        "\xaa\x82\x85\x93\xb8\xaf\xa4\x83\xa8\xa2\xb3\xa8\xae\xad\xa0\xb1\xb8\x95\xa0\xab\xb4\xa4\x82\xa0\xab\xab\x81\xa0\xa2\xaa\xb2\x3f",
        // "" / M(None) / S(0) / L(0)
        "\x9d\xd3\xed\x98\x2d\xe1\xfa\x0e\x5b\xd3\x08\xcb\x0e\x27\xc4\x62\xbe\xd4\x9d\x0c\xc1\xb0\x57\x9b\x88\x46\x6f\x91\x3a\x4d\x0c\xe5",
        // "NSBundle" / M(Xor4) / S(125) / L(8)
        "\x9e\x83\x92\xa5\xbe\xb4\xbc\xb5\xd0\x55\x4b\xba\x9d\xea\xe1\x0c",
        // "" / M(None) / S(0) / L(0)
        "\x1a\x5e\x5b\x72\x90\xcb\x74\xd6\x1e\xda\x0a\x34\x56\xf1\xf7\x14\x7d\xf3\x13\xb6\x8c\xa5\x58\xf8\xdf\xc9\x62\xab\xde\xcc\x94\x4f",
        // "EVP_DigestInit" / M(Xor1) / S(203) / L(14)
        "\x8e\x9d\x9b\x94\x8f\xa2\xac\xae\xb8\xbf\x82\xa5\xa2\xbf\xcb\x53",
        // "61:1E:5B:66:2C:59:3A:08:FF:58:D1:4A:E2:24:52:D1:98:DF:6C:60" / M(Xor4) / S(10) / L(59)
        "\x9e\x99\x92\x99\xed\x92\x9d\xea\x92\x9e\x9e\x92\x9a\xeb\x92\x9d\x91\x92\x9b\xe9\x92\x98\x90\x92\xee\xee\x92\x9d\x90\x92\xec\x99\x92\x9c\xe9\x92\xed\x9a\x92\x9a\x9c\x92\x9d\x9a\x92\xec\x99\x92\x91\x90\x92\xec\xee\x92\x9e\xeb\x92\x9e\x98\xa8\x1f\xc6\xf3\x63\x7d\x05\xc6\x19",
        // "UIDevice" / M(Xor3) / S(142) / L(8)
        "\xcb\xd7\xda\xfb\xe8\xf7\xfd\xfb\x9e\x6a\xf4\xd2\x99\x32\xc9\x91",
        // "" / M(None) / S(0) / L(0)
        "\xc4\x0c\x68\xbf\x85\x54\x94\x08\x68\x54\x6f\x3c\x60\x1e\xe6\x34\xfb\x97\x0e\x91\x12\x50\x86\xd3\xf8\x9f\x84\x44\x83\x81\xb3\x45",
        // "EVP_get_digestbyname" / M(Xor1) / S(220) / L(20)
        "\x99\x8a\x8c\x83\xbb\xb9\xa8\x83\xb8\xb5\xbb\xb9\xaf\xa8\xbe\xa5\xb2\xbd\xb1\xb9\xdc",
        // "X509_NAME_get_text_by_NID" / M(Rot) / S(11) / L(25)
        "\x63\x40\x3b\x44\x6a\x59\x4c\x58\x50\x6a\x72\x70\x7f\x6a\x7f\x70\x83\x7f\x6a\x6d\x84\x6a\x59\x54\x4f\x0b\xf5\x51\xc4\xf7\x04\xe3\x90\x39",
        // "CFArrayCreateMutable" / M(Xor4) / S(115) / L(20)
        "\x2c\x29\x2e\x1d\x1d\x0e\x16\x2c\x1d\x0a\x0e\x1b\x0a\x22\x1a\x1b\x0e\x0d\x03\x0a\x6f",
        // "" / M(None) / S(0) / L(0)
        "\x4b\x03\x03\xd4\x89\xca\xc6\xae\xcf\xd3\xdb\x61\xd6\xe8\xe7\x47\xb4\xc4\x71\x67\xfe\x5b\xfa\x6b\x69\x6e\x29\x71\xaa\xd4\x3b\xe4",
        // "" / M(None) / S(0) / L(0)
        "\x99\x2f\x28\x18\x01\x77\x83\x52\x92\x54\x35\xdb\x04\x9e\x69\xc7\x01\xd4\xb9\x9d\xf5\xf4\x21\x26\x20\xf5\x3e\xd8\x8d\x30\xc2\xb0",
        // "CFDataGetLength" / M(Rot) / S(57) / L(15)
        "\x7c\x7f\x7d\x9a\xad\x9a\x80\x9e\xad\x85\x9e\xa7\xa0\xad\xa1\x39",
        // "" / M(None) / S(0) / L(0)
        "\x53\x08\x18\xb9\x37\xe2\x8e\xb0\xba\xe4\x9e\xfc\xda\x2f\x1a\xab\x58\x08\x35\x9a\xaf\xa8\x12\xcd\xf0\xb3\xef\x9d\x10\xfe\xb9\x62",
        // "NSBundle" / M(Rot) / S(77) / L(8)
        "\x9b\xa0\x8f\xc2\xbb\xb1\xb9\xb2\x4d\x47\x3b\x6c\x79\x50\x30\x6b",
        // "sk_value" / M(Xor3) / S(64) / L(8)
        "\x23\x3b\x0f\x26\x31\x3c\x25\x35\x50\x60\x18\x7c\x37\x48\x0a\x29",
        // "ASN1_INTEGER_get" / M(Xor1) / S(31) / L(16)
        "\x5e\x4c\x51\x2e\x40\x56\x51\x4b\x5a\x58\x5a\x4d\x40\x78\x7a\x6b\x1f",
        // "" / M(None) / S(0) / L(0)
        "\xa1\x00\x4b\x35\x5d\x90\x1f\x4f\x5e\x3e\x4b\xe3\x50\x3d\x84\x76\x6b\x96\x6c\x20\x07\x4d\xb6\x5f\xbf\xdb\xe2\xc6\x6b\x5a\x6a\x92",
        // "ASN1_INTEGER_get" / M(Xor4) / S(163) / L(16)
        "\x92\x80\x9d\xe2\x8c\x9a\x9d\x87\x96\x94\x96\x81\x8c\xb4\xb6\xa7\xd3",
        // "sel_registerName" / M(Rot) / S(124) / L(16)
        "\xef\xe1\xe8\xdb\xee\xe1\xe3\xe5\xef\xf0\xe1\xee\xca\xdd\xe9\xe1\x7c",
        // "com.intangiblesoftware.menslacrossestats" / M(Xor2) / S(136) / L(40)
        "\xda\xd6\xd4\x97\xd0\xd7\xcd\xd8\xd7\xde\xd0\xdb\xd5\xdc\xca\xd6\xdf\xcd\xce\xd8\xcb\xdc\x97\xd4\xdc\xd7\xca\xd5\xd8\xda\xcb\xd6\xca\xca\xdc\xca\xcd\xd8\xcd\xca\xb9\x2a\x92\xa2\x21\xeb\xae\x78\x37",
        // "PKCS7_free" / M(Xor1) / S(175) / L(10)
        "\xff\xe4\xec\xfc\x98\xf0\xc9\xdd\xca\xca\xaf\xff\x85\xc4\x96\xf7",
        // "" / M(None) / S(0) / L(0)
        "\xd9\x23\x5b\x53\x7a\x48\xe6\x50\x09\x95\xe7\x5c\xe2\x89\x78\x51\xb2\xcb\xcc\x87\x50\x35\x65\x64\x61\x45\x5a\x18\x33\x08\xeb\x7b",
        // "SHA1" / M(Xor1) / S(230) / L(4)
        "\xb5\xae\xa7\xd7\xe6\xa1\xdc\x69\x0b\xa8\x58\x8c\x71\x46\x2e\xfa",
        // "" / M(None) / S(0) / L(0)
        "\xed\xfe\x9f\xde\xed\x10\x4f\xd0\x84\x69\x86\xba\x54\x66\x50\xdb\x35\x80\xd8\x1f\x75\x18\xcd\x00\xcf\x24\x9b\x04\x7e\x22\x9f\x88",
        // "" / M(None) / S(0) / L(0)
        "\x62\xfb\x9d\xcb\x95\xd7\x56\x09\x45\x6e\x6f\x97\x2f\x01\xf8\x75\xff\x1f\x7f\x43\x14\x5a\xb3\xd6\x4e\xb8\x35\xd1\x42\x07\x78\xfd",
        // "" / M(None) / S(0) / L(0)
        "\xf8\xaa\x83\xfb\xb1\x31\xd9\xae\xda\xd3\x67\x7f\x08\xd0\x4d\x02\xa6\x45\xf5\x67\xed\x0e\x84\xa2\x09\x28\x1f\xf1\x26\x32\xe4\xd8",
        // "CFStringCreateWithBytes" / M(Xor2) / S(235) / L(23)
        "\x88\x8d\x98\xbf\xb9\xa2\xa5\xac\x88\xb9\xae\xaa\xbf\xae\x9c\xa2\xbf\xa3\x89\xb2\xbf\xae\xb8\xcb\x15\x5f\x2a\x6b\x76\x45\xd6\xb6",
        // "BIO_new" / M(Xor4) / S(226) / L(7)
        "\x62\x69\x6f\x7f\x4e\x45\x57\x20\xc0\x50\xb4\xc3\x33\x18\x93\x7c",
        // "" / M(None) / S(0) / L(0)
        "\x93\xca\xd3\x57\x22\xd2\x28\xb5\x3d\xa1\xdd\x7c\x86\x26\x30\x35\x82\xd3\x14\x6d\x24\xbc\xe3\x52\x32\x4d\x18\x00\xda\xcb\x37\x1b",
        // "" / M(None) / S(0) / L(0)
        "\x65\x0e\x5f\x55\xf9\x2c\xec\x84\x77\x72\xa7\x7c\xe3\xbc\x93\x7e\x27\xbc\xce\x38\x3b\x90\x1c\x36\x5a\x72\xd6\xb8\xe3\x6b\x92\x02",
        // "1" / M(Xor2) / S(126) / L(1)
        "\x5f\x6e\x6a\xd7\xc6\x3e\x94\x73\x84\xa1\x3a\xe5\xca\x20\x70\xbc",
        // "CC_SHA1_Update" / M(Xor2) / S(233) / L(14)
        "\xba\xba\xa6\xaa\xb1\xb8\xc8\xa6\xac\x89\x9d\x98\x8d\x9c\xf9\x1f",
        // "" / M(None) / S(0) / L(0)
        "\xe1\xff\xf7\x7f\x0d\xc3\xae\xc2\x5b\x19\xae\x69\x57\x9d\xcd\x03\xbf\x52\x58\x11\x96\x43\x64\x10\x9f\xc4\x59\xdb\xec\xe7\x37\x6c",
        // "" / M(None) / S(0) / L(0)
        "\x8a\xfd\x38\xec\x40\xd9\x22\x2c\xc8\xed\xe1\xcf\x85\xe1\x12\x44\xca\xe5\xfc\x0e\x5a\x9f\xb2\x51\xab\xdf\x54\xe8\x5d\x72\x11\x56",
        // "objc_msgSend" / M(Xor1) / S(143) / L(12)
        "\xe0\xed\xe5\xec\xd0\xe2\xfc\xe8\xdc\xea\xe1\xeb\x8f\xfe\xec\x73",
        // "" / M(None) / S(0) / L(0)
        "\x83\x84\xf4\x06\xcb\x45\x62\x1a\xc6\x0b\x91\xc7\xb3\xe7\x1f\x5a\xaa\x18\xad\x56\xe4\x50\x6a\xe5\x93\xcf\x36\x46\x6a\x82\xd5\xcd",
        // "appStoreReceiptURL" / M(Xor3) / S(122) / L(18)
        "\xec\xfd\xfd\xde\xf9\xe2\xff\xe8\xdf\xe8\xee\xe8\xe4\xfd\xf9\xd8\xdf\xc1\x8d",
        // "ASN1_INTEGER_free" / M(Xor2) / S(88) / L(17)
        "\x0b\x19\x04\x7b\x15\x03\x04\x1e\x0f\x0d\x0f\x18\x15\x2c\x38\x2f\x2f\x4a",
        // "PKCS7_get0_signers" / M(Xor1) / S(22) / L(18)
        "\x46\x5d\x55\x45\x21\x49\x71\x73\x62\x26\x49\x65\x7f\x71\x78\x73\x64\x65\x16",
        // "" / M(None) / S(0) / L(0)
        "\x09\x10\xd6\x3c\x56\x54\x2d\x43\x1a\xdc\x60\x9b\x2c\x43\x4d\x4f\x57\xd6\x38\x1d\x7c\xb1\x43\x1f\xff\x7d\xd1\x3c\x3a\x9b\x10\x6f",
        // "ASN1_INTEGER_free" / M(Xor4) / S(171) / L(17)
        "\x47\x55\x48\x37\x59\x4f\x48\x52\x43\x41\x43\x54\x59\x60\x74\x63\x63\x06",
        // "currentDevice" / M(Xor2) / S(235) / L(13)
        "\x98\x8e\x89\x89\x9e\x95\x8f\xbf\x9e\x8d\x92\x98\x9e\xfb\xc9\x16",
        // "" / M(None) / S(0) / L(0)
        "\x33\x6c\xa7\x4a\x33\xba\x4b\x4f\x0a\x4a\x18\xe7\x1b\xf6\x22\x33\x2e\x81\x28\x8a\xc3\x86\x7e\x9e\x53\x4f\x99\x96\x03\x8e\x58\xed",
        // "OBJ_txt2obj" / M(Xor3) / S(11) / L(11)
        "\x54\x59\x51\x44\x6f\x63\x6f\x29\x74\x79\x71\x1b\xb6\xcc\xc8\xd7",
        // "RTLD_MAIN_ONLY" / M(Xor3) / S(43) / L(14)
        "\x69\x6f\x77\x7f\x64\x76\x7a\x72\x75\x64\x74\x75\x77\x62\x3b\x37",
        // "" / M(None) / S(0) / L(0)
        "\xa5\x53\xcc\xcf\x08\x72\xe5\x64\x21\xe9\x69\xa6\xc5\x5c\x96\x01\x3d\xf3\x77\x50\x79\x90\xa2\x55\xed\x72\xbe\xc8\xf7\xfd\x05\x39",
        // "X509_free" / M(Rot) / S(173) / L(9)
        "\x05\xe2\xdd\xe6\x0c\x13\x1f\x12\x12\xad\xf4\xdd\x65\x2e\x38\x34",
        // "kCFDateFormatterTimeZone" / M(Xor1) / S(80) / L(24)
        "\x3b\x13\x16\x14\x31\x24\x35\x16\x3f\x22\x3d\x31\x24\x24\x35\x22\x04\x39\x3d\x35\x0a\x3f\x3e\x35\x50\x45\x89\xbc\xc4\x21\xf1\x8a\xfd",
        // "kCFBundleIdentifierKey" / M(Xor4) / S(72) / L(22)
        "\x13\x3b\x3e\x3a\x0d\x16\x1c\x14\x1d\x31\x1c\x1d\x16\x0c\x11\x1e\x11\x1d\x0a\x33\x1d\x01\x78",
        // "1.2.840.113635.100.6.11.1" / M(Rot) / S(121) / L(25)
        "\xaa\xa7\xab\xa7\xb1\xad\xa9\xa7\xaa\xaa\xac\xaf\xac\xae\xa7\xaa\xa9\xa9\xa7\xaf\xa7\xaa\xaa\xa7\xaa\x79\xc8\x5d\x97\x80\x8d\x83\xc3\x32",
        // "objc_getClass" / M(Rot) / S(144) / L(13)
        "\xff\xf2\xfa\xf3\xef\xf7\xf5\x04\xd3\xfc\xf1\x03\x03\x90\x9b\xf2",
        // "CFDictionaryAddValue" / M(Xor2) / S(98) / L(20)
        "\x34\x31\x33\x1e\x14\x03\x1e\x18\x19\x16\x05\x0e\x36\x13\x13\x21\x16\x1b\x02\x12\x77",
        // "" / M(None) / S(0) / L(0)
        "\x29\xb8\x3f\x0c\x09\x46\xe4\x5a\x5e\x30\x34\x17\x2a\x12\x2c\x35\x81\x7e\x5e\xbd\x93\x66\xc5\x4d\x2f\xb9\xff\x42\xff\xdc\x8e\x25",
        // "" / M(None) / S(0) / L(0)
        "\xac\xf9\xe6\x77\x1b\x86\xdd\xcb\x13\xe8\xda\xe3\x0a\xcb\x76\x37\x3b\x6b\xed\x70\x0c\x33\xb1\xd8\x0e\xaf\xad\x89\xe5\x86\x4f\x4f",
        // "CFDateFormatterCreateDateFromString" / M(Xor1) / S(193) / L(35)
        "\x82\x87\x85\xa0\xb5\xa4\x87\xae\xb3\xac\xa0\xb5\xb5\xa4\xb3\x82\xb3\xa4\xa0\xb5\xa4\x85\xa0\xb5\xa4\x87\xb3\xae\xac\x92\xb5\xb3\xa8\xaf\xa6\xc1",
        // "dlsym" / M(Xor3) / S(55) / L(5)
        "\x23\x2b\x34\x3e\x2a\x47\x5c\x0b\x7d\x2b\x58\xec\x12\x4b\xa8\xb0",
        // "mainBundle" / M(Xor3) / S(240) / L(10)
        "\x6d\x61\x69\x6e\x42\x75\x6e\x64\x6c\x65\x00\x3f\x28\x6d\x67\x83",
        // "d2i_PKCS7_bio" / M(Xor2) / S(63) / L(13)
        "\x4b\x1d\x46\x70\x7f\x64\x6c\x7c\x18\x70\x4d\x46\x40\x2f\x2e\xbf",
        // "BIO_new" / M(Xor2) / S(91) / L(7)
        "\x09\x02\x04\x14\x25\x2e\x3c\x4b\xb5\x88\x56\x8c\x5e\xb9\xc1\xc2",
        // "%02x" / M(Xor1) / S(241) / L(4)
        "\xd4\xc1\xc3\x89\xf1\x14\x8d\x74\x84\xb5\x23\xf0\x20\xad\x5d\xe6",
        // "CFBundleShortVersionString" / M(Rot) / S(57) / L(26)
        "\x7c\x7f\x7b\xae\xa7\x9d\xa5\x9e\x8c\xa1\xa8\xab\xad\x8f\x9e\xab\xac\xa2\xa8\xa7\x8c\xad\xab\xa2\xa7\xa0\x39\x57\xea\x4a\xe1\x44\x10\xb4\x44",
        // "identifierForVendor" / M(Xor4) / S(105) / L(19)
        "\x5d\x50\x51\x5a\x40\x5d\x52\x5d\x51\x46\x72\x5b\x46\x62\x51\x5a\x50\x5b\x46\x34",
        // "CFBundleGetValueForInfoDictionaryKey" / M(Rot) / S(77) / L(36)
        "\x90\x93\x8f\xc2\xbb\xb1\xb9\xb2\x94\xb2\xc1\xa3\xae\xb9\xc2\xb2\x93\xbc\xbf\x96\xbb\xb3\xbc\x91\xb6\xb0\xc1\xb6\xbc\xbb\xae\xbf\xc6\x98\xb2\xc6\x4d",
        // "" / M(None) / S(0) / L(0)
        "\x47\xfe\x2e\xb2\xcd\x5f\x65\x80\x38\x08\x5c\x23\x7d\xaf\xa2\xdd\x39\x4e\x57\x07\x36\x6f\xe9\xfe\xda\xd2\xca\x05\x37\xf1\x3c\xa3",
        // "" / M(None) / S(0) / L(0)
        "\x01\x52\x9a\x1a\x62\xa3\x31\x1c\xa2\x9d\x18\x8b\xd8\x51\x4e\xb1\x00\x24\xa2\x88\x38\x02\x0c\xcc\x12\xe7\x54\x3c\x3d\x50\xe8\x72",
    };
    
    // Table for storing pointers
    static void *INSOValidateReceipt_Pointers[483] = {
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) X509_digest),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_digest),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) sk_free),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) c2i_ASN1_INTEGER),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_s_mem),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_verify),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_write),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) BIO_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strlen),
        ((void *) OBJ_txt2obj),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OpenSSL_add_all_digests),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithCString),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1_Final),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_get_ext_by_OBJ),
        ((void *) NULL),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlopen),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) strncmp),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) dlopen),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) sk_num),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) X509_STORE_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_num),
        ((void *) X509_STORE_add_cert),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestUpdate),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) EVP_MD_CTX_init),
        ((void *) NULL),
        ((void *) SHA1_Init),
        ((void *) CFStringCreateWithBytes),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestFinal),
        ((void *) ASN1_OBJECT_free),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) d2i_X509_bio),
        ((void *) NULL),
        ((void *) SHA1_Update),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) X509_STORE_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_get_object),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_DigestInit),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) EVP_get_digestbyname),
        ((void *) X509_NAME_get_text_by_NID),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) sk_value),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_get),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) PKCS7_free),
        ((void *) NULL),
        ((void *) SHA1),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) CFStringCreateWithBytes),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) PKCS7_get0_signers),
        ((void *) NULL),
        ((void *) ASN1_INTEGER_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) OBJ_txt2obj),
        ((void *) RTLD_MAIN_ONLY),
        ((void *) NULL),
        ((void *) X509_free),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) dlsym),
        ((void *) NULL),
        ((void *) d2i_PKCS7_bio),
        ((void *) BIO_new),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
        ((void *) NULL),
    };
    
    // Push a new diagnostic context
#pragma clang diagnostic push
    // When getting primary MAC address, an effectless alignment requirement increase is reported
#pragma clang diagnostic ignored "-Wcast-align"
    // In RELEASE mode, static variable are inlined but their declaration are not removed
#pragma clang diagnostic ignored "-Wunused"
    // In DEBUG mode, static variable are not inlined
#pragma clang diagnostic ignored "-Wused-but-marked-unused"
    
    // Global variables
    static int INSOValidateReceipt_BJGLKTVBBWHP __unused;
    static int INSOValidateReceipt_OWQDOMHQWMFA __unused;
    static int INSOValidateReceipt_SRTQPOPBXFUT __unused;
    static int INSOValidateReceipt_QIFQNVQRGQSG __unused;
    static int INSOValidateReceipt_JEXXRJDKKNCL __unused;
    static int INSOValidateReceipt_RJPACSZPSGIZ __unused;
    static int INSOValidateReceipt_QZUZRTTZYTGG __unused;
    static int INSOValidateReceipt_EZQRFSDNDPKQ __unused;
    
    
    // The long jump buffer
    static jmp_buf INSOValidateReceipt_JumpBuf __unused;
    
#define INSOValidateReceipt_ASN1_get_object_01CE016B ((__INSOValidateReceipt_ASN1_get_object) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00A, 363, 169, 16))
#define INSOValidateReceipt_ASN1_INTEGER_free_011C01CA ((__INSOValidateReceipt_ASN1_INTEGER_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00B, 458, 171, 18))
#define INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3 ((__INSOValidateReceipt_ASN1_INTEGER_get) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00B, 435, 163, 17))
#define INSOValidateReceipt_ASN1_OBJECT_free_01CE0179 ((__INSOValidateReceipt_ASN1_OBJECT_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00C, 377, 26, 17))
#define INSOValidateReceipt_BIO_free_00E00007 ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction00C, 7, 171, 16))
#define INSOValidateReceipt_BIO_free_011C00E7 ((__INSOValidateReceipt_BIO_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction004, 231, 241, 16))
#define INSOValidateReceipt_BIO_new_011C01BD ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00B, 445, 226, 16))
#define INSOValidateReceipt_BIO_new_01CE0086 ((__INSOValidateReceipt_BIO_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction009, 134, 118, 16))
#define INSOValidateReceipt_BIO_s_mem_011C0066 ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction004, 102, 113, 16))
#define INSOValidateReceipt_BIO_s_mem_011C00AD ((__INSOValidateReceipt_BIO_s_mem) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction009, 173, 66, 16))
#define INSOValidateReceipt_BIO_write_011C00C7 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction005, 199, 156, 16))
#define INSOValidateReceipt_BIO_write_01CE0043 ((__INSOValidateReceipt_BIO_write) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00A, 67, 0, 16))
#define INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B ((__INSOValidateReceipt_c2i_ASN1_INTEGER) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00B, 139, 81, 17))
#define INSOValidateReceipt_CFArrayCreateMutable_00E20176 ((__INSOValidateReceipt_CFArrayCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction005, 374, 233, 21))
#define INSOValidateReceipt_CFBundleGetMainBundle_00BA0100 ((__INSOValidateReceipt_CFBundleGetMainBundle) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00C, 256, 25, 22))
#define INSOValidateReceipt_CFBundleUnloadExecutable_00BA0097 ((__INSOValidateReceipt_CFBundleUnloadExecutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00C, 151, 135, 33))
#define INSOValidateReceipt_CFDataCreate_0098019A ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction009, 410, 97, 16))
#define INSOValidateReceipt_CFDataCreateMutable_00BA0072 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction006, 114, 139, 20))
#define INSOValidateReceipt_CFDataCreateMutable_00E200D3 ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00C, 211, 251, 20))
#define INSOValidateReceipt_CFDataGetBytePtr_009800F4 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction003, 244, 95, 17))
#define INSOValidateReceipt_CFDataGetLength_00BA0189 ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction003, 393, 239, 16))
#define INSOValidateReceipt_CFDateFormatterCreate_0098010B ((__INSOValidateReceipt_CFDateFormatterCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction00C, 267, 91, 22))
#define INSOValidateReceipt_CFDateFormatterCreateDateFromString_00BA017E ((__INSOValidateReceipt_CFDateFormatterCreateDateFromString) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction009, 382, 238, 36))
#define INSOValidateReceipt_CFDateFormatterSetProperty_009800B3 ((__INSOValidateReceipt_CFDateFormatterSetProperty) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction007, 179, 183, 35))
#define INSOValidateReceipt_CFDictionaryAddValue_00E2000D ((__INSOValidateReceipt_CFDictionaryAddValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction005, 13, 154, 21))
#define INSOValidateReceipt_CFDictionaryGetValue_00BA0049 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction009, 73, 96, 21))
#define INSOValidateReceipt_CFNumberCreate_00BA0134 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction007, 308, 148, 16))
#define INSOValidateReceipt_CFRelease_0098001F ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction008, 31, 201, 16))
#define INSOValidateReceipt_CFRelease_009800BD ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction007, 189, 147, 16))
#define INSOValidateReceipt_CFRelease_00BA001F ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction008, 31, 201, 16))
#define INSOValidateReceipt_CFRelease_00BA00BD ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction007, 189, 147, 16))
#define INSOValidateReceipt_CFRelease_00E2001F ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction008, 31, 201, 16))
#define INSOValidateReceipt_CFRelease_00E200BD ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction007, 189, 147, 16))
#define INSOValidateReceipt_CFRelease_00E2010A ((__INSOValidateReceipt_CFRelease) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction009, 266, 245, 16))
#define INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00BA0038 ((__INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction003, 56, 128, 48))
#define INSOValidateReceipt_d2i_PKCS7_bio_00E0004A ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction007, 74, 203, 16))
#define INSOValidateReceipt_d2i_PKCS7_bio_01CE004A ((__INSOValidateReceipt_d2i_PKCS7_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction007, 74, 203, 16))
#define INSOValidateReceipt_d2i_X509_bio_011C017D ((__INSOValidateReceipt_d2i_X509_bio) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction006, 381, 103, 16))
#define INSOValidateReceipt_EVP_DigestFinal_00E00082 ((__INSOValidateReceipt_EVP_DigestFinal) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction006, 130, 159, 16))
#define INSOValidateReceipt_EVP_DigestInit_01CE01A4 ((__INSOValidateReceipt_EVP_DigestInit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction006, 420, 203, 16))
#define INSOValidateReceipt_EVP_DigestUpdate_011C0166 ((__INSOValidateReceipt_EVP_DigestUpdate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction004, 358, 193, 17))
#define INSOValidateReceipt_EVP_get_digestbyname_011C01A8 ((__INSOValidateReceipt_EVP_get_digestbyname) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction006, 424, 220, 21))
#define INSOValidateReceipt_EVP_MD_CTX_init_00E0016D ((__INSOValidateReceipt_EVP_MD_CTX_init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction005, 365, 202, 16))
#define INSOValidateReceipt_exit_014300BC ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 323, 200, 33, INSOValidateReceipt_ObfuscationFunction006, 188, 79, 16))
#define INSOValidateReceipt_exit_014300E6 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 323, 200, 33, INSOValidateReceipt_ObfuscationFunction006, 230, 134, 16))
#define INSOValidateReceipt_exit_01430182 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 323, 200, 33, INSOValidateReceipt_ObfuscationFunction008, 386, 73, 16))
#define INSOValidateReceipt_exit_015A00E6 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction006, 230, 134, 16))
#define INSOValidateReceipt_exit_016300E6 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction006, 230, 134, 16))
#define INSOValidateReceipt_exit_01630182 ((__INSOValidateReceipt_exit) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction008, 386, 73, 16))
#define INSOValidateReceipt_BJGLKTVBBWHP_0098001D ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_BJGLKTVBBWHP, 211, 21))
#define INSOValidateReceipt_BJGLKTVBBWHP_009800CC ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_BJGLKTVBBWHP, 17, 16))
#define INSOValidateReceipt_BJGLKTVBBWHP_00BA00AC ((__INSOValidateReceipt_CFArrayAppendValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_BJGLKTVBBWHP, 115, 19))
#define INSOValidateReceipt_BJGLKTVBBWHP_00E20175 ((__INSOValidateReceipt_CFEqual) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_BJGLKTVBBWHP, 109, 16))
#define INSOValidateReceipt_OWQDOMHQWMFA_0098002D ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_OWQDOMHQWMFA, 57, 16))
#define INSOValidateReceipt_OWQDOMHQWMFA_0098015D ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_OWQDOMHQWMFA, 1, 16))
#define INSOValidateReceipt_OWQDOMHQWMFA_009801E0 ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_OWQDOMHQWMFA, 77, 37))
#define INSOValidateReceipt_OWQDOMHQWMFA_00BA0005 ((__INSOValidateReceipt_CFArrayGetCount) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_OWQDOMHQWMFA, 110, 16))
#define INSOValidateReceipt_OWQDOMHQWMFA_00BA0039 ((__INSOValidateReceipt_CFBundleGetIdentifier) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_OWQDOMHQWMFA, 236, 22))
#define INSOValidateReceipt_OWQDOMHQWMFA_00BA00AF ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_OWQDOMHQWMFA, 46, 17))
#define INSOValidateReceipt_OWQDOMHQWMFA_00BA0126 ((__INSOValidateReceipt_CFReadStreamCreateWithFile) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_OWQDOMHQWMFA, 71, 35))
#define INSOValidateReceipt_OWQDOMHQWMFA_00BA0181 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_OWQDOMHQWMFA, 29, 18))
#define INSOValidateReceipt_SRTQPOPBXFUT_00980051 ((__INSOValidateReceipt_CFDateCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_SRTQPOPBXFUT, 49, 16))
#define INSOValidateReceipt_SRTQPOPBXFUT_00BA00CC ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_SRTQPOPBXFUT, 17, 16))
#define INSOValidateReceipt_SRTQPOPBXFUT_00E20067 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_SRTQPOPBXFUT, 178, 18))
#define INSOValidateReceipt_SRTQPOPBXFUT_00E20181 ((__INSOValidateReceipt_CFDataAppendBytes) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_SRTQPOPBXFUT, 29, 18))
#define INSOValidateReceipt_SRTQPOPBXFUT_0163007B ((__INSOValidateReceipt_CC_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_SRTQPOPBXFUT, 79, 16))
#define INSOValidateReceipt_QIFQNVQRGQSG_009800D1 ((__INSOValidateReceipt_CFDateCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_QIFQNVQRGQSG, 168, 16))
#define INSOValidateReceipt_QIFQNVQRGQSG_00980134 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QIFQNVQRGQSG, 148, 16))
#define INSOValidateReceipt_QIFQNVQRGQSG_00BA015D ((__INSOValidateReceipt_CFDataGetLength) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_QIFQNVQRGQSG, 1, 16))
#define INSOValidateReceipt_QIFQNVQRGQSG_00E20080 ((__INSOValidateReceipt_CFDataGetBytePtr) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction005, INSOValidateReceipt_QIFQNVQRGQSG, 179, 17))
#define INSOValidateReceipt_QIFQNVQRGQSG_00E2010D ((__INSOValidateReceipt_CFBundleGetValueForInfoDictionaryKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_QIFQNVQRGQSG, 220, 37))
#define INSOValidateReceipt_QIFQNVQRGQSG_00E2011D ((__INSOValidateReceipt_CFReadStreamOpen) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_QIFQNVQRGQSG, 62, 17))
#define INSOValidateReceipt_QIFQNVQRGQSG_01630001 ((__INSOValidateReceipt_CC_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_QIFQNVQRGQSG, 100, 16))
#define INSOValidateReceipt_JEXXRJDKKNCL_0098002A ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_JEXXRJDKKNCL, 169, 21))
#define INSOValidateReceipt_JEXXRJDKKNCL_00980134 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_JEXXRJDKKNCL, 148, 16))
#define INSOValidateReceipt_JEXXRJDKKNCL_00E2002A ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_JEXXRJDKKNCL, 169, 21))
#define INSOValidateReceipt_JEXXRJDKKNCL_00E2008C ((__INSOValidateReceipt_CFDataCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_JEXXRJDKKNCL, 227, 20))
#define INSOValidateReceipt_JEXXRJDKKNCL_00E200F2 ((__INSOValidateReceipt_CFAbsoluteTimeGetCurrent) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction006, INSOValidateReceipt_JEXXRJDKKNCL, 182, 33))
#define INSOValidateReceipt_JEXXRJDKKNCL_014301C1 ((__INSOValidateReceipt_CC_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 323, 200, 33, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_JEXXRJDKKNCL, 233, 16))
#define INSOValidateReceipt_RJPACSZPSGIZ_0098002D ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_RJPACSZPSGIZ, 57, 16))
#define INSOValidateReceipt_RJPACSZPSGIZ_00BA007F ((__INSOValidateReceipt_CFDateFormatterSetFormat) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_RJPACSZPSGIZ, 159, 33))
#define INSOValidateReceipt_RJPACSZPSGIZ_00E200B4 ((__INSOValidateReceipt_CFReadStreamClose) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_RJPACSZPSGIZ, 185, 18))
#define INSOValidateReceipt_RJPACSZPSGIZ_00E200FB ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_RJPACSZPSGIZ, 98, 16))
#define INSOValidateReceipt_RJPACSZPSGIZ_00E20151 ((__INSOValidateReceipt_CFNumberCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_RJPACSZPSGIZ, 71, 16))
#define INSOValidateReceipt_QZUZRTTZYTGG_0098002D ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_QZUZRTTZYTGG, 57, 16))
#define INSOValidateReceipt_QZUZRTTZYTGG_00BA00D6 ((__INSOValidateReceipt_CFReadStreamRead) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_QZUZRTTZYTGG, 181, 17))
#define INSOValidateReceipt_QZUZRTTZYTGG_00BA00F3 ((__INSOValidateReceipt_CFDictionaryCreateMutable) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00A, INSOValidateReceipt_QZUZRTTZYTGG, 187, 34))
#define INSOValidateReceipt_QZUZRTTZYTGG_00E200F9 ((__INSOValidateReceipt_CFArrayGetValueAtIndex) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction003, INSOValidateReceipt_QZUZRTTZYTGG, 163, 23))
#define INSOValidateReceipt_QZUZRTTZYTGG_015A016E ((__INSOValidateReceipt_CC_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction00B, INSOValidateReceipt_QZUZRTTZYTGG, 189, 16))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00980049 ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_EZQRFSDNDPKQ, 96, 21))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00980053 ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction004, INSOValidateReceipt_EZQRFSDNDPKQ, 51, 16))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00BA007C ((__INSOValidateReceipt_CFStringCompare) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction008, INSOValidateReceipt_EZQRFSDNDPKQ, 25, 16))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00BA0124 ((__INSOValidateReceipt_CFDictionarySetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction00C, INSOValidateReceipt_EZQRFSDNDPKQ, 70, 21))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00E2001D ((__INSOValidateReceipt_CFDictionaryGetValue) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction007, INSOValidateReceipt_EZQRFSDNDPKQ, 211, 21))
#define INSOValidateReceipt_EZQRFSDNDPKQ_00E2019A ((__INSOValidateReceipt_CFDataCreate) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction009, INSOValidateReceipt_EZQRFSDNDPKQ, 97, 16))
#define INSOValidateReceipt_kCFBundleIdentifierKey_009800EA ((__INSOValidateReceipt_kCFBundleIdentifierKey) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 152, 92, 67, INSOValidateReceipt_ObfuscationFunction005, 234, 101, 23))
#define INSOValidateReceipt_kCFDateFormatterTimeZone_00BA0193 ((__INSOValidateReceipt_kCFDateFormatterTimeZone) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction006, 403, 51, 33))
#define INSOValidateReceipt_kCFTypeArrayCallBacks_00BA011E ((__INSOValidateReceipt_kCFTypeArrayCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction005, 286, 72, 22))
#define INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00E2007D ((__INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction007, 226, 68, 67, INSOValidateReceipt_ObfuscationFunction00A, 125, 194, 38))
#define INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00BA0018 ((__INSOValidateReceipt_kCFTypeDictionaryValueCallBacks) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 186, 236, 67, INSOValidateReceipt_ObfuscationFunction003, 24, 81, 32))
#define INSOValidateReceipt_longjmp_01430105 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction008, 323, 200, 33, INSOValidateReceipt_ObfuscationFunction004, 261, 79, 16))
#define INSOValidateReceipt_longjmp_015A0041 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction008, 65, 140, 16))
#define INSOValidateReceipt_longjmp_015A0105 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction004, 261, 79, 16))
#define INSOValidateReceipt_longjmp_015A019E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction00B, 414, 254, 16))
#define INSOValidateReceipt_longjmp_01630041 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction008, 65, 140, 16))
#define INSOValidateReceipt_longjmp_01630105 ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction004, 261, 79, 16))
#define INSOValidateReceipt_longjmp_0163019E ((__INSOValidateReceipt_longjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 355, 82, 33, INSOValidateReceipt_ObfuscationFunction00B, 414, 254, 16))
#define INSOValidateReceipt_OBJ_txt2obj_011C00EF ((__INSOValidateReceipt_OBJ_txt2obj) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00C, 239, 107, 16))
#define INSOValidateReceipt_objc_getClass_00DE00B7 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction00B, 183, 74, 16))
#define INSOValidateReceipt_objc_getClass_00DE018E ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction00C, 398, 159, 16))
#define INSOValidateReceipt_objc_getClass_018F01D4 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction004, 468, 144, 16))
#define INSOValidateReceipt_objc_getClass_019100B7 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction00B, 183, 74, 16))
#define INSOValidateReceipt_objc_getClass_0191018E ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction00C, 398, 159, 16))
#define INSOValidateReceipt_objc_getClass_019101D4 ((__INSOValidateReceipt_objc_getClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction004, 468, 144, 16))
#define INSOValidateReceipt_objc_lookUpClass_019100FC ((__INSOValidateReceipt_objc_lookUpClass) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction007, 252, 97, 17))
#define INSOValidateReceipt_objc_msgSend_00DE00EC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction00A, 236, 249, 16))
#define INSOValidateReceipt_objc_msgSend_00DE01C4 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction006, 452, 143, 16))
#define INSOValidateReceipt_objc_msgSend_018F00EC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction00A, 236, 249, 16))
#define INSOValidateReceipt_objc_msgSend_018F0167 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction009, 359, 184, 16))
#define INSOValidateReceipt_objc_msgSend_018F01C4 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction006, 452, 143, 16))
#define INSOValidateReceipt_objc_msgSend_019100EC ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction00A, 236, 249, 16))
#define INSOValidateReceipt_objc_msgSend_01910167 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction009, 359, 184, 16))
#define INSOValidateReceipt_objc_msgSend_019101C4 ((__INSOValidateReceipt_objc_msgSend) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction006, 452, 143, 16))
#define INSOValidateReceipt_OpenSSL_add_all_digests_00E000A3 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction009, 163, 65, 32))
#define INSOValidateReceipt_OpenSSL_add_all_digests_01CE00F5 ((__INSOValidateReceipt_OpenSSL_add_all_digests) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction006, 245, 113, 32))
#define INSOValidateReceipt_PKCS7_free_01CE0037 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00B, 55, 221, 16))
#define INSOValidateReceipt_PKCS7_free_01CE01B6 ((__INSOValidateReceipt_PKCS7_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction006, 438, 175, 16))
#define INSOValidateReceipt_PKCS7_get0_signers_01CE00E3 ((__INSOValidateReceipt_PKCS7_get0_signers) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction007, 227, 57, 19))
#define INSOValidateReceipt_PKCS7_verify_011C0071 ((__INSOValidateReceipt_PKCS7_verify) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00C, 113, 118, 16))
#define INSOValidateReceipt_sel_registerName_00DE0026 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction00A, 38, 202, 17))
#define INSOValidateReceipt_sel_registerName_00DE01B4 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 222, 144, 23, INSOValidateReceipt_ObfuscationFunction004, 436, 124, 17))
#define INSOValidateReceipt_sel_registerName_018F0026 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction00A, 38, 202, 17))
#define INSOValidateReceipt_sel_registerName_018F00C8 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction00A, 200, 137, 17))
#define INSOValidateReceipt_sel_registerName_018F01B4 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 399, 67, 23, INSOValidateReceipt_ObfuscationFunction004, 436, 124, 17))
#define INSOValidateReceipt_sel_registerName_01910026 ((__INSOValidateReceipt_sel_registerName) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00A, 401, 247, 23, INSOValidateReceipt_ObfuscationFunction00A, 38, 202, 17))
#define INSOValidateReceipt_setjmp_015A0048 ((__INSOValidateReceipt_setjmp) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 346, 36, 33, INSOValidateReceipt_ObfuscationFunction008, 72, 216, 16))
#define INSOValidateReceipt_SHA1_01CE0070 ((__INSOValidateReceipt_SHA1) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction008, 112, 107, 16))
#define INSOValidateReceipt_SHA1_Final_011C0054 ((__INSOValidateReceipt_SHA1_Final) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction009, 84, 36, 16))
#define INSOValidateReceipt_SHA1_Init_011C0019 ((__INSOValidateReceipt_SHA1_Init) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction005, 25, 44, 16))
#define INSOValidateReceipt_SHA1_Update_00E00074 ((__INSOValidateReceipt_SHA1_Update) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction006, 116, 9, 16))
#define INSOValidateReceipt_sk_free_01CE0063 ((__INSOValidateReceipt_sk_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction00C, 99, 24, 16))
#define INSOValidateReceipt_sk_num_01CE0160 ((__INSOValidateReceipt_sk_num) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction006, 352, 191, 16))
#define INSOValidateReceipt_sk_value_00E001B0 ((__INSOValidateReceipt_sk_value) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction00A, 432, 64, 16))
#define INSOValidateReceipt_X509_digest_011C0036 ((__INSOValidateReceipt_X509_digest) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction003, 54, 37, 16))
#define INSOValidateReceipt_X509_free_011C0140 ((__INSOValidateReceipt_X509_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00B, 320, 232, 16))
#define INSOValidateReceipt_X509_get_ext_by_OBJ_011C011A ((__INSOValidateReceipt_X509_get_ext_by_OBJ) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction005, 282, 78, 20))
#define INSOValidateReceipt_X509_NAME_get_text_by_NID_011C010F ((__INSOValidateReceipt_X509_NAME_get_text_by_NID) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00C, 271, 129, 34))
#define INSOValidateReceipt_X509_STORE_add_cert_011C0161 ((__INSOValidateReceipt_X509_STORE_add_cert) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction00B, 284, 132, 16, INSOValidateReceipt_ObfuscationFunction00B, 353, 100, 20))
#define INSOValidateReceipt_X509_STORE_free_00E00146 ((__INSOValidateReceipt_X509_STORE_free) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction006, 224, 77, 16, INSOValidateReceipt_ObfuscationFunction00A, 326, 235, 16))
#define INSOValidateReceipt_X509_STORE_new_01CE0152 ((__INSOValidateReceipt_X509_STORE_new) INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_ObfuscationFunction009, 462, 43, 16, INSOValidateReceipt_ObfuscationFunction005, 338, 190, 16))
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction003(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction003CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction003(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Rot)
    inline static void INSOValidateReceipt_ObfuscationFunction004(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] - INSOValidateReceipt_p3); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction004CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction004(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[254])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction005(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction005CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction005(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[122])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor1)
    inline static void INSOValidateReceipt_ObfuscationFunction006(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (char) INSOValidateReceipt_p3; INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction006CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction006(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[100])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction007(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction007CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction007(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[368])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor2)
    inline static void INSOValidateReceipt_ObfuscationFunction008(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ INSOValidateReceipt_p3 ^ INSOValidateReceipt_p4); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction008CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction008(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[100])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction009(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction009CF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction009(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor3)
    inline static void INSOValidateReceipt_ObfuscationFunction00A(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 + INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00ACF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00A(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[100])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00B(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00BCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        char *INSOValidateReceipt_tmp2 = INSOValidateReceipt_tmp1;
        INSOValidateReceipt_ObfuscationFunction00B(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        while(*INSOValidateReceipt_tmp2) { INSOValidateReceipt_tmp2++; }
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_tmp1, (CFIndex) (INSOValidateReceipt_tmp2 - INSOValidateReceipt_tmp1), kCFStringEncodingUTF8, false);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock ObfuscationFunction / M(Xor4)
    inline static void INSOValidateReceipt_ObfuscationFunction00C(const char *INSOValidateReceipt_p1, char *INSOValidateReceipt_p2, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        int INSOValidateReceipt_i1 = 0;
        while(INSOValidateReceipt_i1 < INSOValidateReceipt_p4) { INSOValidateReceipt_p2[INSOValidateReceipt_i1] = (char) (INSOValidateReceipt_p1[INSOValidateReceipt_i1] ^ (INSOValidateReceipt_p3 * INSOValidateReceipt_p4)); INSOValidateReceipt_i1++; }
    }
    
    __RETURN_RETAINED inline static CFStringRef INSOValidateReceipt_ObfuscationFunction00CCF(const char *INSOValidateReceipt_p1, int INSOValidateReceipt_p3, int INSOValidateReceipt_p4) {
        char INSOValidateReceipt_tmp1[483];
        INSOValidateReceipt_ObfuscationFunction00C(INSOValidateReceipt_p1, INSOValidateReceipt_tmp1, INSOValidateReceipt_p3, INSOValidateReceipt_p4);
        CFStringRef INSOValidateReceipt_str1 = ((__INSOValidateReceipt_CFStringCreateWithCString) INSOValidateReceipt_Pointers[100])(NULL, INSOValidateReceipt_tmp1, kCFStringEncodingUTF8);
        return INSOValidateReceipt_str1;
    }
    
    
    // CodeBlock LookupFunction
    inline static void *INSOValidateReceipt_LookupFunction015(INSOValidateReceipt_decrypt INSOValidateReceipt_func1, int INSOValidateReceipt_index1, int INSOValidateReceipt_val1, int INSOValidateReceipt_len1, INSOValidateReceipt_decrypt INSOValidateReceipt_func2, int INSOValidateReceipt_index2, int INSOValidateReceipt_val2, int INSOValidateReceipt_len2) {
        char INSOValidateReceipt_tmp1[483], INSOValidateReceipt_tmp2[483];
        // Load the library if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] == NULL) {
            INSOValidateReceipt_func1(INSOValidateReceipt_Strings[INSOValidateReceipt_index1], INSOValidateReceipt_tmp1, INSOValidateReceipt_val1, INSOValidateReceipt_len1);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index1] = ((__INSOValidateReceipt_dlopen) INSOValidateReceipt_Pointers[76])(INSOValidateReceipt_tmp1, RTLD_NOW | RTLD_FIRST);
        }
        // Load the function if needed
        if (INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] == NULL) {
            INSOValidateReceipt_func2(INSOValidateReceipt_Strings[INSOValidateReceipt_index2], INSOValidateReceipt_tmp2, INSOValidateReceipt_val2, INSOValidateReceipt_len2);
            INSOValidateReceipt_Pointers[INSOValidateReceipt_index2] = ((__INSOValidateReceipt_dlsym) INSOValidateReceipt_Pointers[473])(INSOValidateReceipt_Pointers[INSOValidateReceipt_index1], INSOValidateReceipt_tmp2);
        }
        return INSOValidateReceipt_Pointers[INSOValidateReceipt_index2];
    }
    
    
    
    
    // CodeBlock GetMainBundle
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetMainBundle016(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle");
        // Retrieve the main bundle
        INSOValidateReceipt_ctx->main_bundle = INSOValidateReceipt_CFBundleGetMainBundle_00BA0100();
        if (!INSOValidateReceipt_ctx->main_bundle) {
            // Dead code
            INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_ctx->main_bundle);
            INSOValidateReceipt_CFBundleUnloadExecutable_00BA0097((CFBundleRef) INSOValidateReceipt_ctx->main_bundle);
        }
        // Global variables computation
        // Set to 294
        INSOValidateReceipt_OWQDOMHQWMFA = 294;
        // Set to 385
        INSOValidateReceipt_SRTQPOPBXFUT = 385;
        // Set to 285
        INSOValidateReceipt_QIFQNVQRGQSG = 285;
        // Set to 140
        INSOValidateReceipt_JEXXRJDKKNCL = 140;
        // Set to 180
        INSOValidateReceipt_RJPACSZPSGIZ = 180;
        // Set to 214
        INSOValidateReceipt_QZUZRTTZYTGG = 214;
    }
#else
#define INSOValidateReceipt_GetMainBundle016(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Retrieving main bundle"); \
INSOValidateReceipt_ctx->main_bundle = INSOValidateReceipt_CFBundleGetMainBundle_00BA0100(); \
if (!INSOValidateReceipt_ctx->main_bundle) { \
INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_ctx->main_bundle); \
INSOValidateReceipt_CFBundleUnloadExecutable_00BA0097((CFBundleRef) INSOValidateReceipt_ctx->main_bundle); \
} \
INSOValidateReceipt_OWQDOMHQWMFA = 294; \
INSOValidateReceipt_SRTQPOPBXFUT = 385; \
INSOValidateReceipt_QIFQNVQRGQSG = 285; \
INSOValidateReceipt_JEXXRJDKKNCL = 140; \
INSOValidateReceipt_RJPACSZPSGIZ = 180; \
INSOValidateReceipt_QZUZRTTZYTGG = 214; \
}
#endif
    
    
    // CodeBlock LoadReceipt
#ifdef DEBUG
    inline static void INSOValidateReceipt_LoadReceipt040(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle;
        CFURLRef INSOValidateReceipt_url1;
        CFReadStreamRef INSOValidateReceipt_stream;
        CFMutableDataRef INSOValidateReceipt_data;
        CFIndex INSOValidateReceipt_count;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3;
        uint8_t INSOValidateReceipt_buffer[483];
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt");
        // Get NSBundle class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[187]), INSOValidateReceipt_str1_, 167, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_lookUpClass_019100FC(INSOValidateReceipt_str1);
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[59]), INSOValidateReceipt_str2_, 102, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_018F01B4(INSOValidateReceipt_str2);
        INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2);
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[336]), INSOValidateReceipt_str3_, 116, 19);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_018F01B4(INSOValidateReceipt_str3);
        INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3));
        // Create a stream from the receipt file
        INSOValidateReceipt_stream = INSOValidateReceipt_OWQDOMHQWMFA_00BA0126(kCFAllocatorDefault, INSOValidateReceipt_url1);
        if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_QIFQNVQRGQSG_00E2011D(INSOValidateReceipt_stream)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_015A0041(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_url1);
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1);
            goto INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail;
        }
        // Create the data object that will contains receipt data
        INSOValidateReceipt_data = INSOValidateReceipt_JEXXRJDKKNCL_00E2008C(kCFAllocatorDefault, 0);
        // Read the receipt by chunks
        do {
            INSOValidateReceipt_count = INSOValidateReceipt_QZUZRTTZYTGG_00BA00D6(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483);
            if (INSOValidateReceipt_count > 0) {
                INSOValidateReceipt_SRTQPOPBXFUT_00E20181(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count);
            }
        } while (INSOValidateReceipt_count > 0);
        // Close the stream
        INSOValidateReceipt_RJPACSZPSGIZ_00E200B4(INSOValidateReceipt_stream);
        if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_ctx->receipt_data);
        INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data;
        // Global variables computation
        // From 180 to 251
        INSOValidateReceipt_RJPACSZPSGIZ -= 97; INSOValidateReceipt_RJPACSZPSGIZ *= 3; INSOValidateReceipt_RJPACSZPSGIZ += 2;
    INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_stream);
    }
#else
#define INSOValidateReceipt_LoadReceipt040(INSOValidateReceipt_ctx) { \
id INSOValidateReceipt_bundleClass, INSOValidateReceipt_bundle; \
CFURLRef INSOValidateReceipt_url1; \
CFReadStreamRef INSOValidateReceipt_stream; \
CFMutableDataRef INSOValidateReceipt_data; \
CFIndex INSOValidateReceipt_count; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3; \
uint8_t INSOValidateReceipt_buffer[483]; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Loading receipt"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[187]), INSOValidateReceipt_str1_, 167, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_bundleClass = INSOValidateReceipt_objc_lookUpClass_019100FC(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[59]), INSOValidateReceipt_str2_, 102, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_018F01B4(INSOValidateReceipt_str2); \
INSOValidateReceipt_bundle = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundleClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction007((INSOValidateReceipt_Strings[336]), INSOValidateReceipt_str3_, 116, 19); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_018F01B4(INSOValidateReceipt_str3); \
INSOValidateReceipt_url1 = __SAFE_CAST(CFURLRef, ((NSURL *(*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_bundle, INSOValidateReceipt_sel3)); \
INSOValidateReceipt_stream = INSOValidateReceipt_OWQDOMHQWMFA_00BA0126(kCFAllocatorDefault, INSOValidateReceipt_url1); \
if (INSOValidateReceipt_stream == NULL || !INSOValidateReceipt_QIFQNVQRGQSG_00E2011D(INSOValidateReceipt_stream)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Error while opening receipt"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_015A0041(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_url1); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1); \
goto INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_data = INSOValidateReceipt_JEXXRJDKKNCL_00E2008C(kCFAllocatorDefault, 0); \
do { \
INSOValidateReceipt_count = INSOValidateReceipt_QZUZRTTZYTGG_00BA00D6(INSOValidateReceipt_stream, &INSOValidateReceipt_buffer[0], 483); \
if (INSOValidateReceipt_count > 0) { \
INSOValidateReceipt_SRTQPOPBXFUT_00E20181(INSOValidateReceipt_data, INSOValidateReceipt_buffer, INSOValidateReceipt_count); \
} \
} while (INSOValidateReceipt_count > 0); \
INSOValidateReceipt_RJPACSZPSGIZ_00E200B4(INSOValidateReceipt_stream); \
if (INSOValidateReceipt_ctx->receipt_data) INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = INSOValidateReceipt_data; \
INSOValidateReceipt_RJPACSZPSGIZ -= 97; INSOValidateReceipt_RJPACSZPSGIZ *= 3; INSOValidateReceipt_RJPACSZPSGIZ += 2;  \
INSOValidateReceipt_LoadReceipt040_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_stream) INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_stream);     \
}
#endif
    
    
    // CodeBlock GetGUID
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        Class INSOValidateReceipt_deviceClass;
        id INSOValidateReceipt_device, INSOValidateReceipt_identifier;
        char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4;
        SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4;
        uuid_t INSOValidateReceipt_uuid;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier");
        // Get the UIDevice class
        char INSOValidateReceipt_str1_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[101]), INSOValidateReceipt_str1_, 143, 16);
        INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
        INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_019100FC(INSOValidateReceipt_str1);
        // Call [UIDevice currentDevice]
        char INSOValidateReceipt_str2_[483];
        INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[6]), INSOValidateReceipt_str2_, 154, 16);
        INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
        INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str2);
        INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2);
        // Call [device identifierForVendor]
        char INSOValidateReceipt_str3_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[202]), INSOValidateReceipt_str3_, 42, 20);
        INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
        INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str3);
        INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3);
        // Call [identifier getUUIDBytes:INSOValidateReceipt_uuid]
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[166]), INSOValidateReceipt_str4_, 200, 16);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str4);
        ((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid);
        if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_ctx->guid_data);
        volatile int INSOValidateReceipt_size = 5; INSOValidateReceipt_size -= 2; INSOValidateReceipt_size *= 5; INSOValidateReceipt_size += 1;
        INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_RJPACSZPSGIZ_00E200FB(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size);
        // Global variables computation
        // From 294 to 57
        INSOValidateReceipt_OWQDOMHQWMFA += 105; INSOValidateReceipt_OWQDOMHQWMFA /= 7;
        // Set to 269
        INSOValidateReceipt_QIFQNVQRGQSG = 269;
        // Set to 45
        INSOValidateReceipt_QZUZRTTZYTGG = 45;
    }
#else
#define INSOValidateReceipt_GetGUID04D(INSOValidateReceipt_ctx) { \
Class INSOValidateReceipt_deviceClass; \
id INSOValidateReceipt_device, INSOValidateReceipt_identifier; \
char *INSOValidateReceipt_str1, *INSOValidateReceipt_str2, *INSOValidateReceipt_str3, *INSOValidateReceipt_str4; \
SEL INSOValidateReceipt_sel2, INSOValidateReceipt_sel3, INSOValidateReceipt_sel4; \
uuid_t INSOValidateReceipt_uuid; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Getting device identifier"); \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[101]), INSOValidateReceipt_str1_, 143, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
INSOValidateReceipt_deviceClass = INSOValidateReceipt_objc_lookUpClass_019100FC(INSOValidateReceipt_str1); \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction005((INSOValidateReceipt_Strings[6]), INSOValidateReceipt_str2_, 154, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
INSOValidateReceipt_sel2 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str2); \
INSOValidateReceipt_device =  ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_deviceClass, INSOValidateReceipt_sel2); \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[202]), INSOValidateReceipt_str3_, 42, 20); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
INSOValidateReceipt_sel3 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str3); \
INSOValidateReceipt_identifier = ((id (*)(id, SEL)) objc_msgSend)(INSOValidateReceipt_device, INSOValidateReceipt_sel3); \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction003((INSOValidateReceipt_Strings[166]), INSOValidateReceipt_str4_, 200, 16); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_sel4 = INSOValidateReceipt_sel_registerName_00DE01B4(INSOValidateReceipt_str4); \
((void (*)(id, SEL, uuid_t)) objc_msgSend)(INSOValidateReceipt_identifier, INSOValidateReceipt_sel4, INSOValidateReceipt_uuid); \
if (INSOValidateReceipt_ctx->guid_data) INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_ctx->guid_data); \
volatile int INSOValidateReceipt_size = 5; INSOValidateReceipt_size -= 2; INSOValidateReceipt_size *= 5; INSOValidateReceipt_size += 1;  \
INSOValidateReceipt_ctx->guid_data = INSOValidateReceipt_RJPACSZPSGIZ_00E200FB(NULL, (const UInt8 *) INSOValidateReceipt_uuid, (CFIndex) INSOValidateReceipt_size); \
INSOValidateReceipt_OWQDOMHQWMFA += 105; INSOValidateReceipt_OWQDOMHQWMFA /= 7;  \
INSOValidateReceipt_QIFQNVQRGQSG = 269; \
INSOValidateReceipt_QZUZRTTZYTGG = 45; \
}
#endif
    
    
    // CodeBlock CheckBundleIdentifier
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleIdentifier05C(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[155]), 108, 49);
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier");
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QIFQNVQRGQSG_00E2010D((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, *INSOValidateReceipt_kCFBundleIdentifierKey_009800EA);
        if (INSOValidateReceipt_QZUZRTTZYTGG_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_015A019E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 57 to 480
        INSOValidateReceipt_OWQDOMHQWMFA -= 9; INSOValidateReceipt_OWQDOMHQWMFA *= 10;
        // Set to 83
        INSOValidateReceipt_EZQRFSDNDPKQ = 83;
        INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleIdentifier05C(INSOValidateReceipt_ctx) { \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[155]), 108, 49); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle identifier"); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_QIFQNVQRGQSG_00E2010D((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, *INSOValidateReceipt_kCFBundleIdentifierKey_009800EA); \
if (INSOValidateReceipt_QZUZRTTZYTGG_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_015A019E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_OWQDOMHQWMFA -= 9; INSOValidateReceipt_OWQDOMHQWMFA *= 10;  \
INSOValidateReceipt_EZQRFSDNDPKQ = 83; \
INSOValidateReceipt_CFRelease_00E200BD(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock CheckBundleVersion
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckBundleVersion061(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version");
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16);
        CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[4]), 6, 16);
        CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_OWQDOMHQWMFA_009801E0((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2);
        if (INSOValidateReceipt_EZQRFSDNDPKQ_00980053(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_015A0105(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2);
            INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2);
        }
        // Global variables computation
        // Set to 172
        INSOValidateReceipt_BJGLKTVBBWHP = 172;
        // From 480 to 175
        INSOValidateReceipt_OWQDOMHQWMFA += 220; INSOValidateReceipt_OWQDOMHQWMFA /= 4;
        // From 385 to 103
        INSOValidateReceipt_SRTQPOPBXFUT += 130; INSOValidateReceipt_SRTQPOPBXFUT /= 5;
        // From 269 to 349
        INSOValidateReceipt_QIFQNVQRGQSG -= 153; INSOValidateReceipt_QIFQNVQRGQSG *= 3; INSOValidateReceipt_QIFQNVQRGQSG += 1;
        // From 140 to 42
        INSOValidateReceipt_JEXXRJDKKNCL += 70; INSOValidateReceipt_JEXXRJDKKNCL /= 5;
        // From 251 to 127
        INSOValidateReceipt_RJPACSZPSGIZ += 130; INSOValidateReceipt_RJPACSZPSGIZ /= 3;
        // From 45 to 243
        INSOValidateReceipt_QZUZRTTZYTGG -= 11; INSOValidateReceipt_QZUZRTTZYTGG *= 7; INSOValidateReceipt_QZUZRTTZYTGG += 5;
        // From 83 to 292
        INSOValidateReceipt_EZQRFSDNDPKQ -= 25; INSOValidateReceipt_EZQRFSDNDPKQ *= 5; INSOValidateReceipt_EZQRFSDNDPKQ += 2;
        INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2);
        INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckBundleVersion061(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking bundle version"); \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16); \
CFStringRef INSOValidateReceipt_str2 = INSOValidateReceipt_ObfuscationFunction004CF((INSOValidateReceipt_Strings[4]), 6, 16); \
CFStringRef INSOValidateReceipt_str3 = (CFStringRef) INSOValidateReceipt_OWQDOMHQWMFA_009801E0((CFBundleRef) INSOValidateReceipt_ctx->main_bundle, INSOValidateReceipt_str2); \
if (INSOValidateReceipt_EZQRFSDNDPKQ_00980053(INSOValidateReceipt_str1, INSOValidateReceipt_str3, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Bundle version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str3, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_015A0105(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2); \
} \
INSOValidateReceipt_BJGLKTVBBWHP = 172; \
INSOValidateReceipt_OWQDOMHQWMFA += 220; INSOValidateReceipt_OWQDOMHQWMFA /= 4;  \
INSOValidateReceipt_SRTQPOPBXFUT += 130; INSOValidateReceipt_SRTQPOPBXFUT /= 5;  \
INSOValidateReceipt_QIFQNVQRGQSG -= 153; INSOValidateReceipt_QIFQNVQRGQSG *= 3; INSOValidateReceipt_QIFQNVQRGQSG += 1;  \
INSOValidateReceipt_JEXXRJDKKNCL += 70; INSOValidateReceipt_JEXXRJDKKNCL /= 5;  \
INSOValidateReceipt_RJPACSZPSGIZ += 130; INSOValidateReceipt_RJPACSZPSGIZ /= 3;  \
INSOValidateReceipt_QZUZRTTZYTGG -= 11; INSOValidateReceipt_QZUZRTTZYTGG *= 7; INSOValidateReceipt_QZUZRTTZYTGG += 5;  \
INSOValidateReceipt_EZQRFSDNDPKQ -= 25; INSOValidateReceipt_EZQRFSDNDPKQ *= 5; INSOValidateReceipt_EZQRFSDNDPKQ += 2;  \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str2); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_str1); \
}
#endif
    
    
    // CodeBlock GetReceiptInformation
#ifdef DEBUG
    inline static void INSOValidateReceipt_GetReceiptInformation064(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context;
        INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context;
        CFNumberRef INSOValidateReceipt_key;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2;
        int INSOValidateReceipt_type;
        int INSOValidateReceipt_xclass;
        long INSOValidateReceipt_length;
        CFDateFormatterRef INSOValidateReceipt_formatter = NULL;
        CFTimeZoneRef INSOValidateReceipt_tz = NULL;
        BIO *INSOValidateReceipt_bio_p7;
        PKCS7 *INSOValidateReceipt_pkcs7;
        ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content;
        ASN1_INTEGER *INSOValidateReceipt_value;
        const unsigned char *INSOValidateReceipt_seq_end;
        long INSOValidateReceipt_attr_type;
        long INSOValidateReceipt_attr_version;
        int INSOValidateReceipt_str_type;
        long INSOValidateReceipt_str_length;
        const unsigned char *INSOValidateReceipt_str_ptr;
        INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context;
        long INSOValidateReceipt_number;
        int INSOValidateReceipt_num_type;
        long INSOValidateReceipt_num_length;
        const unsigned char *INSOValidateReceipt_num_ptr;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01CE0086(INSOValidateReceipt_BIO_s_mem_011C00AD());
        INSOValidateReceipt_BIO_write_011C00C7(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_OWQDOMHQWMFA_00BA00AF((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_QIFQNVQRGQSG_00BA015D((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_01CE004A(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_ctx->receipt_data = NULL;
            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
        }
        // Create a formatter to parse ISO-3339 dates
        INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_0098010B(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
        INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[181]), 28, 33);
        INSOValidateReceipt_RJPACSZPSGIZ_00BA007F(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1);
        INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1);
        INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00BA0038(NULL, 0.0);
        INSOValidateReceipt_CFDateFormatterSetProperty_009800B3(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00BA0193, INSOValidateReceipt_tz);
        INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_tz);
        // Initial context
        INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data;
        INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data;
        INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length;
        INSOValidateReceipt_receipt_context.parent = NULL;
        INSOValidateReceipt_receipt_context.dictionary = NULL;
        INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context;
        while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
            if (!INSOValidateReceipt_current_context->dictionary) {
                // Create the target dictionary
                INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_QZUZRTTZYTGG_00BA00F3(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00E2007D, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00BA0018);
                // Decode payload from ASN.1
                INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SET) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                }
            }
            // Iterate over attributes
            while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) {
                // Parse attribute sequence
                INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length;
                INSOValidateReceipt_attr_type = 0;
                INSOValidateReceipt_attr_version = 0;
                // Parse the attribute type
                INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value);
                // Parse the attribute version
                INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_INTEGER) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length);
                INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value);
                INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value);
                // Check the attribute value
                INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr);
                if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) {
                    __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                    INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                    goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                }
                INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1));
                INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1) + 1);
                INSOValidateReceipt_value1 = NULL;
                INSOValidateReceipt_value2 = NULL;
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type);
                switch (INSOValidateReceipt_attr_type) {
                        // Attributes encoded as ASN.1 UTF8STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleId:
                    case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion:
                    case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion:
                    case INSOValidateReceipt_InAppAttributeTypeProductIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false);
                        INSOValidateReceipt_value2 = INSOValidateReceipt_CFDataCreate_0098019A(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 IA5STRING
                    case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate:
                    case INSOValidateReceipt_InAppAttributeTypeCancellationDate:
                    case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypePurchaseDate:
                    case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate:
                    {
                        INSOValidateReceipt_str_type = 0;
                        INSOValidateReceipt_str_length = 0;
                        INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr);
                        if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_00BA017E(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding()));
                        break;
                    }
                        // Attributes encoded as ASN.1 INTEGER
                    case INSOValidateReceipt_InAppAttributeTypeQuantity:
                    case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId:
                    {
                        INSOValidateReceipt_num_type = 0;
                        INSOValidateReceipt_num_length = 0;
                        INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr);
                        if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) {
                            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                            INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1);
                            goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail;
                        }
                        INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length);
                        INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value);
                        INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value);
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberLongType, &INSOValidateReceipt_number);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number);
                        break;
                    }
                        // Attributes encoded as ASN.1 OCTETSTRING
                    case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue:
                    case INSOValidateReceipt_ReceiptAttributeTypeHash:
                    {
                        INSOValidateReceipt_value1 = INSOValidateReceipt_CFDataCreate_0098019A(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length);
                        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_QIFQNVQRGQSG_00BA015D((CFDataRef) INSOValidateReceipt_value1));
                        break;
                    }
                        // Attributes encoded as ASN.1 SET
                    case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase:
                    {
                        // Push a child context to parse InApp purchase
                        INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr;
                        INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length;
                        INSOValidateReceipt_inapp_context.dictionary = NULL;
                        INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context;
                        INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context;
                        goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_key;
                    }
                    default:
                        break;
                }
                if (INSOValidateReceipt_value1) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                    INSOValidateReceipt_CFDictionaryAddValue_00E2000D((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1);
                }
                if (INSOValidateReceipt_value2) {
                    INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFDictionaryAddValue_00E2000D((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2);
                    INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key);
                    INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value2);
                }
                // Move past the attribute
                INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length;
            }
        INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_key:
            // If the current context is a new one, continue parsing
            if (!INSOValidateReceipt_current_context->dictionary) {
                continue;
            }
            // If the current context has a parent, pop it.
            if (INSOValidateReceipt_current_context->parent) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase");
                INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
                INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key1);
                INSOValidateReceipt_value1 = INSOValidateReceipt_JEXXRJDKKNCL_00E2002A((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key);
                if (!INSOValidateReceipt_value1) {
                    INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_00E20176(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_00BA011E);
                    INSOValidateReceipt_EZQRFSDNDPKQ_00BA0124((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1);
                    INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1);
                }
                INSOValidateReceipt_BJGLKTVBBWHP_00BA00AC((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_current_context->dictionary);
                INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key);
                // Switch to parent context
                INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent;
                // Move past the child context
                INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end;
            }
        }
        if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_ctx->receipt_dict);
        INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary;
        // Global variables computation
        // From 175 to 349
        INSOValidateReceipt_OWQDOMHQWMFA -= 59; INSOValidateReceipt_OWQDOMHQWMFA *= 3; INSOValidateReceipt_OWQDOMHQWMFA += 1;
        // Set to 128
        INSOValidateReceipt_QIFQNVQRGQSG = 128;
    INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01CE01B6(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_011C00E7(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_formatter);
    }
#else
#define INSOValidateReceipt_GetReceiptInformation064(INSOValidateReceipt_ctx) { \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_receipt_context; \
INSOValidateReceipt_ParsingContext *INSOValidateReceipt_current_context; \
CFNumberRef INSOValidateReceipt_key; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
CFTypeRef INSOValidateReceipt_value1, INSOValidateReceipt_value2; \
int INSOValidateReceipt_type; \
int INSOValidateReceipt_xclass; \
long INSOValidateReceipt_length; \
CFDateFormatterRef INSOValidateReceipt_formatter = NULL; \
CFTimeZoneRef INSOValidateReceipt_tz = NULL; \
BIO *INSOValidateReceipt_bio_p7; \
PKCS7 *INSOValidateReceipt_pkcs7; \
ASN1_OCTET_STRING *INSOValidateReceipt_contentINSOValidateReceipt_content; \
ASN1_INTEGER *INSOValidateReceipt_value; \
const unsigned char *INSOValidateReceipt_seq_end; \
long INSOValidateReceipt_attr_type; \
long INSOValidateReceipt_attr_version; \
int INSOValidateReceipt_str_type; \
long INSOValidateReceipt_str_length; \
const unsigned char *INSOValidateReceipt_str_ptr; \
INSOValidateReceipt_ParsingContext INSOValidateReceipt_inapp_context; \
long INSOValidateReceipt_number; \
int INSOValidateReceipt_num_type; \
long INSOValidateReceipt_num_length; \
const unsigned char *INSOValidateReceipt_num_ptr; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_01CE0086(INSOValidateReceipt_BIO_s_mem_011C00AD()); \
INSOValidateReceipt_BIO_write_011C00C7(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_OWQDOMHQWMFA_00BA00AF((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_QIFQNVQRGQSG_00BA015D((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_01CE004A(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_formatter = INSOValidateReceipt_CFDateFormatterCreate_0098010B(NULL, NULL, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle); \
INSOValidateReceipt_value1 = INSOValidateReceipt_ObfuscationFunction009CF((INSOValidateReceipt_Strings[181]), 28, 33); \
INSOValidateReceipt_RJPACSZPSGIZ_00BA007F(INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1); \
INSOValidateReceipt_tz = INSOValidateReceipt_CFTimeZoneCreateWithTimeIntervalFromGMT_00BA0038(NULL, 0.0); \
INSOValidateReceipt_CFDateFormatterSetProperty_009800B3(INSOValidateReceipt_formatter, *INSOValidateReceipt_kCFDateFormatterTimeZone_00BA0193, INSOValidateReceipt_tz); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_tz); \
INSOValidateReceipt_contentINSOValidateReceipt_content = INSOValidateReceipt_pkcs7->d.sign->contents->d.data; \
INSOValidateReceipt_receipt_context.ptr = INSOValidateReceipt_contentINSOValidateReceipt_content->data; \
INSOValidateReceipt_receipt_context.end = INSOValidateReceipt_receipt_context.ptr + INSOValidateReceipt_contentINSOValidateReceipt_content->length; \
INSOValidateReceipt_receipt_context.parent = NULL; \
INSOValidateReceipt_receipt_context.dictionary = NULL; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_receipt_context; \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
if (!INSOValidateReceipt_current_context->dictionary) { \
INSOValidateReceipt_current_context->dictionary = INSOValidateReceipt_QZUZRTTZYTGG_00BA00F3(kCFAllocatorDefault, (CFIndex) 483, INSOValidateReceipt_kCFTypeDictionaryKeyCallBacks_00E2007D, INSOValidateReceipt_kCFTypeDictionaryValueCallBacks_00BA0018); \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SET) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
} \
while(INSOValidateReceipt_current_context->ptr < INSOValidateReceipt_current_context->end) { \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_SEQUENCE) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_seq_end = INSOValidateReceipt_current_context->ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_attr_type = 0; \
INSOValidateReceipt_attr_version = 0; \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_type = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_current_context->ptr, INSOValidateReceipt_length); \
INSOValidateReceipt_attr_version = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_current_context->ptr, &INSOValidateReceipt_length, &INSOValidateReceipt_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_current_context->end - INSOValidateReceipt_current_context->ptr); \
if (INSOValidateReceipt_type != V_ASN1_OCTET_STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_key1 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1)); \
INSOValidateReceipt_key2 = (INSOValidateReceipt_ReceiptAttributeType) (INSOValidateReceipt_StoreNone + (INSOValidateReceipt_attr_type << 1) + 1); \
INSOValidateReceipt_value1 = NULL; \
INSOValidateReceipt_value2 = NULL; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Found attribute %s%ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type); \
switch (INSOValidateReceipt_attr_type) { \
case INSOValidateReceipt_ReceiptAttributeTypeBundleId: \
case INSOValidateReceipt_ReceiptAttributeTypeBundleVersion: \
case INSOValidateReceipt_ReceiptAttributeTypeOriginalApplicationVersion: \
case INSOValidateReceipt_InAppAttributeTypeProductIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeTransactionIdentifer: \
case INSOValidateReceipt_InAppAttributeTypeOriginalTransactionIdentifer: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_UTF8STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value1 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingUTF8, false); \
INSOValidateReceipt_value2 = INSOValidateReceipt_CFDataCreate_0098019A(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value1, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeExpirationDate: \
case INSOValidateReceipt_InAppAttributeTypeCancellationDate: \
case INSOValidateReceipt_InAppAttributeTypeOriginalPurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypePurchaseDate: \
case INSOValidateReceipt_InAppAttributeTypeSubscriptionExpirationDate: \
{ \
INSOValidateReceipt_str_type = 0; \
INSOValidateReceipt_str_length = 0; \
INSOValidateReceipt_str_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_str_ptr, &INSOValidateReceipt_str_length, &INSOValidateReceipt_str_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_str_ptr); \
if (INSOValidateReceipt_str_type != V_ASN1_IA5STRING) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value2 = ((__INSOValidateReceipt_CFStringCreateWithBytes) INSOValidateReceipt_Pointers[444])(NULL, (const UInt8 *) INSOValidateReceipt_str_ptr, (CFIndex) INSOValidateReceipt_str_length, kCFStringEncodingASCII, false); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDateFormatterCreateDateFromString_00BA017E(NULL, INSOValidateReceipt_formatter, (CFStringRef) INSOValidateReceipt_value2, NULL); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %s", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, CFStringGetCStringPtr((CFStringRef) INSOValidateReceipt_value2, CFStringGetSystemEncoding())); \
break; \
} \
case INSOValidateReceipt_InAppAttributeTypeQuantity: \
case INSOValidateReceipt_InAppAttributeTypeWebOrderLineItemId: \
{ \
INSOValidateReceipt_num_type = 0; \
INSOValidateReceipt_num_length = 0; \
INSOValidateReceipt_num_ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_ASN1_get_object_01CE016B(&INSOValidateReceipt_num_ptr, &INSOValidateReceipt_num_length, &INSOValidateReceipt_num_type, &INSOValidateReceipt_xclass, INSOValidateReceipt_seq_end - INSOValidateReceipt_num_ptr); \
if (INSOValidateReceipt_num_type != V_ASN1_INTEGER) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630041(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_value = INSOValidateReceipt_c2i_ASN1_INTEGER_01CE008B(NULL, &INSOValidateReceipt_num_ptr, INSOValidateReceipt_num_length); \
INSOValidateReceipt_number = INSOValidateReceipt_ASN1_INTEGER_get_01CE01B3(INSOValidateReceipt_value); \
INSOValidateReceipt_ASN1_INTEGER_free_011C01CA(INSOValidateReceipt_value); \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberLongType, &INSOValidateReceipt_number); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => %ld", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_number); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeOpaqueValue: \
case INSOValidateReceipt_ReceiptAttributeTypeHash: \
{ \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFDataCreate_0098019A(NULL, (const UInt8 *) INSOValidateReceipt_current_context->ptr, (CFIndex) INSOValidateReceipt_length); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt -       attribute %s%ld => [%lu bytes]", INSOValidateReceipt_current_context->parent ? "--- " : "- ", INSOValidateReceipt_attr_type, INSOValidateReceipt_QIFQNVQRGQSG_00BA015D((CFDataRef) INSOValidateReceipt_value1)); \
break; \
} \
case INSOValidateReceipt_ReceiptAttributeTypeInAppPurchase: \
{ \
INSOValidateReceipt_inapp_context.ptr = INSOValidateReceipt_current_context->ptr; \
INSOValidateReceipt_inapp_context.end = INSOValidateReceipt_inapp_context.ptr + INSOValidateReceipt_length; \
INSOValidateReceipt_inapp_context.dictionary = NULL; \
INSOValidateReceipt_inapp_context.parent = INSOValidateReceipt_current_context; \
INSOValidateReceipt_current_context = &INSOValidateReceipt_inapp_context; \
goto INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_key; \
} \
default: \
break; \
} \
if (INSOValidateReceipt_value1) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_CFDictionaryAddValue_00E2000D((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1); \
} \
if (INSOValidateReceipt_value2) { \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key2); \
INSOValidateReceipt_CFDictionaryAddValue_00E2000D((CFMutableDictionaryRef) INSOValidateReceipt_current_context->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value2); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value2); \
} \
INSOValidateReceipt_current_context->ptr += INSOValidateReceipt_length; \
} \
INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_key: \
if (!INSOValidateReceipt_current_context->dictionary) { \
continue; \
} \
if (INSOValidateReceipt_current_context->parent) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Parsing receipt - Add an InApp purchase"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
INSOValidateReceipt_key = INSOValidateReceipt_CFNumberCreate_00BA0134(NULL, kCFNumberIntType, &INSOValidateReceipt_key1); \
INSOValidateReceipt_value1 = INSOValidateReceipt_JEXXRJDKKNCL_00E2002A((CFDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key); \
if (!INSOValidateReceipt_value1) { \
INSOValidateReceipt_value1 = INSOValidateReceipt_CFArrayCreateMutable_00E20176(kCFAllocatorDefault, 0, INSOValidateReceipt_kCFTypeArrayCallBacks_00BA011E); \
INSOValidateReceipt_EZQRFSDNDPKQ_00BA0124((CFMutableDictionaryRef) INSOValidateReceipt_current_context->parent->dictionary, INSOValidateReceipt_key, INSOValidateReceipt_value1); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_value1); \
} \
INSOValidateReceipt_BJGLKTVBBWHP_00BA00AC((CFMutableArrayRef) INSOValidateReceipt_value1, INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_current_context->dictionary); \
INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_key); \
INSOValidateReceipt_current_context = INSOValidateReceipt_current_context->parent; \
INSOValidateReceipt_current_context->ptr = INSOValidateReceipt_inapp_context.end; \
} \
} \
if (INSOValidateReceipt_ctx->receipt_dict) INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = INSOValidateReceipt_receipt_context.dictionary; \
INSOValidateReceipt_OWQDOMHQWMFA -= 59; INSOValidateReceipt_OWQDOMHQWMFA *= 3; INSOValidateReceipt_OWQDOMHQWMFA += 1;  \
INSOValidateReceipt_QIFQNVQRGQSG = 128; \
INSOValidateReceipt_GetReceiptInformation064_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01CE01B6(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_011C00E7(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_formatter) INSOValidateReceipt_CFRelease_00E2010A(INSOValidateReceipt_formatter); \
}
#endif
    
    
    // CodeBlock CheckReceiptSignature
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptSignature06B(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        BIO *INSOValidateReceipt_bio_p7 = NULL;
        PKCS7 *INSOValidateReceipt_pkcs7 = NULL;
        STACK_OF(X509) *INSOValidateReceipt_certificates = NULL;
        X509 *INSOValidateReceipt_certificate = NULL;
        int INSOValidateReceipt_count, INSOValidateReceipt_index1;
        unsigned int INSOValidateReceipt_index2;
        ASN1_OBJECT *INSOValidateReceipt_oid = NULL;
        char *INSOValidateReceipt_str1;
        char *INSOValidateReceipt_str2;
        char *INSOValidateReceipt_str3;
        char *INSOValidateReceipt_str4;
        char *INSOValidateReceipt_str5;
        int INSOValidateReceipt_verify, INSOValidateReceipt_status;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature");
        // Put the receipt data into a memory buffer
        INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_011C01BD(INSOValidateReceipt_BIO_s_mem_011C0066());
        INSOValidateReceipt_BIO_write_01CE0043(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_QIFQNVQRGQSG_00E20080((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_OWQDOMHQWMFA_0098015D((CFDataRef) INSOValidateReceipt_ctx->receipt_data));
        INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00E0004A(INSOValidateReceipt_bio_p7, NULL);
        if (!INSOValidateReceipt_pkcs7) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        INSOValidateReceipt_OpenSSL_add_all_digests_01CE00F5();
        // Extract the certificates from the receipt.
        // One of them must be the Apple Root CA certificate with the correct fingerprint.
        INSOValidateReceipt_verify = 0;
        INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert;
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01CE0160((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00E001B0((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            char INSOValidateReceipt_common_name[483];
            // Check that the X509_NAME_get_text_by_NID function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_011C010F(NULL, NID_commonName, NULL, 0);
            if (INSOValidateReceipt_status > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
            }
            // Retrieve the common name
            INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_011C010F(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483);
            if (INSOValidateReceipt_status <= 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
            }
            volatile unsigned int INSOValidateReceipt_digest_length = 16; INSOValidateReceipt_digest_length -= 10; INSOValidateReceipt_digest_length *= 3; INSOValidateReceipt_digest_length += 2;
            char INSOValidateReceipt_str2_[483];
            INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[233]), INSOValidateReceipt_str2_, 120, 16);
            INSOValidateReceipt_str2 = INSOValidateReceipt_str2_;
            const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_011C01A8(INSOValidateReceipt_str2);
            unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE];
            unsigned int INSOValidateReceipt_len = 0;
            // Check that the X509_digest function is not tampered with
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_011C0036(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 1103;
            if (INSOValidateReceipt_status == 1103 || INSOValidateReceipt_len > 0) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
            }
            INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_011C0036(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 1103;
            if (INSOValidateReceipt_status != 1103 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
                goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
            }
            char INSOValidateReceipt_fingerprint[483];
            volatile unsigned int INSOValidateReceipt_increment = 2; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 3;
            for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) {
                snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]);
            }
            char INSOValidateReceipt_str3_[483];
            INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[257]), INSOValidateReceipt_str3_, 20, 68);
            INSOValidateReceipt_str3 = INSOValidateReceipt_str3_;
            // Check the common name and the fingerprint
            char INSOValidateReceipt_str1_[483];
            INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[300]), INSOValidateReceipt_str1_, 203, 16);
            INSOValidateReceipt_str1 = INSOValidateReceipt_str1_;
            volatile size_t INSOValidateReceipt_num = 5; INSOValidateReceipt_num -= 2; INSOValidateReceipt_num *= 4; INSOValidateReceipt_num += 1;
            if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[98])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[98])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) {
                INSOValidateReceipt_verify = 1103;
                break;
            }
        }
        // Check that the last selected certificate is right one.
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 1103) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        // Check that the X509_get_ext_by_OBJ function is not tampered with
        char INSOValidateReceipt_str4_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[356]), INSOValidateReceipt_str4_, 174, 34);
        INSOValidateReceipt_str4 = INSOValidateReceipt_str4_;
        INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_011C00EF(INSOValidateReceipt_str4, 0);
        INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_011C011A(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
        INSOValidateReceipt_ASN1_OBJECT_free_01CE0179(INSOValidateReceipt_oid);
        if (INSOValidateReceipt_verify >= 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        // Extract the signer certificate from the receipt
        // The certificate must have the extension OID "1.2.840.113635.100.6.11.1"
        char INSOValidateReceipt_str5_[483];
        INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[356]), INSOValidateReceipt_str5_, 174, 34);
        INSOValidateReceipt_str5 = INSOValidateReceipt_str5_;
        INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_01CE00E3(INSOValidateReceipt_pkcs7, NULL, 0);
        INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01CE0160((const _STACK *) INSOValidateReceipt_certificates);
        for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) {
            INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00E001B0((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1);
            INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_011C00EF(INSOValidateReceipt_str5, 0);
            INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_011C011A(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0);
            INSOValidateReceipt_ASN1_OBJECT_free_01CE0179(INSOValidateReceipt_oid);
            if (INSOValidateReceipt_verify == -1) {
                sk_X509_free (INSOValidateReceipt_certificates);
                INSOValidateReceipt_certificates = NULL;
                continue;
            } else {
                break;
            }
        }
        if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1);
            goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail;
        }
        // Global variables computation
        // From 172 to 29
        INSOValidateReceipt_BJGLKTVBBWHP += 31; INSOValidateReceipt_BJGLKTVBBWHP /= 7;
        // From 42 to 308
        INSOValidateReceipt_JEXXRJDKKNCL -= 8; INSOValidateReceipt_JEXXRJDKKNCL *= 9; INSOValidateReceipt_JEXXRJDKKNCL += 2;
        // From 127 to 45
        INSOValidateReceipt_RJPACSZPSGIZ += 53; INSOValidateReceipt_RJPACSZPSGIZ /= 4;
    INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail:
        if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00E00007(INSOValidateReceipt_bio_p7);
        if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01CE0037(INSOValidateReceipt_pkcs7);
        if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates);
    }
#else
#define INSOValidateReceipt_CheckReceiptSignature06B(INSOValidateReceipt_ctx) { \
BIO *INSOValidateReceipt_bio_p7 = NULL; \
PKCS7 *INSOValidateReceipt_pkcs7 = NULL; \
STACK_OF(X509) *INSOValidateReceipt_certificates = NULL; \
X509 *INSOValidateReceipt_certificate = NULL; \
int INSOValidateReceipt_count, INSOValidateReceipt_index1; \
unsigned int INSOValidateReceipt_index2; \
ASN1_OBJECT *INSOValidateReceipt_oid = NULL; \
char *INSOValidateReceipt_str1; \
char *INSOValidateReceipt_str2; \
char *INSOValidateReceipt_str3; \
char *INSOValidateReceipt_str4; \
char *INSOValidateReceipt_str5; \
int INSOValidateReceipt_verify, INSOValidateReceipt_status; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt signature"); \
INSOValidateReceipt_bio_p7 = INSOValidateReceipt_BIO_new_011C01BD(INSOValidateReceipt_BIO_s_mem_011C0066()); \
INSOValidateReceipt_BIO_write_01CE0043(INSOValidateReceipt_bio_p7, (void *) INSOValidateReceipt_QIFQNVQRGQSG_00E20080((CFDataRef) INSOValidateReceipt_ctx->receipt_data), (int) INSOValidateReceipt_OWQDOMHQWMFA_0098015D((CFDataRef) INSOValidateReceipt_ctx->receipt_data)); \
INSOValidateReceipt_pkcs7 = INSOValidateReceipt_d2i_PKCS7_bio_00E0004A(INSOValidateReceipt_bio_p7, NULL); \
if (!INSOValidateReceipt_pkcs7) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_signed(INSOValidateReceipt_pkcs7)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
if (!PKCS7_type_is_data(INSOValidateReceipt_pkcs7->d.sign->contents)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_OpenSSL_add_all_digests_01CE00F5(); \
INSOValidateReceipt_verify = 0; \
INSOValidateReceipt_certificates = INSOValidateReceipt_pkcs7->d.sign->cert; \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01CE0160((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00E001B0((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
char INSOValidateReceipt_common_name[483]; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_011C010F(NULL, NID_commonName, NULL, 0); \
if (INSOValidateReceipt_status > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_NAME_get_text_by_NID_011C010F(INSOValidateReceipt_certificate->cert_info->subject, NID_commonName, INSOValidateReceipt_common_name, 483); \
if (INSOValidateReceipt_status <= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
volatile unsigned int INSOValidateReceipt_digest_length = 16; INSOValidateReceipt_digest_length -= 10; INSOValidateReceipt_digest_length *= 3; INSOValidateReceipt_digest_length += 2;  \
char INSOValidateReceipt_str2_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[233]), INSOValidateReceipt_str2_, 120, 16); \
INSOValidateReceipt_str2 = INSOValidateReceipt_str2_; \
const EVP_MD *INSOValidateReceipt_digester = INSOValidateReceipt_EVP_get_digestbyname_011C01A8(INSOValidateReceipt_str2); \
unsigned char INSOValidateReceipt_digest[EVP_MAX_MD_SIZE]; \
unsigned int INSOValidateReceipt_len = 0; \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_011C0036(NULL, NULL, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 1103; \
if (INSOValidateReceipt_status == 1103 || INSOValidateReceipt_len > 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_status = INSOValidateReceipt_X509_digest_011C0036(INSOValidateReceipt_certificate, INSOValidateReceipt_digester, INSOValidateReceipt_digest, &INSOValidateReceipt_len) * 1103; \
if (INSOValidateReceipt_status != 1103 || INSOValidateReceipt_len != INSOValidateReceipt_digest_length) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_fingerprint[483]; \
volatile unsigned int INSOValidateReceipt_increment = 2; INSOValidateReceipt_increment -= 1; INSOValidateReceipt_increment *= 3;  \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_digest_length; INSOValidateReceipt_index2++) { \
snprintf(&INSOValidateReceipt_fingerprint[INSOValidateReceipt_index2 * INSOValidateReceipt_increment], INSOValidateReceipt_increment + 1, "%02X:", INSOValidateReceipt_digest[INSOValidateReceipt_index2]); \
} \
char INSOValidateReceipt_str3_[483]; \
INSOValidateReceipt_ObfuscationFunction009((INSOValidateReceipt_Strings[257]), INSOValidateReceipt_str3_, 20, 68); \
INSOValidateReceipt_str3 = INSOValidateReceipt_str3_; \
char INSOValidateReceipt_str1_[483]; \
INSOValidateReceipt_ObfuscationFunction004((INSOValidateReceipt_Strings[300]), INSOValidateReceipt_str1_, 203, 16); \
INSOValidateReceipt_str1 = INSOValidateReceipt_str1_; \
volatile size_t INSOValidateReceipt_num = 5; INSOValidateReceipt_num -= 2; INSOValidateReceipt_num *= 4; INSOValidateReceipt_num += 1;  \
if (((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[98])(INSOValidateReceipt_common_name, INSOValidateReceipt_str1, INSOValidateReceipt_num) == 0 && ((__INSOValidateReceipt_strncmp) INSOValidateReceipt_Pointers[98])(INSOValidateReceipt_fingerprint, INSOValidateReceipt_str3, INSOValidateReceipt_digest_length * INSOValidateReceipt_increment - 1) == 0) { \
INSOValidateReceipt_verify = 1103; \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify != 1103) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str4_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[356]), INSOValidateReceipt_str4_, 174, 34); \
INSOValidateReceipt_str4 = INSOValidateReceipt_str4_; \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_011C00EF(INSOValidateReceipt_str4, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_011C011A(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_01CE0179(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify >= 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
char INSOValidateReceipt_str5_[483]; \
INSOValidateReceipt_ObfuscationFunction006((INSOValidateReceipt_Strings[356]), INSOValidateReceipt_str5_, 174, 34); \
INSOValidateReceipt_str5 = INSOValidateReceipt_str5_; \
INSOValidateReceipt_certificates = INSOValidateReceipt_PKCS7_get0_signers_01CE00E3(INSOValidateReceipt_pkcs7, NULL, 0); \
INSOValidateReceipt_count = INSOValidateReceipt_sk_num_01CE0160((const _STACK *) INSOValidateReceipt_certificates); \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_count; INSOValidateReceipt_index1++) { \
INSOValidateReceipt_certificate = (X509 *) INSOValidateReceipt_sk_value_00E001B0((const _STACK *) INSOValidateReceipt_certificates, INSOValidateReceipt_index1); \
INSOValidateReceipt_oid = INSOValidateReceipt_OBJ_txt2obj_011C00EF(INSOValidateReceipt_str5, 0); \
INSOValidateReceipt_verify = INSOValidateReceipt_X509_get_ext_by_OBJ_011C011A(INSOValidateReceipt_certificate, INSOValidateReceipt_oid, 0); \
INSOValidateReceipt_ASN1_OBJECT_free_01CE0179(INSOValidateReceipt_oid); \
if (INSOValidateReceipt_verify == -1) { \
sk_X509_free (INSOValidateReceipt_certificates); \
INSOValidateReceipt_certificates = NULL; \
continue; \
} else { \
break; \
} \
} \
if (INSOValidateReceipt_certificate == NULL || INSOValidateReceipt_verify < 0) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01430105(INSOValidateReceipt_JumpBuf, 1); \
goto INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail; \
} \
INSOValidateReceipt_BJGLKTVBBWHP += 31; INSOValidateReceipt_BJGLKTVBBWHP /= 7;  \
INSOValidateReceipt_JEXXRJDKKNCL -= 8; INSOValidateReceipt_JEXXRJDKKNCL *= 9; INSOValidateReceipt_JEXXRJDKKNCL += 2;  \
INSOValidateReceipt_RJPACSZPSGIZ += 53; INSOValidateReceipt_RJPACSZPSGIZ /= 4;  \
INSOValidateReceipt_CheckReceiptSignature06B_INSOValidateReceipt_bail: \
if (INSOValidateReceipt_bio_p7) INSOValidateReceipt_BIO_free_00E00007(INSOValidateReceipt_bio_p7); \
if (INSOValidateReceipt_pkcs7) INSOValidateReceipt_PKCS7_free_01CE0037(INSOValidateReceipt_pkcs7); \
if (INSOValidateReceipt_certificates) sk_X509_free (INSOValidateReceipt_certificates); \
}
#endif
    
    
    // CodeBlock CheckReceiptIdentifier
#ifndef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[208]), 255, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JEXXRJDKKNCL_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_BJGLKTVBBWHP_0098001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key);
        if (INSOValidateReceipt_RJPACSZPSGIZ_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_0163019E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // From 349 to 45
        INSOValidateReceipt_OWQDOMHQWMFA += 56; INSOValidateReceipt_OWQDOMHQWMFA /= 9;
        // From 128 to 308
        INSOValidateReceipt_QIFQNVQRGQSG -= 51; INSOValidateReceipt_QIFQNVQRGQSG *= 4;
        // From 292 to 29
        INSOValidateReceipt_EZQRFSDNDPKQ += 56; INSOValidateReceipt_EZQRFSDNDPKQ /= 12;
        INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction003CF((INSOValidateReceipt_Strings[208]), 255, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JEXXRJDKKNCL_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_BJGLKTVBBWHP_0098001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key); \
if (INSOValidateReceipt_RJPACSZPSGIZ_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0163019E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_OWQDOMHQWMFA += 56; INSOValidateReceipt_OWQDOMHQWMFA /= 9;  \
INSOValidateReceipt_QIFQNVQRGQSG -= 51; INSOValidateReceipt_QIFQNVQRGQSG *= 4;  \
INSOValidateReceipt_EZQRFSDNDPKQ += 56; INSOValidateReceipt_EZQRFSDNDPKQ /= 12;  \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_IDENTIFIER_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[155]), 108, 49);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JEXXRJDKKNCL_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_BJGLKTVBBWHP_0098001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00BA00BD(INSOValidateReceipt_key);
        if (INSOValidateReceipt_RJPACSZPSGIZ_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // From 349 to 45
        INSOValidateReceipt_OWQDOMHQWMFA += 56; INSOValidateReceipt_OWQDOMHQWMFA /= 9;
        // From 128 to 308
        INSOValidateReceipt_QIFQNVQRGQSG -= 51; INSOValidateReceipt_QIFQNVQRGQSG *= 4;
        // From 292 to 29
        INSOValidateReceipt_EZQRFSDNDPKQ += 56; INSOValidateReceipt_EZQRFSDNDPKQ /= 12;
        INSOValidateReceipt_CFRelease_00BA00BD(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptIdentifier07F(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt identifier loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleId; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction00CCF((INSOValidateReceipt_Strings[155]), 108, 49); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_JEXXRJDKKNCL_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_BJGLKTVBBWHP_0098001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00BA00BD(INSOValidateReceipt_key); \
if (INSOValidateReceipt_RJPACSZPSGIZ_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt identifier mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_OWQDOMHQWMFA += 56; INSOValidateReceipt_OWQDOMHQWMFA /= 9;  \
INSOValidateReceipt_QIFQNVQRGQSG -= 51; INSOValidateReceipt_QIFQNVQRGQSG *= 4;  \
INSOValidateReceipt_EZQRFSDNDPKQ += 56; INSOValidateReceipt_EZQRFSDNDPKQ /= 12;  \
INSOValidateReceipt_CFRelease_00BA00BD(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptVersion
#ifndef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_QIFQNVQRGQSG_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_EZQRFSDNDPKQ_00E2001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
        if (INSOValidateReceipt_OWQDOMHQWMFA_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_015A019E(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1);
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1);
        }
        // Global variables computation
        // Set to 373
        INSOValidateReceipt_BJGLKTVBBWHP = 373;
        // From 45 to 385
        INSOValidateReceipt_OWQDOMHQWMFA -= 7; INSOValidateReceipt_OWQDOMHQWMFA *= 10; INSOValidateReceipt_OWQDOMHQWMFA += 5;
        // From 103 to 123
        INSOValidateReceipt_SRTQPOPBXFUT -= 62; INSOValidateReceipt_SRTQPOPBXFUT *= 3;
        // From 308 to 1
        INSOValidateReceipt_QIFQNVQRGQSG += 2; INSOValidateReceipt_QIFQNVQRGQSG /= 310;
        // From 308 to 449
        INSOValidateReceipt_JEXXRJDKKNCL -= 159; INSOValidateReceipt_JEXXRJDKKNCL *= 3; INSOValidateReceipt_JEXXRJDKKNCL += 2;
        // Set to 337
        INSOValidateReceipt_RJPACSZPSGIZ = 337;
        // From 243 to 366
        INSOValidateReceipt_QZUZRTTZYTGG -= 121; INSOValidateReceipt_QZUZRTTZYTGG *= 3;
        // From 29 to 410
        INSOValidateReceipt_EZQRFSDNDPKQ -= 4; INSOValidateReceipt_EZQRFSDNDPKQ *= 16; INSOValidateReceipt_EZQRFSDNDPKQ += 10;
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_QIFQNVQRGQSG_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_EZQRFSDNDPKQ_00E2001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
if (INSOValidateReceipt_OWQDOMHQWMFA_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_015A019E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1); \
} \
INSOValidateReceipt_BJGLKTVBBWHP = 373; \
INSOValidateReceipt_OWQDOMHQWMFA -= 7; INSOValidateReceipt_OWQDOMHQWMFA *= 10; INSOValidateReceipt_OWQDOMHQWMFA += 5;  \
INSOValidateReceipt_SRTQPOPBXFUT -= 62; INSOValidateReceipt_SRTQPOPBXFUT *= 3;  \
INSOValidateReceipt_QIFQNVQRGQSG += 2; INSOValidateReceipt_QIFQNVQRGQSG /= 310;  \
INSOValidateReceipt_JEXXRJDKKNCL -= 159; INSOValidateReceipt_JEXXRJDKKNCL *= 3; INSOValidateReceipt_JEXXRJDKKNCL += 2;  \
INSOValidateReceipt_RJPACSZPSGIZ = 337; \
INSOValidateReceipt_QZUZRTTZYTGG -= 121; INSOValidateReceipt_QZUZRTTZYTGG *= 3;  \
INSOValidateReceipt_EZQRFSDNDPKQ -= 4; INSOValidateReceipt_EZQRFSDNDPKQ *= 16; INSOValidateReceipt_EZQRFSDNDPKQ += 10;  \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_str1); \
}
#endif
#endif
    
#ifdef RECEIGEN_LOOSE_VERSION_CHECK
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion;
        CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16);
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_QIFQNVQRGQSG_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_EZQRFSDNDPKQ_00E2001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key);
        if (INSOValidateReceipt_OWQDOMHQWMFA_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding()));
        }
        // Global variables computation
        // Set to 373
        INSOValidateReceipt_BJGLKTVBBWHP = 373;
        // From 45 to 385
        INSOValidateReceipt_OWQDOMHQWMFA -= 7; INSOValidateReceipt_OWQDOMHQWMFA *= 10; INSOValidateReceipt_OWQDOMHQWMFA += 5;
        // From 103 to 123
        INSOValidateReceipt_SRTQPOPBXFUT -= 62; INSOValidateReceipt_SRTQPOPBXFUT *= 3;
        // From 308 to 1
        INSOValidateReceipt_QIFQNVQRGQSG += 2; INSOValidateReceipt_QIFQNVQRGQSG /= 310;
        // From 308 to 449
        INSOValidateReceipt_JEXXRJDKKNCL -= 159; INSOValidateReceipt_JEXXRJDKKNCL *= 3; INSOValidateReceipt_JEXXRJDKKNCL += 2;
        // Set to 337
        INSOValidateReceipt_RJPACSZPSGIZ = 337;
        // From 243 to 366
        INSOValidateReceipt_QZUZRTTZYTGG -= 121; INSOValidateReceipt_QZUZRTTZYTGG *= 3;
        // From 29 to 410
        INSOValidateReceipt_EZQRFSDNDPKQ -= 4; INSOValidateReceipt_EZQRFSDNDPKQ *= 16; INSOValidateReceipt_EZQRFSDNDPKQ += 10;
        INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1);
    }
#else
#define INSOValidateReceipt_CheckReceiptVersion081(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt version loosely"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleVersion; \
CFStringRef INSOValidateReceipt_str1 = INSOValidateReceipt_ObfuscationFunction008CF((INSOValidateReceipt_Strings[448]), 126, 16); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_QIFQNVQRGQSG_00980134(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_str2 = (CFStringRef) INSOValidateReceipt_EZQRFSDNDPKQ_00E2001D((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_key); \
if (INSOValidateReceipt_OWQDOMHQWMFA_0098002D(INSOValidateReceipt_str1, INSOValidateReceipt_str2, 0) != kCFCompareEqualTo) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt version mismatch (expecting '%s' but actual value is '%s')", CFStringGetCStringPtr(INSOValidateReceipt_str1, CFStringGetSystemEncoding()), CFStringGetCStringPtr(INSOValidateReceipt_str2, CFStringGetSystemEncoding())); \
} \
INSOValidateReceipt_BJGLKTVBBWHP = 373; \
INSOValidateReceipt_OWQDOMHQWMFA -= 7; INSOValidateReceipt_OWQDOMHQWMFA *= 10; INSOValidateReceipt_OWQDOMHQWMFA += 5;  \
INSOValidateReceipt_SRTQPOPBXFUT -= 62; INSOValidateReceipt_SRTQPOPBXFUT *= 3;  \
INSOValidateReceipt_QIFQNVQRGQSG += 2; INSOValidateReceipt_QIFQNVQRGQSG /= 310;  \
INSOValidateReceipt_JEXXRJDKKNCL -= 159; INSOValidateReceipt_JEXXRJDKKNCL *= 3; INSOValidateReceipt_JEXXRJDKKNCL += 2;  \
INSOValidateReceipt_RJPACSZPSGIZ = 337; \
INSOValidateReceipt_QZUZRTTZYTGG -= 121; INSOValidateReceipt_QZUZRTTZYTGG *= 3;  \
INSOValidateReceipt_EZQRFSDNDPKQ -= 4; INSOValidateReceipt_EZQRFSDNDPKQ *= 16; INSOValidateReceipt_EZQRFSDNDPKQ += 10;  \
INSOValidateReceipt_CFRelease_00BA001F(INSOValidateReceipt_str1); \
}
#endif
#endif
    
    
    // CodeBlock CheckReceiptHash
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptHash090(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3;
        CFMutableDataRef INSOValidateReceipt_data4;
        unsigned char INSOValidateReceipt_digest[483];
        volatile int INSOValidateReceipt_counter = 17; INSOValidateReceipt_counter -= 11; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value;
        CFNumberRef INSOValidateReceipt_key;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash");
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue;
        INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData;
        INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
        INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash;
        INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key);
        INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_00BA0072(NULL, 0);
        INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_00BA0189((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data1));
        INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data2));
        INSOValidateReceipt_SHA1_01CE0070(INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data4), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data4), INSOValidateReceipt_digest);
        INSOValidateReceipt_OpenSSL_add_all_digests_00E000A3();
        EVP_MD_CTX INSOValidateReceipt_hashctx2;
        INSOValidateReceipt_EVP_MD_CTX_init_00E0016D(&INSOValidateReceipt_hashctx2);
        const EVP_MD *INSOValidateReceipt_digester = EVP_sha1();
        INSOValidateReceipt_EVP_DigestInit_01CE01A4(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digester);
        INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189((CFDataRef) INSOValidateReceipt_ctx->guid_data));
        INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data1));
        INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data2));
        INSOValidateReceipt_EVP_DigestFinal_00E00082(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digest, NULL);
        const unsigned char *INSOValidateReceipt_ptr1 = INSOValidateReceipt_digest;
        const unsigned char *INSOValidateReceipt_ptr2 = INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data3);
        while(--INSOValidateReceipt_counter >= 0) {
            if ((*INSOValidateReceipt_ptr1++) != (*INSOValidateReceipt_ptr2++)) {
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid");
                INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4);
                __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
                INSOValidateReceipt_longjmp_0163019E(INSOValidateReceipt_JumpBuf, 1);
                // Dead code
                INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data1);
                INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data2);
                INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4);
                goto INSOValidateReceipt_CheckReceiptHash090_INSOValidateReceipt_bail;
            }
        }
        // Global variables computation
        // From 373 to 204
        INSOValidateReceipt_BJGLKTVBBWHP += 239; INSOValidateReceipt_BJGLKTVBBWHP /= 3;
        // From 123 to 81
        INSOValidateReceipt_SRTQPOPBXFUT += 120; INSOValidateReceipt_SRTQPOPBXFUT /= 3;
        // From 1 to 209
        INSOValidateReceipt_QIFQNVQRGQSG -= 1; INSOValidateReceipt_QIFQNVQRGQSG *= 211; INSOValidateReceipt_QIFQNVQRGQSG += 209;
        // From 449 to 242
        INSOValidateReceipt_JEXXRJDKKNCL += 277; INSOValidateReceipt_JEXXRJDKKNCL /= 3;
        // From 410 to 73
        INSOValidateReceipt_EZQRFSDNDPKQ += 101; INSOValidateReceipt_EZQRFSDNDPKQ /= 7;
    INSOValidateReceipt_CheckReceiptHash090_INSOValidateReceipt_bail:
        INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4);
    }
#else
#define INSOValidateReceipt_CheckReceiptHash090(INSOValidateReceipt_ctx) { \
CFDataRef INSOValidateReceipt_data1, INSOValidateReceipt_data2, INSOValidateReceipt_data3; \
CFMutableDataRef INSOValidateReceipt_data4; \
unsigned char INSOValidateReceipt_digest[483]; \
volatile int INSOValidateReceipt_counter = 17; INSOValidateReceipt_counter -= 11; INSOValidateReceipt_counter *= 3; INSOValidateReceipt_counter += 2;  \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value; \
CFNumberRef INSOValidateReceipt_key; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt hash"); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeOpaqueValue; \
INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data1 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeBundleIdData; \
INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data2 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeHash; \
INSOValidateReceipt_key = INSOValidateReceipt_RJPACSZPSGIZ_00E20151(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
INSOValidateReceipt_data3 = (CFDataRef) INSOValidateReceipt_CFDictionaryGetValue_00BA0049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_key); \
INSOValidateReceipt_data4 = INSOValidateReceipt_CFDataCreateMutable_00BA0072(NULL, 0); \
INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4((CFDataRef) INSOValidateReceipt_ctx->guid_data), INSOValidateReceipt_CFDataGetLength_00BA0189((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data1), INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data1)); \
INSOValidateReceipt_OWQDOMHQWMFA_00BA0181(INSOValidateReceipt_data4, INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data2), INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data2)); \
INSOValidateReceipt_SHA1_01CE0070(INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data4), (CC_LONG) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data4), INSOValidateReceipt_digest); \
INSOValidateReceipt_OpenSSL_add_all_digests_00E000A3(); \
EVP_MD_CTX INSOValidateReceipt_hashctx2; \
INSOValidateReceipt_EVP_MD_CTX_init_00E0016D(&INSOValidateReceipt_hashctx2); \
const EVP_MD *INSOValidateReceipt_digester = EVP_sha1(); \
INSOValidateReceipt_EVP_DigestInit_01CE01A4(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digester); \
INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4((CFDataRef) INSOValidateReceipt_ctx->guid_data), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189((CFDataRef) INSOValidateReceipt_ctx->guid_data)); \
INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data1), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data1)); \
INSOValidateReceipt_EVP_DigestUpdate_011C0166(&INSOValidateReceipt_hashctx2, (const void *) INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data2), (size_t) INSOValidateReceipt_CFDataGetLength_00BA0189(INSOValidateReceipt_data2)); \
INSOValidateReceipt_EVP_DigestFinal_00E00082(&INSOValidateReceipt_hashctx2, INSOValidateReceipt_digest, NULL); \
const unsigned char *INSOValidateReceipt_ptr1 = INSOValidateReceipt_digest; \
const unsigned char *INSOValidateReceipt_ptr2 = INSOValidateReceipt_CFDataGetBytePtr_009800F4(INSOValidateReceipt_data3); \
while(--INSOValidateReceipt_counter >= 0) { \
if ((*INSOValidateReceipt_ptr1++) != (*INSOValidateReceipt_ptr2++)) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt hash is invalid"); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_0163019E(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data1); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data2); \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4); \
goto INSOValidateReceipt_CheckReceiptHash090_INSOValidateReceipt_bail; \
} \
} \
INSOValidateReceipt_BJGLKTVBBWHP += 239; INSOValidateReceipt_BJGLKTVBBWHP /= 3;  \
INSOValidateReceipt_SRTQPOPBXFUT += 120; INSOValidateReceipt_SRTQPOPBXFUT /= 3;  \
INSOValidateReceipt_QIFQNVQRGQSG -= 1; INSOValidateReceipt_QIFQNVQRGQSG *= 211; INSOValidateReceipt_QIFQNVQRGQSG += 209;  \
INSOValidateReceipt_JEXXRJDKKNCL += 277; INSOValidateReceipt_JEXXRJDKKNCL /= 3;  \
INSOValidateReceipt_EZQRFSDNDPKQ += 101; INSOValidateReceipt_EZQRFSDNDPKQ /= 7;  \
INSOValidateReceipt_CheckReceiptHash090_INSOValidateReceipt_bail: \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_data4); \
}
#endif
    
    
    // CodeBlock CheckReceiptExpirationDate
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date");
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate;
        CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_QIFQNVQRGQSG_009800D1(NULL, INSOValidateReceipt_JEXXRJDKKNCL_00E200F2());
        CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BJGLKTVBBWHP_009800CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_EZQRFSDNDPKQ_00980049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key);
        INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key);
        if (INSOValidateReceipt_date2 && INSOValidateReceipt_SRTQPOPBXFUT_00980051(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) {
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired");
            __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing...");
            INSOValidateReceipt_longjmp_01630105(INSOValidateReceipt_JumpBuf, 1);
            // Dead code
            INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1);
            INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key);
            INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1);
        }
        // Global variables computation
        // From 385 to 5
        INSOValidateReceipt_OWQDOMHQWMFA += 10; INSOValidateReceipt_OWQDOMHQWMFA /= 79;
        // Set to 204
        INSOValidateReceipt_SRTQPOPBXFUT = 204;
        // From 242 to 42
        INSOValidateReceipt_JEXXRJDKKNCL += 52; INSOValidateReceipt_JEXXRJDKKNCL /= 7;
        // From 366 to 249
        INSOValidateReceipt_QZUZRTTZYTGG += 132; INSOValidateReceipt_QZUZRTTZYTGG /= 2;
        // From 73 to 124
        INSOValidateReceipt_EZQRFSDNDPKQ -= 32; INSOValidateReceipt_EZQRFSDNDPKQ *= 3; INSOValidateReceipt_EZQRFSDNDPKQ += 1;
        INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1);
    }
#else
#define INSOValidateReceipt_CheckReceiptExpirationDate0A6(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking receipt expiration date"); \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeExpirationDate; \
CFDateRef INSOValidateReceipt_date1 = INSOValidateReceipt_QIFQNVQRGQSG_009800D1(NULL, INSOValidateReceipt_JEXXRJDKKNCL_00E200F2()); \
CFNumberRef INSOValidateReceipt_key = INSOValidateReceipt_BJGLKTVBBWHP_009800CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFDateRef INSOValidateReceipt_date2 = (CFDateRef) INSOValidateReceipt_EZQRFSDNDPKQ_00980049((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key); \
if (INSOValidateReceipt_date2 && INSOValidateReceipt_SRTQPOPBXFUT_00980051(INSOValidateReceipt_date1, INSOValidateReceipt_date2, 0) == kCFCompareGreaterThan) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Receipt has expired"); \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Doing nothing..."); \
INSOValidateReceipt_longjmp_01630105(INSOValidateReceipt_JumpBuf, 1); \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1); \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_key); \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1); \
} \
INSOValidateReceipt_OWQDOMHQWMFA += 10; INSOValidateReceipt_OWQDOMHQWMFA /= 79;  \
INSOValidateReceipt_SRTQPOPBXFUT = 204; \
INSOValidateReceipt_JEXXRJDKKNCL += 52; INSOValidateReceipt_JEXXRJDKKNCL /= 7;  \
INSOValidateReceipt_QZUZRTTZYTGG += 132; INSOValidateReceipt_QZUZRTTZYTGG /= 2;  \
INSOValidateReceipt_EZQRFSDNDPKQ -= 32; INSOValidateReceipt_EZQRFSDNDPKQ *= 3; INSOValidateReceipt_EZQRFSDNDPKQ += 1;  \
INSOValidateReceipt_CFRelease_009800BD(INSOValidateReceipt_date1); \
}
#endif
    
    
    // CodeBlock InAppChecker
#ifdef DEBUG
    inline static void INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2;
        CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2;
        INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase;
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases");
        INSOValidateReceipt_key1 = INSOValidateReceipt_SRTQPOPBXFUT_00BA00CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
        // Extract InApp Purchase
        CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers;
        CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_JEXXRJDKKNCL_0098002A((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1);
        if (INSOValidateReceipt_purchases) {
            // If purchases were found, iterate over the identifiers to test them
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                Boolean INSOValidateReceipt_found = false;
                // Iterate over the purchases
                for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) {
                    CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_purchases, INSOValidateReceipt_index2);
                    INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer;
                    INSOValidateReceipt_key2 = INSOValidateReceipt_SRTQPOPBXFUT_00BA00CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value);
                    CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_JEXXRJDKKNCL_0098002A(INSOValidateReceipt_purchase, INSOValidateReceipt_key2);
                    INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_key2);
                    // If a purchase match the identifier, invoke the callback with the purchase info
                    if (INSOValidateReceipt_EZQRFSDNDPKQ_00BA007C(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) {
                        INSOValidateReceipt_found |= true;
                        (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase));
                    }
                }
                // If no purchase match the identifier, invoke the callback
                if (!INSOValidateReceipt_found) {
                    (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
                }
            }
        } else {
            // If no purchases were found, iterate over the INSOValidateReceipt_idents and call the block back
            for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) {
                CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_idents, INSOValidateReceipt_index1);
                (__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL);
            }
        }
        INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_key1);
    }
#else
#define INSOValidateReceipt_InAppChecker0A9(INSOValidateReceipt_ctx) { \
CFIndex INSOValidateReceipt_index1, INSOValidateReceipt_index2; \
CFNumberRef INSOValidateReceipt_key1, INSOValidateReceipt_key2; \
INSOValidateReceipt_ReceiptAttributeType INSOValidateReceipt_value = INSOValidateReceipt_StoreReceiptAttributeTypeInAppPurchase; \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Checking InApp purchases"); \
INSOValidateReceipt_key1 = INSOValidateReceipt_SRTQPOPBXFUT_00BA00CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFArrayRef INSOValidateReceipt_idents = (CFArrayRef) INSOValidateReceipt_ctx->inapp_identifiers; \
CFArrayRef INSOValidateReceipt_purchases = (CFArrayRef) INSOValidateReceipt_JEXXRJDKKNCL_0098002A((CFDictionaryRef) INSOValidateReceipt_ctx->receipt_dict, INSOValidateReceipt_key1); \
if (INSOValidateReceipt_purchases) { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
Boolean INSOValidateReceipt_found = false; \
for(INSOValidateReceipt_index2 = 0; INSOValidateReceipt_index2 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_purchases); INSOValidateReceipt_index2++) { \
CFDictionaryRef INSOValidateReceipt_purchase = (CFDictionaryRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_purchases, INSOValidateReceipt_index2); \
INSOValidateReceipt_value = INSOValidateReceipt_StoreInAppAttributeTypeProductIdentifer; \
INSOValidateReceipt_key2 = INSOValidateReceipt_SRTQPOPBXFUT_00BA00CC(NULL, kCFNumberIntType, &INSOValidateReceipt_value); \
CFStringRef INSOValidateReceipt_product_identifier = (CFStringRef) INSOValidateReceipt_JEXXRJDKKNCL_0098002A(INSOValidateReceipt_purchase, INSOValidateReceipt_key2); \
INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_key2); \
if (INSOValidateReceipt_EZQRFSDNDPKQ_00BA007C(INSOValidateReceipt_ident, INSOValidateReceipt_product_identifier, 0) == kCFCompareEqualTo) { \
INSOValidateReceipt_found |= true; \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), true, __SAFE_CAST(NSDictionary *, INSOValidateReceipt_purchase)); \
} \
} \
if (!INSOValidateReceipt_found) { \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
} else { \
for(INSOValidateReceipt_index1 = 0; INSOValidateReceipt_index1 < INSOValidateReceipt_OWQDOMHQWMFA_00BA0005(INSOValidateReceipt_idents); INSOValidateReceipt_index1++) { \
CFStringRef INSOValidateReceipt_ident = (CFStringRef) INSOValidateReceipt_QZUZRTTZYTGG_00E200F9(INSOValidateReceipt_idents, INSOValidateReceipt_index1); \
(__SAFE_CAST(INSOValidateReceipt_InAppValidateBlock, INSOValidateReceipt_ctx->inapp_block))(__SAFE_CAST(NSString *, INSOValidateReceipt_ident), false, NULL); \
} \
} \
INSOValidateReceipt_CFRelease_0098001F(INSOValidateReceipt_key1);                     \
}
#endif
    
    
    // CodeBlock CleanUp
#ifdef DEBUG
    inline static void INSOValidateReceipt_CleanUp0AB(INSOValidateReceipt_CheckingContext *INSOValidateReceipt_ctx) {
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up");
        if (INSOValidateReceipt_ctx->receipt_data) {
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->receipt_data);
            INSOValidateReceipt_ctx->receipt_data = NULL;
        }
        if (INSOValidateReceipt_ctx->guid_data) {
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->guid_data);
            INSOValidateReceipt_ctx->guid_data = NULL;
        }
        if (INSOValidateReceipt_ctx->receipt_dict) {
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->receipt_dict);
            INSOValidateReceipt_ctx->receipt_dict = NULL;
        }
        if (INSOValidateReceipt_ctx->ca_data) {
            INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->ca_data);
            INSOValidateReceipt_ctx->ca_data = NULL;
        }
    }
#else
#define INSOValidateReceipt_CleanUp0AB(INSOValidateReceipt_ctx) { \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Cleaning up"); \
if (INSOValidateReceipt_ctx->receipt_data) { \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->receipt_data); \
INSOValidateReceipt_ctx->receipt_data = NULL; \
} \
if (INSOValidateReceipt_ctx->guid_data) { \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->guid_data); \
INSOValidateReceipt_ctx->guid_data = NULL; \
} \
if (INSOValidateReceipt_ctx->receipt_dict) { \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->receipt_dict); \
INSOValidateReceipt_ctx->receipt_dict = NULL; \
} \
if (INSOValidateReceipt_ctx->ca_data) { \
INSOValidateReceipt_CFRelease_00E2001F(INSOValidateReceipt_ctx->ca_data); \
INSOValidateReceipt_ctx->ca_data = NULL; \
} \
}
#endif
    
    
    
    
    // CodeBlock EntryPoint
#ifdef DEBUG
    inline static void INSOValidateReceipt_CheckInAppPurchases(NSArray *_inapp_identifiers, INSOValidateReceipt_InAppValidateBlock _inapp_block) {
        _Pragma("clang diagnostic push")
        _Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"")
        __INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point");
        // Create contexts
        INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL };
        // The InApp purchase identifiers and the callback block
        INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers);
        INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block);
        if (!INSOValidateReceipt_setjmp_015A0048(INSOValidateReceipt_JumpBuf)) {
            // Jump to first step
            goto INSOValidateReceipt_INSOValidateReceipt_label00;
        INSOValidateReceipt_INSOValidateReceipt_label04:
            INSOValidateReceipt_CheckBundleVersion061((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label05;
        INSOValidateReceipt_INSOValidateReceipt_label02:
            INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label03;
        INSOValidateReceipt_INSOValidateReceipt_label09:
            INSOValidateReceipt_CheckReceiptHash090((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label0A;
        INSOValidateReceipt_INSOValidateReceipt_label0B:
            INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label0C;
        INSOValidateReceipt_INSOValidateReceipt_label0C:
            INSOValidateReceipt_CleanUp0AB((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label0D;
        INSOValidateReceipt_INSOValidateReceipt_label01:
            INSOValidateReceipt_LoadReceipt040((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label02;
        INSOValidateReceipt_INSOValidateReceipt_label03:
            INSOValidateReceipt_CheckBundleIdentifier05C((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label04;
        INSOValidateReceipt_INSOValidateReceipt_label0A:
            INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label0B;
        INSOValidateReceipt_INSOValidateReceipt_label07:
            INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label08;
        INSOValidateReceipt_INSOValidateReceipt_label00:
            INSOValidateReceipt_GetMainBundle016((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label01;
        INSOValidateReceipt_INSOValidateReceipt_label08:
            INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label09;
        INSOValidateReceipt_INSOValidateReceipt_label06:
            INSOValidateReceipt_CheckReceiptSignature06B((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label07;
        INSOValidateReceipt_INSOValidateReceipt_label05:
            INSOValidateReceipt_GetReceiptInformation064((&INSOValidateReceipt_ctx1));
            goto INSOValidateReceipt_INSOValidateReceipt_label06;
        INSOValidateReceipt_INSOValidateReceipt_label0D:
            while(false);
        }
        _Pragma("clang diagnostic pop")
    }
#else
#define INSOValidateReceipt_CheckInAppPurchases(_inapp_identifiers, _inapp_block) { \
_Pragma("clang diagnostic push") \
_Pragma("clang diagnostic ignored \"-Wused-but-marked-unused\"") \
__INSOValidateReceipt_RECEIPT_LOG("INSOValidateReceipt - Entry point"); \
INSOValidateReceipt_CheckingContext INSOValidateReceipt_ctx1 = { NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }; \
INSOValidateReceipt_ctx1.inapp_identifiers = __SAFE_CAST(CFTypeRef, _inapp_identifiers); \
INSOValidateReceipt_ctx1.inapp_block = __SAFE_CAST(CFTypeRef, (INSOValidateReceipt_InAppValidateBlock) _inapp_block); \
if (!INSOValidateReceipt_setjmp_015A0048(INSOValidateReceipt_JumpBuf)) { \
goto INSOValidateReceipt_INSOValidateReceipt_label00; \
INSOValidateReceipt_INSOValidateReceipt_label04: \
INSOValidateReceipt_CheckBundleVersion061((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label05; \
INSOValidateReceipt_INSOValidateReceipt_label02: \
INSOValidateReceipt_GetGUID04D((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label03; \
INSOValidateReceipt_INSOValidateReceipt_label09: \
INSOValidateReceipt_CheckReceiptHash090((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label0A; \
INSOValidateReceipt_INSOValidateReceipt_label0B: \
INSOValidateReceipt_InAppChecker0A9((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label0C; \
INSOValidateReceipt_INSOValidateReceipt_label0C: \
INSOValidateReceipt_CleanUp0AB((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label0D; \
INSOValidateReceipt_INSOValidateReceipt_label01: \
INSOValidateReceipt_LoadReceipt040((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label02; \
INSOValidateReceipt_INSOValidateReceipt_label03: \
INSOValidateReceipt_CheckBundleIdentifier05C((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label04; \
INSOValidateReceipt_INSOValidateReceipt_label0A: \
INSOValidateReceipt_CheckReceiptExpirationDate0A6((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label0B; \
INSOValidateReceipt_INSOValidateReceipt_label07: \
INSOValidateReceipt_CheckReceiptIdentifier07F((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label08; \
INSOValidateReceipt_INSOValidateReceipt_label00: \
INSOValidateReceipt_GetMainBundle016((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label01; \
INSOValidateReceipt_INSOValidateReceipt_label08: \
INSOValidateReceipt_CheckReceiptVersion081((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label09; \
INSOValidateReceipt_INSOValidateReceipt_label06: \
INSOValidateReceipt_CheckReceiptSignature06B((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label07; \
INSOValidateReceipt_INSOValidateReceipt_label05: \
INSOValidateReceipt_GetReceiptInformation064((&INSOValidateReceipt_ctx1)); \
goto INSOValidateReceipt_INSOValidateReceipt_label06; \
INSOValidateReceipt_INSOValidateReceipt_label0D: \
while(false); \
} \
_Pragma("clang diagnostic pop") \
}
#endif
    
    
    
    
    // Pop the new diagnostic context
#pragma clang diagnostic pop
    
    // C++ epilogue
#ifdef __cplusplus
}
#endif

